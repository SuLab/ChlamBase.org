# the upstream component nginx needs to connect to
upstream django {
    #server unix:///home/ubuntu/mysite/mysite.sock; # for a file socket
    server 127.0.0.1:8002; # for a web port socket (we'll use this first)
}

# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  max;
    text/css                   max;
    application/javascript     604800;
    application/json           3600;
    ~image/                    max;
}

server {
    listen 80;
    listen [::]:80;
    server_name myxobase.org;
    return 301 https://$host$request_uri;
    #rewrite     ^   https://$host$request_uri? permanent;
}

# configuration of the server
server {

    #gzip compression
    gzip            on;
    gzip_min_length 20;
    gzip_proxied    any;
    gzip_types      *;
    gzip_vary on;

    # the port your site will be served on
    #listen      80;

    # the domain name it will serve for
#    server_name 13.58.104.209; # substitute your machine's IP address or FQDN
    server_name *.myxobase.org myxobase.org;  
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
        alias /home/ubuntu/myxo_production/wiki/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /home/ubuntu/myxo_production/wiki/static; # your Django project's static files - amend as required
    }

    location /expasy/ {
        proxy_pass https://enzyme.expasy.org:443/;
        proxy_redirect off;
        proxy_ssl_session_reuse off;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	#add_header "Vary" "Origin";
	
    	# CORS header
    	#if ($request_method ~* "(GET|POST)") {
      	#  add_header "Access-Control-Allow-Origin"  *;
    	#}

    	# Preflighted requests
    	#if ($request_method = OPTIONS ) {
      	#  add_header "Access-Control-Allow-Origin"  *;
      	#  add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      	#  add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
      	#  return 200;
    	#}
	uwsgi_pass  django;
        include     /home/ubuntu/myxo_production/uwsgi_params; # the uwsgi_params file you installed
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dev.chlambase.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.chlambase.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    
    # for browser caching
    expires $expires;
} 
