angular.module("mainPage").component("mainPage",{controller:["$filter","$routeParams","$location","allChlamOrgs","wdGetEntities","entrez2QID","GOTerms","InterPro","OperonData","expasyData","mutantData","locusTag2Pub","locusTag2QID","sendToView","expressionTimingData","hostPathogen","RefSeqChrom","allOrgGenes","$http",function(t,e,r,n,o,a,i,u,s,c,l,g,p,m,d,h,v,f,G){var b=this;r.path().includes("authorized")&&(console.log("Is authorized"),G.get("validateSession").then(function(e){if(console.log("Login: "+e.data.login),!e.data.login)return alert("Your session has expired!"),void r.path(r.path().replace("authorized/",""))})),b.$onInit=function(){"use strict";b.currentTaxid=e.taxid,b.currentLocusTag=e.locusTag,b.currentGene={locusTag:b.currentLocusTag,taxid:b.currentTaxid},b.annotations={ecnumber:[]},f.getAllOrgGenes(b.currentTaxid).then(function(e){var n=e.data.results.bindings;b.currentAllGenes=t("orderObjectBy")(n,"genStart")}),n.getAllOrgs(function(e){b.orgList=e,b.currentOrg=t("getJsonItemOrg")("taxid",b.currentTaxid,b.orgList),null==b.currentOrg&&(alert("not a valid taxonomy id"),r.path("/"))}),b.hasprotein=!0,p.getLocusTag2QID(b.currentLocusTag,b.currentTaxid).then(function(e){var n=e.data.results.bindings;0<n.length?(b.currentGene.geneQID=t("parseQID")(n[0].gene.value),n[0].protein?b.currentGene.proteinQID=t("parseQID")(n[0].protein.value):b.hasprotein=!1):(alert(b.currentLocusTag+" doesn't seem to be a gene in this genome."),r.path("/organism/"+b.currentTaxid))}).finally(function(){o.wdGetEntities(b.currentGene.geneQID).then(function(e){var n=e.entities[b.currentGene.geneQID];b.currentGene.entrez=n.claims.P351[0].mainsnak.datavalue.value,b.currentGene.geneLabel=n.labels.en.value,b.currentGene.locusTag=n.claims.P2393[0].mainsnak.datavalue.value,b.currentGene.geneDescription=n.descriptions.en.value,b.currentGene.genStart=n.claims.P644[0].mainsnak.datavalue.value,b.currentGene.genEnd=n.claims.P645[0].mainsnak.datavalue.value,b.currentGene.strand=n.claims.P2548[0].mainsnak.datavalue.value,b.currentGene.geneType=n.claims.P279[0].mainsnak.datavalue.value,b.currentGene.geneAliases=[],angular.forEach(n.aliases.en,function(e){e.value!=b.currentGene.locusTag&&b.currentGene.geneAliases.push(e.value)})}),b.currentGene.proteinQID&&o.wdGetEntities(b.currentGene.proteinQID).then(function(e){var n=e.entities[b.currentGene.proteinQID];b.currentGene.proteinLabel=n.labels.en.value,b.currentGene.description=n.descriptions.en.value,b.currentGene.uniprot=n.claims.P352[0].mainsnak.datavalue.value,b.currentGene.refseqProt=n.claims.P637[0].mainsnak.datavalue.value,b.currentGene.productType=n.claims.P279[0].mainsnak.datavalue.value,b.currentGene.proteinAliases=[],angular.forEach(n.aliases.en,function(e){b.currentGene.proteinAliases.push(e.value)}),u.getInterPro(b.currentGene.uniprot).then(function(e){b.ipData=e,b.annotations.interpro=e}),h.getHostPathogen(b.currentGene.uniprot).then(function(e){b.hostpathData=e,b.annotations.hostpath=e}),i.getGoTerms(b.currentGene.uniprot).then(function(e){b.annotations.go={cellcomp:[],bioproc:[],molfunc:[]},b.annotations.reaction={},b.mf="mf_button",b.bp="bp_button",b.cc="cc_button";var n=e.data.results.bindings;angular.forEach(n,function(e,n){e.hasOwnProperty("ecnumber")&&-1==b.annotations.ecnumber.indexOf(e.ecnumber.value)&&b.annotations.ecnumber.push(e.ecnumber.value),"http://www.wikidata.org/entity/Q5058355"===e.goclass.value&&b.annotations.go.cellcomp.push(e),"http://www.wikidata.org/entity/Q14860489"===e.goclass.value&&b.annotations.go.molfunc.push(e),"http://www.wikidata.org/entity/Q2996394"===e.goclass.value&&b.annotations.go.bioproc.push(e)}),angular.forEach(b.annotations.ecnumber,function(e){-1===e.indexOf("-")&&-1!=e.indexOf(".")&&c.getReactionData(e).then(function(e){console.log(e),b.annotations.reaction[e.ecnumber]=e.reaction})});var t={locusTag:b.currentGene.locusTag,taxid:b.currentGene.taxid,ec_number:b.annotations.ecnumber};a(t)})}),s.getOperonData(b.currentGene.entrez).then(function(e){var n=e.data.results.bindings;0<n.length?(b.annotations.currentOperon=n[0].operonItemLabel.value,b.opData=n,b.annotations.operons=n):(b.opData=[],b.annotations.operons=[])}),v.getRefSeqChrom(b.currentLocusTag).then(function(e){console.log(e),e[0]&&(b.currentGene.refseqGenome=e[0].refSeqChromosome.value)}),d.getExpression(function(e){b.expression=e;var n=t("keywordFilter")(e,b.currentLocusTag);b.currentExpression={},angular.forEach(n[0],function(e,n){"_id"!=n&&"$oid"!=n&&"timestamp"!=n&&(b.currentExpression[n]=e)}),b.annotations.expression=b.currentExpression});var e=b.currentGene.locusTag.replace("_","");g.getlocusTag2Pub(e).then(function(e){b.annotations.pubList=e.data.resultList.result})});var a=function(e){var n=r.path()+"/mg_mutant_view";m.sendToView(n,e).then(function(e){b.annotations.mutants={mutants:e.data.mutants,refseq:b.currentGene.refseqGenome}})}}}],templateUrl:"/static/wiki/js/angular_templates/main-page_new.html"});