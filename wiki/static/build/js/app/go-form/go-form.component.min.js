angular.module("goForm").component("goForm",{controller:function($routeParams,$filter,$location,evidenceCodes,sendToView,pubMedData,allGoTerms,locusTag2QID,orthoData){var ctrl=this;ctrl.currentTaxid=$routeParams.taxid,ctrl.currentLocusTag=$routeParams.locusTag,ctrl.pageCount=0;var goClassMap={mf_button:{name:"Molecular Function",QID:"Q14860489"},cc_button:{name:"Cellular Component",QID:"Q5058355"},bp_button:{name:"Biological Process",QID:"Q2996394"}};ctrl.goFormModel={evi:null,pub:null,go:null,proteinQID:null,goClass:goClassMap[ctrl.goclass].QID},evidenceCodes.getevidenceCodes(function(data){ctrl.evidence=data}),ctrl.data={},ctrl.projection={},orthoData.getOrthologs(ctrl.currentLocusTag).then(function(response){angular.forEach(response.results.bindings,function(obj){var tax=obj.orthoTaxid.value,tag=obj.orthoLocusTag.value;ctrl.projection[tax]=!1,ctrl.data[tax]=tag})}),ctrl.select=function(checked,value){ctrl.projection[value]=checked},ctrl.nextClick=function(){ctrl.pageCount+=1},ctrl.backClick=function(){ctrl.pageCount-=1},ctrl.selectGoTerm=function($item,$model,$label){ctrl.goFormModel.go=$item,ctrl.goValue=""},ctrl.selectPub=function($item,$model,$label){ctrl.goFormModel.pub=$item,ctrl.pubValue=""},ctrl.getGoTermsAll=function(val){return ctrl.goTermLoading=!0,allGoTerms.getGoTermsAll(val,goClassMap[ctrl.goclass].QID).then(function(data){return data.data.results.bindings.map(function(item){return item})}).finally(function(){ctrl.goTermLoading=!1})},ctrl.getPMID=function(val){return pubMedData.getPMID(val).then(function(data){return[data.data.result[val]].map(function(item){return item})})},ctrl.resetForm=function(){ctrl.pageCount=0,ctrl.goFormModel.evi=null,ctrl.goFormModel.pub=null,ctrl.goFormModel.go=null},ctrl.validateFields=function(){if(ctrl.goFormModel.evi&&ctrl.goFormModel.pub&&ctrl.goFormModel.go)return!0},ctrl.sendData=function(){ctrl.loading=!0;var index=0,success=!0,authorize=!1;console.log(ctrl.projection),angular.forEach(ctrl.projection,function(value,key){console.log(value),value?locusTag2QID.getLocusTag2QID(ctrl.data[key],key).then(function(data){var formData={evi:ctrl.goFormModel.evi,pub:ctrl.goFormModel.pub,go:ctrl.goFormModel.go,proteinQID:null,goClass:ctrl.goFormModel.goClass};ctrl.geneQID=$filter("parseQID")(data.data.results.bindings[0].gene.value),data.data.results.bindings[0].protein&&(formData.proteinQID=$filter("parseQID")(data.data.results.bindings[0].protein.value));var url_suf="/organism/"+key+"/gene/"+ctrl.data[key]+"/wd_go_edit";console.log(url_suf),sendToView.sendToView(url_suf,formData).then(function(data){!1===data.data.authentication?success=!(authorize=!0):data.data.write_success||(success=!1)}).finally(function(){++index==Object.keys(ctrl.projection).length&&(success?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),ctrl.resetForm()):authorize?(console.log("FAILURE: AUTHENTICATION"),console.log(data),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),ctrl.loading=!1)})}):++index==Object.keys(ctrl.projection).length&&(success?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),ctrl.resetForm()):authorize?(console.log("FAILURE: AUTHENTICATION"),console.log(data),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),ctrl.loading=!1)})}},templateUrl:"/static/wiki/js/angular_templates/guided-go-form.html",bindings:{goclass:"<",gene:"<"}});