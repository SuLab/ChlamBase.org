angular.module("goForm").component("goForm",{controller:["$routeParams","$filter","$location","evidenceCodes","sendToView","pubMedData","allGoTerms","locusTag2QID","orthoData",function(o,i,n,e,u,t,a,g,l){var s=this;s.currentTaxid=o.taxid,s.currentLocusTag=o.locusTag,s.pageCount=0;var r={mf_button:{name:"Molecular Function",QID:"Q14860489"},cc_button:{name:"Cellular Component",QID:"Q5058355"},bp_button:{name:"Biological Process",QID:"Q2996394"}};s.goFormModel={evi:null,pub:null,go:null,proteinQID:null,goClass:r[s.goclass].QID},e.getevidenceCodes(function(o){s.evidence=o}),s.data={},s.projection={},l.getOrthologs(s.currentLocusTag).then(function(o){angular.forEach(o.results.bindings,function(o){var e=o.orthoTaxid.value,n=o.orthoLocusTag.value;s.projection[e]=n==s.currentLocusTag,s.data[e]=n})}),s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.selectGoTerm=function(o,e,n){s.goFormModel.go=o,s.goValue=""},s.selectPub=function(o,e,n){s.goFormModel.pub=o,s.pubValue=""},s.getGoTermsAll=function(o){return s.goTermLoading=!0,a.getGoTermsAll(o,r[s.goclass].QID).then(function(o){return o.data.results.bindings.map(function(o){return o})}).finally(function(){s.goTermLoading=!1})},s.getPMID=function(e){return t.getPMID(e).then(function(o){return[o.data.result[e]].map(function(o){return o})})},s.resetForm=function(){s.pageCount=0,s.goFormModel.evi=null,s.goFormModel.pub=null,s.goFormModel.go=null},s.validateFields=function(){if(s.goFormModel.evi&&s.goFormModel.pub&&s.goFormModel.go)return!0},s.sendData=function(){s.loading=!0;var a=0,l=!0,r=!1,e=!1;return angular.forEach(s.projection,function(o){1==o&&(e=!0)}),e?n.path().includes("authorized")?void angular.forEach(s.projection,function(o,t){o?g.getLocusTag2QID(s.data[t],t).then(function(o){var e={evi:s.goFormModel.evi,pub:s.goFormModel.pub,go:s.goFormModel.go,proteinQID:null,goClass:s.goFormModel.goClass};o.data.results.bindings[0].protein&&(e.proteinQID=i("parseQID")(o.data.results.bindings[0].protein.value));var n="/organism/"+t+"/gene/"+s.data[t]+"/wd_go_edit";console.log(n),u.sendToView(n,e).then(function(o){!1===o.data.authentication?l=!(r=!0):o.data.write_success||(l=!1)}).finally(function(){++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)})}):++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(s.loading=!1)):(alert("Please select at least one gene to annotate!"),void(s.loading=!1))}}],templateUrl:"/static/wiki/js/angular_templates/guided-go-form.html",bindings:{goclass:"<",gene:"<"}});