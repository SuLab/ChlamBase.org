angular.module("filters").filter("parseQID",function(){return function(r){return r?r.split("/").slice(-1)[0]:"None"}}),angular.module("filters").filter("taxid2Name",function(){var n={471472:"Chlamydia trachomatis 434/BU",272561:"Chlamydia trachomatis D/UW-3/CX",243161:"Chlamydia muridarum Str. Nigg",115713:"Chlamydia pneumoniae CWL209"};return function(r){return r?n[r]:"None"}}),angular.module("filters").filter("replaceColon",function(){return function(r){return r.split(":").join("_")}}),angular.module("filters").filter("replaceColon",function(){return function(r){return r.split(":").join("_")}}),angular.module("filters").filter("replaceperiod",function(){return function(r){return r.split(".").join("_")}}),angular.module("filters").filter("convertStrand",function(){return function(r){return r?"Q22809711"===r?"reverse":"forward":"None"}}),angular.module("filters").filter("strandNum",function(){return function(r){return r?"Q22809711"===r?"2":"1":"None"}}),angular.module("filters").filter("uniqueGoTerms",function(){return function(r){var t=[];return angular.forEach(r,function(n){angular.forEach(t,function(r){n!=r&&t.push(r)})}),t}}),angular.module("filters").filter("goClass",function(){var n={mf_button:"Molecular Function",cc_button:"Cellular Component",bp_button:"Biological Process"};return function(r){return n[r]}}),angular.module("filters").filter("startFrom",function(){return function(r,n){return n=+n,r.slice(n)}}),angular.module("filters").filter("list2CSV",function(){return function(r){return r?r.join(", "):"None"}}),angular.module("filters").filter("getJsonItem",function(){return function(t,e,r){var u;return angular.forEach(r,function(r,n){if(r[t].value!=e)return"none";u=r}),u}}),angular.module("filters").filter("getJsonItemNoWD",function(){return function(t,e,r){var u=[];return angular.forEach(r,function(r,n){if(r[t]!=e)return"none";u.push(r)}),u}}),angular.module("filters").filter("deleteJsonItem",function(){return function(t,e,r){var u=[];return angular.forEach(r,function(r,n){r[t].value!=e||u.push(r)}),u}}),angular.module("filters").filter("deleteJsonItemValuesList",function(){return function(e,r,n){var u=[];return angular.forEach(r,function(t){angular.forEach(n,function(r,n){r[e].value==t&&u.push(r)})}),u}}),angular.module("filters").filter("getJsonItemOrg",function(){return function(t,e,r){var u;return angular.forEach(r,function(r,n){if(r[t]!=e)return"none";u=r}),u}}),angular.module("filters").filter("orderObjectBy",function(){return function(r,t){if(!angular.isObject(r))return r;var n=[];for(var e in r)n.push(r[e]);return n.sort(function(r,n){return(r=parseInt(r[t].value))-(n=parseInt(n[t].value))}),n}}),angular.module("filters").filter("keywordFilter",["$filter",function(e){return function(n,r){var t=r.split(" ");return angular.forEach(t,function(r){r&&(n=e("filter")(n,r))}),n}}]),angular.module("filters").filter("cut",function(){return function(r,n,t,e){if(!r)return"";if(!(t=parseInt(t,10)))return r;if(r.length<=t)return r;if(r=r.substr(0,t),n){var u=r.lastIndexOf(" ");-1!=u&&("."!=r.charAt(u-1)&&","!=r.charAt(u-1)||(u-=1),r=r.substr(0,u))}return r+(e||" â€¦")}}),angular.module("filters").filter("typeFilter",function(){var n={Q7187:"gene",Q20747295:"protein-coding-gene",Q8054:"protein"};return function(r){return n[r]}});