angular.module("cmod",["ui.bootstrap","ngResource","ngRoute","ngTable","ngFileUpload","ngCookies","filters","browserPage","mainPage","geneForm","organismForm","resources","geneView","proteinView","organismView","jbrowseView","annotationsView","landingPage","geneOntology","interPro","operonAnnotations","goForm","operonForm","genomicPosition","enzymeView","mutantsView","allgenesDownload","angularUtils.directives.dirPagination","oauthView","genesKeyword","keywordForm","keywordPaginated","organismTree","linkedPubs","orthologView","mutantForm","functionalAnnotation","expressionView","hostPathogen","hostpathForm","alignmentView","geneNameForm","oauthForm"]);angular.module("cmod").config(["$locationProvider","$routeProvider","$httpProvider","$interpolateProvider","$compileProvider",function(e,t,o,a,n){"use strict";e.html5Mode({enabled:!0}),n.aHrefSanitizationWhitelist(/^\s*(|blob|):/),n.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension):/),t.when("/",{template:"<landing-page></landing-page>"}).when("/organism/:taxid/",{template:"<browser-page></browser-page>"}).when("/keyword/:keyword",{template:"<genes-keyword></genes-keyword>"}).when("/organism/:taxid/gene/:locusTag",{template:"<main-page></main-page>"}).when("/organism/:taxid/gene/:locusTag/authorized/",{template:"<main-page></main-page>"}).otherwise({template:"<not-found></not-found>"}),a.startSymbol("{$"),a.endSymbol("$}"),o.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded"}]).run(["$http","$cookies",function(e,t){e.defaults.headers.post["X-CSRFToken"]=t.get("csrftoken")}]);angular.module("filters",[]);angular.module("filters").filter("parseQID",function(){return function(r){return r?r.split("/").slice(-1)[0]:"None"}}),angular.module("filters").filter("taxid2Name",function(){var n={471472:"Chlamydia trachomatis 434/BU",272561:"Chlamydia trachomatis D/UW-3/CX",243161:"Chlamydia muridarum Str. Nigg",115713:"Chlamydia pneumoniae CWL209"};return function(r){return r?n[r]:"None"}}),angular.module("filters").filter("replaceColon",function(){return function(r){return r.split(":").join("_")}}),angular.module("filters").filter("replaceColon",function(){return function(r){return r.split(":").join("_")}}),angular.module("filters").filter("replaceperiod",function(){return function(r){return r.split(".").join("_")}}),angular.module("filters").filter("convertStrand",function(){return function(r){return r?"Q22809711"===r?"reverse":"forward":"None"}}),angular.module("filters").filter("strandNum",function(){return function(r){return r?"Q22809711"===r?"2":"1":"None"}}),angular.module("filters").filter("uniqueGoTerms",function(){return function(r){var t=[];return angular.forEach(r,function(n){angular.forEach(t,function(r){n!=r&&t.push(r)})}),t}}),angular.module("filters").filter("goClass",function(){var n={mf_button:"Molecular Function",cc_button:"Cellular Component",bp_button:"Biological Process"};return function(r){return n[r]}}),angular.module("filters").filter("startFrom",function(){return function(r,n){return n=+n,r.slice(n)}}),angular.module("filters").filter("list2CSV",function(){return function(r){return r?r.join(", "):"None"}}),angular.module("filters").filter("getJsonItem",function(){return function(t,e,r){var u;return angular.forEach(r,function(r,n){if(r[t].value!=e)return"none";u=r}),u}}),angular.module("filters").filter("getJsonItemNoWD",function(){return function(t,e,r){var u=[];return angular.forEach(r,function(r,n){if(r[t]!=e)return"none";u.push(r)}),u}}),angular.module("filters").filter("deleteJsonItem",function(){return function(t,e,r){var u=[];return angular.forEach(r,function(r,n){r[t].value!=e||u.push(r)}),u}}),angular.module("filters").filter("deleteJsonItemValuesList",function(){return function(e,r,n){var u=[];return angular.forEach(r,function(t){angular.forEach(n,function(r,n){r[e].value==t&&u.push(r)})}),u}}),angular.module("filters").filter("getJsonItemOrg",function(){return function(t,e,r){var u;return angular.forEach(r,function(r,n){if(r[t]!=e)return"none";u=r}),u}}),angular.module("filters").filter("orderObjectBy",function(){return function(r,t){if(!angular.isObject(r))return r;var n=[];for(var e in r)n.push(r[e]);return n.sort(function(r,n){return(r=parseInt(r[t].value))-(n=parseInt(n[t].value))}),n}}),angular.module("filters").filter("keywordFilter",["$filter",function(e){return function(n,r){var t=r.split(" ");return angular.forEach(t,function(r){r&&(n=e("filter")(n,r))}),n}}]),angular.module("filters").filter("cut",function(){return function(r,n,t,e){if(!r)return"";if(!(t=parseInt(t,10)))return r;if(r.length<=t)return r;if(r=r.substr(0,t),n){var u=r.lastIndexOf(" ");-1!=u&&("."!=r.charAt(u-1)&&","!=r.charAt(u-1)||(u-=1),r=r.substr(0,u))}return r+(e||" â€¦")}}),angular.module("filters").filter("typeFilter",function(){var n={Q7187:"gene",Q20747295:"protein-coding-gene",Q8054:"protein"};return function(r){return n[r]}});angular.module("resources",[]);angular.module("resources").factory("allOrgs",["$resource",function(e){return e("/static/wiki/json/orgsList.json",{},{getAllOrgs:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("allChlamOrgs",["$resource",function(e){return e("/static/wiki/json/chlamsOrgList.json",{},{getAllOrgs:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("evidenceCodes",["$resource",function(e){return e("/static/wiki/json/evidence_codes.json",{},{getevidenceCodes:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("mutantData",["$resource",function(e){return e("/static/wiki/json/kokes.json",{},{getKokesMutants:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("expressionTimingData",["$resource",function(e){return e("/static/wiki/json/expression_timing.json",{},{getExpression:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("orthoData",["$http","$q",function(n,o){return{getOrthologs:function(e){var r=o.defer(),t="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?orthoLocusTag ?orthoTaxid ?entrez ?uniprot ?refseq ?reference WHERE {{?gene wdt:P2393 '"+e+"'.?gene p:P684 ?statement.?statement ps:P684 ?ortholog.?ortholog wdt:P2393 ?orthoLocusTag.?ortholog wdt:P703 ?orthoTaxon.?orthoTaxon wdt:P685 ?orthoTaxid.?ortholog wdt:P351 ?entrez.?statement prov:wasDerivedFrom/pr:P248 ?reference.OPTIONAL {?ortholog wdt:P688 ?protein.?protein wdt:P352 ?uniprot.?protein wdt:P637 ?refseq.}}UNION{?gene wdt:P2393 '"+e+"'.?gene wdt:P2393 ?orthoLocusTag.?gene wdt:P703 ?orthoTaxon.?orthoTaxon wdt:P685 ?orthoTaxid.?gene wdt:P351 ?entrez.OPTIONAL {?gene wdt:P688 ?protein.?protein wdt:P352 ?uniprot.?protein wdt:P637 ?refseq.}}}");return n.get(t).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}}}]),angular.module("resources").factory("sendToView",["$http",function(n){return{sendToView:function(e,r){var t=e;return n.post(t,r).success(function(e){return e}).error(function(e,r){return r})}}}]),angular.module("resources").factory("uploadFile",["$http",function(n){return{uploadFile:function(e,r){var t=e;return n.post(t,r).success(function(e){return e}).error(function(e,r){return r})}}}]),angular.module("resources").factory("currentOrgFetch",["$http",function(r){return{getCurrentOrg:function(t){var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?taxid ?taxon ?taxonLabel WHERE{ ?taxon wdt:P685 '"+t+"'. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . } }");return r.get(e).then(function(e){var r=e.data.results.bindings;return{taxid:t,taxon:r[0].taxon.value,taxonLabel:r[0].taxonLabel.value}})}}}]),angular.module("resources").factory("speciesGenes",["$http",function(t){return{getSpeciesGenes:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?protein ?proteinLabel ?uniprot WHERE{ ?taxon wdt:P685 '"+e+'\'. ?protein wdt:P352 ?uniprot;wdt:P703 ?taxon;rdfs:label ?proteinLabel.FILTER (lang(?proteinLabel) = "en") }');return console.log(r),t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allOrgGenes",["$http",function(t){return{getAllOrgGenes:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?gene ?geneLabel ?proteinLabel ?protein ?entrez ?refseqProt ?locusTag ?uniprot ?chromosome ?chromosomeLabel ?refSeqChromosome ?refSeqChromosomeLabel ?genStart ?genEnd ?strand (group_concat(?aliases;separator=', ') as ?alias) WHERE{ ?taxon wdt:P685 '"+e+"'. ?gene wdt:P703 ?taxon; wdt:P279 wd:Q7187; wdt:P2393 ?locusTag; wdt:P351 ?entrez; wdt:P644 ?genStart; wdt:P645 ?genEnd; wdt:P2548 ?strand; skos:altLabel ?aliases. OPTIONAL {?gene wdt:P688 ?protein; wdt:P352 ?uniprot; wdt:P637 ?refseqProt. }?gene p:P644 ?chr. ?chr pq:P1057 ?chromosome. ?chromosome wdt:P2249 ?refSeqChromosome.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' .}} GROUP BY ?gene ?geneLabel ?protein ?proteinLabel ?entrez ?refseqProt ?locusTag ?uniprot ?chromosome ?chromosomeLabel ?genStart ?genEnd ?strand ?refSeqChromosome ?refSeqChromosomeLabel ");return console.log("Loading all organism genes"),t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allOrgOperons",["$http",function(t){return{getAllOrgOperons:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?operon ?operonLabel WHERE{ ?taxon wdt:P685 '"+e+"'. ?operon wdt:P703 ?taxon; wdt:P279 wd:Q139677. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' .}} ");return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("GOTerms",["$http",function(t){return{getGoTerms:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?gotermValueLabel ?goID ?gotermValue ?goclass ?reference_retrievedLabel (GROUP_CONCAT(DISTINCT ?reference_stated_label; SEPARATOR = '; ') AS ?reference_stated_label) (GROUP_CONCAT(DISTINCT ?determination; SEPARATOR = ';') AS ?determinationLabel) WHERE {?protein wdt:P352 '"+e+"'.?protein (p:P680|p:P681|p:P682)+ ?goterm.?goterm pq:P459/rdfs:label ?determination. FILTER(LANG(?determination) = 'en').OPTIONAL { ?goterm (prov:wasDerivedFrom/pr:P248)/rdfs:label ?reference_stated_label. FILTER(LANG(?reference_stated_label) = 'en').}OPTIONAL { ?goterm (prov:wasDerivedFrom/pr:P813) ?reference_retrieved. }?goterm (ps:P680|ps:P681|ps:P682)+ ?gotermValue.?gotermValue wdt:P31 ?goclass.?gotermValue wdt:P686 ?goID.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}GROUP BY ?gotermValueLabel ?goID ?gotermValue ?goclass ?determinationLabel ?reference_retrievedLabel");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("ECNumbers",["$http",function(t){return{getECNumbers:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?ecnumber WHERE {?protein wdt:P352 '"+e+"'.?protein (wdt:P680|wdt:P681|wdt:P682)+ ?gotermValue.?gotermValue wdt:P591 ?ecnumber.}");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("InterPro",["$http",function(t){return{getInterPro:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT distinct ?protein ?interPro_item ?interPro_label ?ipID ?reference_stated_inLabel ?refURL WHERE {?proteinLabel wdt:P352'"+e+'\';p:P527 ?interPro.?interPro ps:P527 ?interPro_item.?interPro prov:wasDerivedFrom/pr:P248 ?reference_stated_in ;prov:wasDerivedFrom/pr:P854 ?refURL .?interPro_item wdt:P2926 ?ipID;rdfs:label ?interPro_label. SERVICE wikibase:label { bd:serviceParam wikibase:language "en" .}filter (lang(?interPro_label) = "en") .}');return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("RefSeqChrom",["$http",function(t){return{getRefSeqChrom:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?refSeqChromosome WHERE{ \n  ?gene wdt:P2393 '"+e+"';        p:P644 ?chr.\n  ?chr pq:P1057 ?chromosome. \n  ?chromosome wdt:P2249 ?refSeqChromosome.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' .}\n} \n");return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("hostPathogen",["$http",function(t){return{getHostPathogen:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent('SELECT ?host ?hostLabel ?protein ?proteinLabel ?hostProtein ?hostGeneLabel ?hostProteinLabel ?reference_stated_in ?reference_stated_inLabel ?pmid (group_concat(distinct ?determination ;separator=", ") as ?dmethod) (group_concat(distinct ?det_label ;separator=", ") as ?dmethodLabel) WHERE{ ?protein wdt:P352 \''+e+'\'; wdt:P129 ?hostProtein; p:P129 ?hpClaim. ?hpClaim prov:wasDerivedFrom/pr:P248 ?reference_stated_in; pq:P459 ?determination. ?determination rdfs:label ?det_label. ?reference_stated_in wdt:P698 ?pmid. ?hostProtein wdt:P703 ?host; wdt:P702 ?hostGene. FILTER (lang(?det_label) = "en") SERVICE wikibase:label { bd:serviceParam wikibase:language "en" .}} GROUP BY ?protein ?hostGeneLabel ?proteinLabel ?reference_stated_in ?reference_stated_inLabel ?pmid ?hostProtein ?hostProteinLabel ?host ?hostLabel');return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("OperonData",["$http",function(t){return{getOperonData:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?gene ?locusTag ?entrez ?operon ?operonLabel ?operonItem  ?operonItemLabel ?genStart ?genEnd ?strand ?strandLabel ?op_genes ?reference_stated_in ?reference_stated_inLabel ?op_genesLabel ?reference_pmid WHERE { ?gene wdt:P351 '"+e+"'; p:P361 ?operon. ?operon ps:P361 ?operonItem. ?operonItem wdt:P279 wd:Q139677; wdt:P527 ?op_genes. ?op_genes wdt:P2393 ?locusTag; wdt:P351 ?entrez; wdt:P644 ?genStart; wdt:P645 ?genEnd; wdt:P2548 ?strand.OPTIONAL { ?operon prov:wasDerivedFrom/pr:P248 ?reference_stated_in. ?reference_stated_in wdt:P698 ?reference_pmid. } SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . }}");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("expasyData",["$http","$location",function(t,e){var n="https://"+e.host()+"/expasy/EC/{ecnumber}.txt";return{getReactionData:function(e){var r=n.replace("{ecnumber}",e);return t.get(r).then(function(e){var n={reaction:[]},r=e.data.split("\n");return angular.forEach(r,function(e,r){if(e.match("^ID")&&(n.ecnumber=e.slice(5)),e.match("^CA ")){var t=e.replace(/^(CA)/,"");n.reaction.push(t)}}),n},function(e){return e})}}}]),angular.module("resources").factory("pubMedData",["$http",function(t){return{getPMID:function(r){var e="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&retmode=json&id="+r;return t.get(e).success(function(e){return e.result[r]}).error(function(e){return e})}}}]),angular.module("resources").factory("locusTag2Pub",["$http",function(t){return{getlocusTag2Pub:function(e){var r="https://www.ebi.ac.uk/europepmc/webservices/rest/search?query=chlamydia%20{locusTag}&format=json".replace("{locusTag}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("euroPubData",["$http",function(t){return{getEuroPubData:function(e){var r="https://www.ebi.ac.uk/europepmc/webservices/rest/search?query={pubmedID}&resulttype=core&format=json".replace("{pubmedID}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("pubLinks",["$http","$filter",function(t,e){return{getPubLinks:function(e){var r="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?dbfrom=gene&db=pubmed&id={entrez}&retmode=json&linkname=gene_pubmed_pmc_nucleotide".replace("{entrez}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("recentChlamPubLinks",["$http",function(r){return{getRecentChlamPubLinks:function(e){return r.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&term=chlamydia trachomatis&reldate=10&datetype=edat&retmax=100&usehistory=y&retmode=json").success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allGoTerms",["$http",function(n){return{getGoTermsAll:function(e,r){var t="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT DISTINCT ?goterm ?goID ?goterm_label WHERE { ?goterm wdt:P279* wd:"+r+"; rdfs:label ?goterm_label; wdt:P686 ?goID. FILTER(lang(?goterm_label) = 'en') FILTER(CONTAINS(LCASE(?goterm_label), '"+e.toLowerCase()+"' ))}");return n.get(t).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("allChlamydiaGenes",["$http",function(r){return{getAllChlamGenes:function(){var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?taxon ?taxid ?taxonLabel ?geneLabel ?entrez ?uniprot ?proteinLabel ?locusTag ?refseq_prot ?gene(GROUP_CONCAT(DISTINCT ?aliases) AS ?aliases) (GROUP_CONCAT(DISTINCT ?goLabel) AS ?goLabel) (GROUP_CONCAT(DISTINCT ?host_protein) AS ?host_protein) WHERE {?taxon wdt:P171* wd:Q846309.?gene wdt:P279 wd:Q7187.?gene wdt:P703 ?taxon.?gene wdt:P351 ?entrez.?gene wdt:P2393 ?locusTag.?gene skos:altLabel ?aliases.OPTIONAL {?gene wdt:P688 ?protein.?protein wdt:P352 ?uniprot.?protein wdt:P637 ?refseq_prot.OPTIONAL {?protein (wdt:P680 | wdt:P681 | wdt:P682)+/rdfs:label ?goLabel.FILTER(LANG(?goLabel) = 'en').}OPTIONAL {?protein wdt:P129+/rdfs:label ?host_protein}}?taxon wdt:P685 ?taxid.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}GROUP BY ?locusTag ?taxon ?taxid ?taxonLabel ?geneLabel ?entrez ?uniprot ?proteinLabel ?refseq_prot ?gene");return r.get(e).success(function(e){return e.data}).error(function(e){return e})},getAllChlamGeneLabels:function(){var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?geneLabel ?locusTag ?taxid WHERE { ?taxon wdt:P171* wd:Q846309. ?gene wdt:P279 wd:Q7187.?gene wdt:P703 ?taxon.?gene wdt:P2393 ?locusTag.?taxon wdt:P685 ?taxid. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}");return r.get(e).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("wdGetEntities",function(){return{wdGetEntities:function(e){return $.ajax({url:"https://www.wikidata.org/w/api.php",jsonp:"callback",dataType:"jsonp",data:{action:"wbgetentities",ids:e,format:"json"},xhrFields:{withCredentials:!0},success:function(e){return e},error:function(e){return e}})}}}),angular.module("resources").factory("entrez2QID",["$http","$filter",function(t,e){return{getEntrez2QID:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT distinct ?gene ?protein WHERE{?gene wdt:P351 '{entrez}'; wdt:P688 ?protein.}".replace("{entrez}",e));return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("locusTag2QID",["$http","$filter",function(o,e){return{getLocusTag2QID:function(e,r){var t="SELECT distinct ?gene ?protein WHERE{?strain wdt:P685 '{taxid}'. ?gene wdt:P2393 '{locusTag}'; wdt:P703 ?strain. OPTIONAL {?gene wdt:P688 ?protein.}}".replace("{taxid}",r).replace("{locusTag}",e),n="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(t);return o.get(n).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("abstractSPARQL",["$http",function(a){return{getAbstractSPARQL:function(e,r,t){var n="PREFIX wd: <https://www.wikidata.org/entity/> PREFIX prov: <https://www.w3.org/ns/prov#> PREFIX pr: <https://www.wikidata.org/prop/reference/> PREFIX p: <https://www.wikidata.org/prop/> PREFIX ps: <https://www.wikidata.org/prop/statement/> SELECT (wd:prot_qid as ?sub) ?obj ?objLabel ?objDescription ?obj_id ?stated_in ?stated_inLabel ?retrieved ?reference_url ?language ?languageLabel ?curator ?curatorLabel ?determination ?determinationLabel WHERE {  wd:prot_qid p:an_prop ?claim .  ?claim ps:an_prop ?obj.  ?obj wdt:id_prop ?obj_id.   optional {?claim prov:wasDerivedFrom/pr:P248 ?stated_in. }   optional {?claim prov:wasDerivedFrom/pr:P813 ?retrieved. }   optional {?claim prov:wasDerivedFrom/pr:P854 ?reference_url. }   optional {?claim prov:wasDerivedFrom/pr:P407 ?language. }   optional {?claim prov:wasDerivedFrom/pr:P1640 ?curator. }   optional {?claim pq:P459 ?determination. }   SERVICE wikibase:label {         bd:serviceParam wikibase:language 'en' .  } }".replace(/prot_qid/g,e).replace(/an_prop/g,r).replace(/id_prop/g,t),o="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(n);return console.log(n),a.get(o).success(function(e){return e}).error(function(e){return e})}}}]);angular.module("allgenesDownload",[]);angular.module("alignmentView",[]);angular.module("annotationsView",["resources","cellVisualizer","helpForm"]);angular.module("cellVisualizer",[]);angular.module("enzymeView",[]);angular.module("expressionView",[]);angular.module("geneOntology",[]);angular.module("genomicPosition",["resources"]);angular.module("hostPathogen",[]);angular.module("interPro",[]);angular.module("linkedPubs",[]);angular.module("mutantsView",["resources"]);angular.module("operonAnnotations",[]);angular.module("orthologView",["resources"]);angular.module("oauthForm",["resources"]);angular.module("oauthView",["resources"]);angular.module("browserPage",["resources"]);angular.module("functionalAnnotation",["resources"]);angular.module("geneForm",["resources"]);angular.module("geneNameForm",["resources"]);angular.module("geneView",["resources"]);angular.module("genesKeyword",["resources"]);angular.module("goForm",["resources"]);angular.module("helpForm",["resources"]);angular.module("hostpathForm",["resources"]);angular.module("jbrowseView",["resources"]);angular.module("keywordForm",["resources"]);angular.module("keywordPaginated",[]);angular.module("landingPage",["resources"]);angular.module("mainPage",["resources"]);angular.module("mutantBatch",["resources"]);angular.module("mutantForm",["resources"]);angular.module("operonForm",["resources"]);angular.module("organismForm",["resources"]);angular.module("organismTree",["resources"]);angular.module("organismView",["resources"]);angular.module("proteinView",[]);angular.module("allgenesDownload").component("allgenesDownload",{template:'<a target="_blank" href="{{$ctrl.genesUrl()}}"><div class="btn btn-default">Download Genes</div></a>',bindings:{taxid:"<"},controller:function(){"use strict";var t=this;t.$onChanges=function(e){e.taxid&&(t.genesUrl=function(){return"https://query.wikidata.org/#SELECT ?refSeqChromosome ?gene ?genStart ?genEnd ?strand ?geneLabel ?entrez ?locusTag ?protein ?proteinLabel ?uniprot ?refseqProt WHERE{ ?taxon wdt:P685 '"+t.taxid+"'. ?gene wdt:P703 ?taxon; wdt:P279 wd:Q7187; wdt:P644 ?genStart; wdt:P645 ?genEnd; wdt:P2548 ?strand; wdt:P2393 ?locusTag; wdt:P351 ?entrez; wdt:P688 ?protein. ?protein wdt:P352 ?uniprot; wdt:P637 ?refseqProt.OPTIONAL{ ?gene p:P644 ?chr. ?chr pq:P2249 ?refSeqChromosome.} SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . } }"})}}});angular.module("alignmentView").controller("alignmentCtrl",["orthoData","geneSequenceData","alignOrthologData","proteinSequenceData",function(e,r,a,s){"use strict";var o=this;o.projection={},o.type="dna",o.alignMessage="Aligning Orthologs. Please be patient.",o.citation=!1,o.isRendered=!1,o.data={},e.getOrthologs(o.locusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var n=e.orthoTaxid.value,t=e.orthoLocusTag.value;o.hasOrthologs=!0,o.projection[n]=!0;var i=e.refseq?e.refseq.value:"";o.data[n]=[t,i]})}),o.select=function(e,n){o.projection[n]=e},o.alignData=function(){var t=[],i=0;angular.forEach(o.projection,function(e,n){e?("dna"==o.type?r.getSequence(o.data[n][0]):s.getSequence(o.data[n][1])).then(function(e){i++,t.push(e),i==Object.keys(o.projection).length&&(o.aligning=!0,a.align(t,o),o.citation=!0)},function(e){i++,o.aligning=!1}):i++})}}]).factory("geneSequenceData",["$http","$q",function(c,n){"use strict";return{getSequence:function(e){var o=n.defer();return c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=gene&term="+e).success(function(e){var s=e;if(s.includes("<Id>")){var n=s.substring(s.indexOf("<Id>")+4,s.indexOf("</Id>"));c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=gene&id="+n).success(function(e){s=e;var n=parseInt(s.substring(s.indexOf("<ChrStart>")+10,s.indexOf("</ChrStart>")))+1,t=parseInt(s.substring(s.indexOf("<ChrStop>")+9,s.indexOf("</ChrStop>")))+1,i=s.substring(s.indexOf("<ChrAccVer>")+11,s.indexOf("</ChrAccVer>")),r=1;if(t<n){r=2;var a=n;n=t,t=a}c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id="+i+"&seq_start="+n+"&seq_stop="+t+"&strand="+r+"&rettype=fasta").success(function(e){var n="";n=(n=(n=-1!=e.indexOf("Chlamydia")?">"+e.substring(e.indexOf("Chlamydia")+10,e.indexOf("\n")+1):">"+e.substring(e.indexOf("Chlamydophila")+14,e.indexOf("\n")+1)).replace(" ","_").replace(","," ")).substring(0,2).toUpperCase()+n.substring(2);var t=e.substring(e.indexOf("\n")+1,e.length).replace(/\n/g,"");o.resolve(n+t)}).error(function(e){o.reject(e)})}).error(function(e){o.reject(e)})}}),o.promise}}}]).factory("proteinSequenceData",["$http","$q",function(n,t){"use strict";return{getSequence:function(e){var i=t.defer();return e?n.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=protein&id="+e+"&rettype=fasta").then(function(e){var n=e.data,t=">"+n.substring(n.indexOf("[")+1,n.indexOf("]")).replace("Chlamydia ","").replace(" ","_")+"\n"+n.substring(n.indexOf("\n")).replace(/\n/g,"");i.resolve(t)},function(e){console.log("Error reading protein sequence"),i.reject(e)}):(console.log("No Ref Seq ID"),i.reject()),i.promise}}}]).factory("alignOrthologData",["$http","$timeout","$sce",function(e,a,s){"use strict";var o=function(i,r){e.get("https://www.ebi.ac.uk/Tools/services/rest/muscle/status/"+i).then(function(e){if(console.log(e.data),"RUNNING"!=e.data)if("FINISHED"==e.data){r.aligning=!1;var n={el:document.getElementById("msaDiv")},t=new msa.msa(n);t.u.file.importURL("https://www.ebi.ac.uk/Tools/services/rest/muscle/result/"+i+"/aln-fasta",function(){t.render()}),r.isRendered=!0,r.alignmentURL=s.trustAsResourceUrl("https://www.ebi.ac.uk/Tools/services/rest/muscle/result/"+i+"/aln-fasta")}else console.log("ERROR: "+e.data),r.aligning=!1;else a(o(i,r),2e3)})};return{align:function(i,r){e.get("alignOrthologs?sequence="+encodeURIComponent(i.join("\n"))+"&length="+encodeURIComponent(i.length)).then(function(e){var n=e.data.id;console.log("Job ID:"+n),o(n,r)},function(e){r.aligning=!1,console.log("POST TO MUSCLE Error"+e.status),console.log(e);var n=msa.io.fasta.parse(i.join("\n")),t={el:document.getElementById("msaDiv"),seqs:n};new msa.msa(t).render(),r.isRendered=!0})}}}]).component("alignmentView",{controller:"alignmentCtrl",templateUrl:"/static/build/js/angular_templates/alignment-view.min.html",bindings:{locusTag:"<",taxId:"<",allorggenes:"<"}});angular.module("annotationsView").component("annotationsView",{templateUrl:"/static/build/js/angular_templates/annotations-view.min.html",bindings:{data:"<",annotations:"<",org:"<",allorggenes:"<",hasprotein:"<"},controller:function(){"use strict";var n=this;n.$onChanges=function(o){o.hasprotein&&(n.settings={go:o.hasprotein.currentValue,operon:!0,interpro:o.hasprotein.currentValue,enzyme:o.hasprotein.currentValue,mutants:!0,pubs:!0,product:o.hasprotein.currentValue,ortholog:!0,alignment:!0,expression:!0,hostpath:!0})},n.$onInit=function(){n.expandAll=function(){n.toggleOpen(!0)},n.collapseAll=function(){n.toggleOpen(!1)},n.accordion={go:!0,operon:!0,interpro:!0,enzyme:!0,mutants:!0,pubs:!0,product:!0,ortholog:!0,alignment:!0,expression:!0,hostpath:!0},n.toggleOpen=function(o){n.accordion.go=o,n.accordion.operon=o,n.accordion.interpro=o,n.accordion.enzyme=o,n.accordion.mutants=o,n.accordion.pubs=o,n.accordion.product=o,n.accordion.ortholog=o,n.accordion.alignment=o,n.accordion.hostpath=o,n.accordion.expression=o},n.status={isCustomHeaderOpen:!1,isFirstOpen:!0,isFirstDisabled:!1}}}});angular.module("cellVisualizer").controller("cellVisualizerCtrl",["geneOntologyService","$timeout",function(o,e){"use strict";var i=this;function n(n){var l=document.getElementById("cell-svg").contentDocument,t=[];t=o.isInclusion(n)?l.getElementsByClassName("inclusion"):l.getElementsByClassName(o.getClass(n)),e(function(){if(i.pending--,o.isPlasmaMembrane(n))(t[0].style.fill="#4784FF")!=l.getElementsByClassName("cytoplasm")[0].style.fill&&(l.getElementsByClassName("cytoplasm")[0].style.fill="#FFFFFF");else if(o.isInclusion(n))o.isInclusionMembrane(n)?t[0].style.stroke="#4784FF":t[0].style.fill="#4784FF";else for(var e=0;e<t.length;e++)t[e].style.fill="#4784FF";0==i.pending&&(i.loading=!1)},1e3)}i.status="Loading Component Viewer...",i.loading=!0,i.$onChanges=function(){i.cellComp&&(i.pending=i.cellComp.length,angular.forEach(i.cellComp,function(e){var n=e.goID.value.replace(":","_");i.highlight(n)}),0==i.pending&&(i.loading=!1,i.status="No Components to Show"))},this.displayCell=!1,this.highlight=function(e){o.isValid(e)?(i.displayCell=!0,n(e)):o.getParent(e).then(function(e){i.displayCell=!0,n(e)},function(e){i.pending--,0==i.pending&&(i.loading=!1,i.status="No Components to Show")})}}]).service("geneOntologyService",["$http","$q",function(n,l){var t={GO_0044177:"golgi",GO_0044174:"endosome",GO_0120149:"peroxisome",GO_0042025:"nucleus",GO_0033650:"mitochondria",GO_0044165:"er",GO_0140221:"inclusion_membrane",GO_0140222:"inclusion_lumen",BTO_0001172:"rb",BTO_0000377:"eb",GO_0044187:"lysosome",GO_0044186:"ld",GO_0120148:"centrosome",GO_0044163:"cytoskeleton",GO_0020002:"plasma_membrane",GO_0030430:"cytoplasm"},i=function(e){return!!t[e]};return{getParent:function(t){var o=l.defer(),e=encodeURIComponent(encodeURIComponent("https://purl.obolibrary.org/obo/"+t));return n.get("https://www.ebi.ac.uk/ols/api/ontologies/go/terms/"+e+"/hierarchicalAncestors").success(function(e){if(e._embedded)for(var n=0;n<e._embedded.terms.length;n++){var l=e._embedded.terms[n];if(i(l.short_form))return console.log("Go term "+t+" has parent "+l.label),void o.resolve(l.short_form)}o.reject(e)}).error(function(e){o.reject(e)}),o.promise},isValid:i,getClass:function(e){return t[e]},isPlasmaMembrane:function(e){return"plasma_membrane"==t[e]},isInclusion:function(e){return"inclusion_membrane"==t[e]||"inclusion_lumen"==t[e]},isInclusionMembrane:function(e){return"inclusion_membrane"==t[e]}}}]).component("cellVisualizer",{controller:"cellVisualizerCtrl",templateUrl:"/static/build/js/angular_templates/cell-visualizer-view.min.html",bindings:{cellComp:"<"}});angular.module("enzymeView").component("enzymeView",{templateUrl:"/static/build/js/angular_templates/enzyme-view.min.html",bindings:{reaction:"<",ecnumber:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("expressionView").component("expressionView",{templateUrl:"/static/build/js/angular_templates/expression-view.min.html",bindings:{data:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("geneOntology").component("geneOntology",{templateUrl:"/static/build/js/angular_templates/gene-ontology-view.min.html",bindings:{data:"<",goclass:"@",gene:"<"},controller:function(){"use strict";var e=this;e.$onChanges=function(){e.data&&angular.forEach(e.data,function(e){e.determinationLabel.values=e.determinationLabel.value.split(";")})},e.evidenceCodes={IEA:"Inferred From Electronic Annotation",EXP:"Inferred from Experiment",IDA:"Inferred from Direct Assay",IPI:"Inferred From Physical Interaction",IMP:"Inferred from Mutant Phenotype",IGI:"Inferred from Genetic Interaction",IEP:"Inferred from Expression Pattern",ISS:"Inferred From Sequence or structural Similarity",ISO:"Inferred from Sequence Orthology",ISA:"Inferred from Sequence Alignment",ISM:"Inferred From Sequence Model",IGC:"Inferred from Genomic Context",IBA:"Inferred from Biological aspect of Ancestor",IBD:"Inferred from Biological aspect of Descendant",IKR:"Inferred From Key Residues",IRD:"Inferred from Rapid Divergence",RCA:"Inferred from Reviewed Computational Analysis",TAS:"Traceable Author Statement",NAS:"Non traceable author statement",IC:"Inferred by Curator",ND:"No biological Data available"}}});angular.module("genomicPosition").component("genomicPosition",{templateUrl:"/static/build/js/angular_templates/genomic-position.min.html",bindings:{data:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("hostPathogen").component("hostPathogen",{templateUrl:"/static/build/js/angular_templates/host-pathogen.min.html",bindings:{data:"<"},controller:function(){"use strict"}});angular.module("interPro").component("interPro",{templateUrl:"/static/build/js/angular_templates/interpro-view.min.html",bindings:{data:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("linkedPubs").component("linkedPubs",{templateUrl:"/static/build/js/angular_templates/linked-pubs.min.html",bindings:{pubs:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("mutantsView").component("mutantsView",{bindings:{data:"<"},controller:["$location","sendToView",function(i,e){"use strict";var a=this;a.$onInit=function(){},i.path().includes("authorized")?a.authorized=!0:a.authorized=!1,a.deleteAnnotation=function(t){console.log(t),a.loading=!0,t.action="delete";var n=i.path()+"/wd_mutant_edit";e.sendToView(n,t).then(function(t){}).finally(function(){a.loading=!1})}}],templateUrl:"/static/build/js/angular_templates/mutants-view.min.html"});angular.module("operonAnnotations").component("operonAnnotations",{templateUrl:"/static/build/js/angular_templates/operon-view.min.html",bindings:{data:"<",operon:"<",allorggenes:"<"},controller:function(){this.$onInit=function(){}}});angular.module("orthologView").component("orthologView",{bindings:{locusTag:"<"},controller:"orthologCtrl",templateUrl:"/static/build/js/angular_templates/ortholog-view.min.html"}).controller("orthologCtrl",["orthoData","InterPro","hostPathogen","GOTerms","OperonData","expressionTimingData","$filter","sendToView","$location",function(t,a,e,o,n,i,u,l,h){"use strict";var s=this;s.data={},s.reference="",t.getOrthologs(s.locusTag).then(function(t){angular.forEach(t.results.bindings,function(r){s.hasOrthologs=!0,s.data[r.orthoTaxid.value]={locusTag:r.orthoLocusTag.value,taxid:r.orthoTaxid.value},r.reference&&(s.reference=r.reference.value),r.uniprot?(a.getInterPro(r.uniprot.value).then(function(t){s.data[r.orthoTaxid.value].ip=0<t.length}),e.getHostPathogen(r.uniprot.value).then(function(t){s.data[r.orthoTaxid.value].hp=0<t.length}),o.getGoTerms(r.uniprot.value).then(function(t){var a=t.data.results.bindings;s.data[r.orthoTaxid.value].go=0<a.length;var e=[];angular.forEach(a,function(t,a){t.hasOwnProperty("ecnumber")&&-1==e.indexOf(t.ecnumber.value)&&e.push(t.ecnumber.value)});var o={locusTag:r.orthoLocusTag.value,taxid:r.orthoTaxid.value,ec_number:e},n=h.path()+"/mg_mutant_view";l.sendToView(n,o).then(function(t){s.data[r.orthoTaxid.value].mutant=0<t.data.mutants.length})})):(s.data[r.orthoTaxid.value].ip=!1,s.data[r.orthoTaxid.value].hp=!1,s.data[r.orthoTaxid.value].go=!1),n.getOperonData(r.entrez.value).then(function(t){s.data[r.orthoTaxid.value].operon=0<t.data.results.bindings.length}),i.getExpression(function(t){var a=u("keywordFilter")(t,r.orthoLocusTag.value),e={};angular.forEach(a[0],function(t,a){"_id"!=a&&"$oid"!=a&&"timestamp"!=a&&(e[a]=t)}),s.data[r.orthoTaxid.value].expression=null!=e.RB_EXPRESSION_TIMING})})}),s.tSettings={strain:!0,tax:!0,cLocus:!0,dLocus:!1,identity:!1,length:!1,eval:!1,ref:!0,expression:!0,go:!0,operons:!0,mutants:!0,interpro:!0,hostPathogen:!0}}]);angular.module("oauthForm").component("oauthForm",{controller:["$window","$routeParams","$location","sendToView",function(a,i,n,t){"use strict";var o=this;o.authorization=n.path().includes("authorized"),o.oauthAuthorization=function(){t.sendToView("/wd_oauth",{authorization:"sending",current_path:n.path(),initiate:!0}).then(function(t){a.location.href=t.data.wikimediaURL})},o.revokeAuthorization=function(){t.sendToView("/wd_oauth",{deauthenticate:!0}).then(function(t){var a="/organism/{taxid}".replace("{taxid}",i.taxid),o="/gene/{locusTag}/".replace("{locusTag}",i.locusTag);n.url(a+o)})}}],templateUrl:"/static/build/js/angular_templates/oauth-form.min.html"});angular.module("oauthView").component("oauthView",{bindings:{},controller:["$window","$routeParams","$location","sendToView",function(t,o,i,e){"use strict";o.oauth_verifier&&(e.sendToView("/wd_oauth",{url:i.url()}).then(function(t){console.log(t)}),i.url(i.path())),this.authorization=i.path().includes("authorized")}],templateUrl:"/static/build/js/angular_templates/authorization-view.min.html"});angular.module("browserPage").component("browserPage",{controller:["$filter","$location","$routeParams","allChlamOrgs","allOrgGenes",function(t,n,e,r,l){"use strict";var a=this;a.$onInit=function(){a.loading=!0,a.currentTaxid=e.taxid,console.log(a.currentTaxid),r.getAllOrgs(function(e){a.orgList=e,a.currentOrg=t("getJsonItemOrg")("taxid",a.currentTaxid,a.orgList),null==a.currentOrg&&(alert("not a valid taxonomy id"),n.path("/"))}),l.getAllOrgGenes(a.currentTaxid).then(function(e){var n=e.data.results.bindings;a.currentAllGenes=t("orderObjectBy")(n,"genStart"),a.initialGene=a.currentAllGenes[0],console.log(a.currentAllGenes)}).finally(function(){a.loading=!1}),a.onSelect=function(e){n.path("/organism/"+a.currentTaxid+"/gene/"+e.locusTag.value)}}}],templateUrl:"/static/build/js/angular_templates/browser-page.min.html"});angular.module("functionalAnnotation").component("functionalAnnotation",{templateUrl:"/static/build/js/angular_templates/functional-annotation.min.html",bindings:{data:"<",config:"<"},controller:function(){"use strict";var t=this;t.$onInit=function(){t.title=t.config.title+" ({title})".replace("{title}",t.data.length)}}});angular.module("geneForm").component("geneForm",{templateUrl:"/static/build/js/angular_templates/gene-form.min.html",bindings:{taxid:"<",genes:"<"},controller:["$location",function(n){"use strict";var t=this;t.onSelect=function(e){n.path("/organism/"+t.taxid+"/gene/"+e.locusTag.value)}}]});angular.module("geneNameForm").controller("geneNameCtrl",["$location","sendToView","orthoData","$routeParams","locusTag2QID","$filter",function(e,l,a,t,s,g){"use strict";var u=this;u.locusTag=t.locusTag,u.orthoData={},u.projection={},a.getOrthologs(u.locusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var a=e.orthoTaxid.value,t=e.orthoLocusTag.value;u.projection[a]=t==u.locusTag,u.orthoData[a]=t})}),u.pageCount=0,u.nextClick=function(){u.pageCount+=1},u.backClick=function(){u.pageCount-=1},u.geneNameData={geneQID:null,proteinQID:null,geneName:""},u.resetForm=function(){u.geneNameData.geneName="",u.pageCount=0},u.$onChanges=function(){u.geneNameData.geneQID=u.gene.geneQID,u.geneNameData.proteinQID=u.gene.proteinQID},u.sendData=function(){var o=0,r=!0,i=!1,a=!1;if(angular.forEach(u.projection,function(e){1==e&&(a=!0)}),!a)return alert("Please select at least one gene to annotate!"),void(u.loading=!1);e.path().includes("authorized")?angular.forEach(u.projection,function(e,n){e?s.getLocusTag2QID(u.orthoData[n],n).then(function(e){var a={geneQID:g("parseQID")(e.data.results.bindings[0].gene.value),proteinQID:null,geneName:u.geneNameData.geneName+" "+u.orthoData[n]};e.data.results.bindings[0].protein&&(a.proteinQID=g("parseQID")(e.data.results.bindings[0].protein.value));var t="/organism/"+n+"/gene/"+u.orthoData[n]+"/wd_gene_name_edit";console.log(t),l.sendToView(t,a).then(function(e){!1===e.data.authentication?r=!(i=!0):e.data.write_success||(r=!1)}).finally(function(){++o==Object.keys(u.projection).length&&(r?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),u.resetForm()):i?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"))})}):++o==Object.keys(u.projection).length&&(r?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),u.resetForm()):i?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),u.resetForm())}):alert("Please authorize ChlamBase to edit Wikidata on your behalf!")}}]).component("geneNameForm",{bindings:{gene:"<"},templateUrl:"/static/build/js/angular_templates/gene-name-form.min.html",controller:"geneNameCtrl"});angular.module("geneView").component("geneView",{templateUrl:"/static/build/js/angular_templates/gene-view.min.html",controller:function(){"use strict"},bindings:{gene:"<"}});angular.module("genesKeyword").component("genesKeyword",{controller:["$location","$filter","allChlamOrgs","allChlamydiaGenes","queryBuilder","$http","allGoTerms",function(e,l,a,o,n,t,i){"use strict";var s=this;s.$onInit=function(){s.loading=!0,s.chlamGenes={},s.keyword=e.path().split("/")[2],s.keywordResult=s.keyword,s.orgData=[],a.getAllOrgs(function(e){angular.forEach(e,function(e){e.check=!0,s.orgData.push(e)})}),s.getChlamGenes=o.getAllChlamGenes().then(function(e){s.chlamGenes.allGenes=e.data.results.bindings,s.chlamGenes.keywordAll=l("keywordFilter")(s.chlamGenes.allGenes,s.keyword),s.chlamGenes.currentKW=s.chlamGenes.keywordAll}).finally(function(){s.loading=!1});var t={name:"Molecular Function",QID:"Q14860489"},n={name:"Cellular Component",QID:"Q5058355"},r={name:"Biological Process",QID:"Q2996394"};s.mfTerms=function(e){return i.getGoTermsAll(e,t.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})},s.ccTerms=function(e){return i.getGoTermsAll(e,n.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})},s.bpTerms=function(e){return i.getGoTermsAll(e,r.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})}},s.facetOrganism=function(e){s.currentOrgsList=[],angular.forEach(s.orgData,function(e){1==e.check&&s.currentOrgsList.push(e.taxid)}),s.chlamGenes.currentKW=l("deleteJsonItemValuesList")("taxid",s.currentOrgsList,s.chlamGenes.keywordAll)},s.advSearch=function(){s.loading=!0,s.keywordResult=s.keyword,s.chlamGenes.currentKW=[],$(".collapse").collapse("hide");var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(s.buildQuery());t.get(e).then(function(e){s.chlamGenes.allGenes=e.data.results.bindings,s.chlamGenes.keywordAll=l("keywordFilter")(s.chlamGenes.allGenes,s.keyword),s.chlamGenes.currentKW=s.chlamGenes.keywordAll}).finally(function(){s.loading=!1})},s.startJS=function(){$(".collapse").collapse("show");var e=introJs().setOption("skipLabel","Exit");e.setOption("showStepNumbers","false"),e.hideHints(),e.start()},s.buildQuery=function(){var e=n.beginning();s.entrez?s.entrez_text?e+=n.equals("?gene","entrez",s.entrez_text):e+=n.triple("?gene","entrez","?entrez"):e+=n.optional(n.triple("?gene","entrez","?entrez"));var t="";return s.uniprot?s.uniprot_text?t+=n.equals("?protein","uniprot",s.uniprot_text):t+=n.triple("?protein","uniprot","?uniprot"):t+=n.optional(n.triple("?protein","uniprot","?uniprot")),s.refseq?s.refseq_text?t+=n.equals("?protein","refseq",s.refseq_text):t+=n.triple("?protein","refseq","?refseq"):t+=n.optional(n.triple("?protein","refseq","?refseq")),s.mf?(t+=n.addLabel("?protein","mf","?mfLabel"),t+=n.filterEnglish("?mfLabel")):t+=n.optional(n.addLabel("?protein","mf","?mfLabel")+n.filterEnglish("?mfLabel")),s.bp?(t+=n.addLabel("?protein","bp","?bpLabel"),t+=n.filterEnglish("?bpLabel")):t+=n.optional(n.addLabel("?protein","bp","?bpLabel")+n.filterEnglish("?bpLabel")),s.cc?(t+=n.addLabel("?protein","cc","?ccLabel"),t+=n.filterEnglish("?ccLabel")):t+=n.optional(n.addLabel("?protein","cc","?ccLabel")+n.filterEnglish("?ccLabel")),s.hp?t+=n.addLabel("?protein","hp","?host_protein"):t+=n.optional(n.addLabel("?protein","hp","?host_protein")),s.uniprot||s.refseq||s.mf||s.bp||s.cc||s.hp?(e+=n.triple("?gene","protein","?protein"),e+=t):(t=n.triple("?gene","protein","?protein")+t,e+=n.optional(t)),s.mf&&s.mf_text&&(e+=n.filter("?mfLabel",s.mf_text)),s.cc&&s.cc_text&&(e+=n.filter("?ccLabel",s.cc_text)),s.bp&&s.bp_text&&(e+=n.filter("?bpLabel",s.bp_text)),s.hp&&s.hp_text&&(e+=n.filter("?host_protein",s.hp_text)),e+=n.ending(),console.log("QUERY:"),console.log(e),e}}],templateUrl:"/static/build/js/angular_templates/genes-keyword-browser.min.html"}).factory("queryBuilder",function(){var r={entrez:"wdt:P351",uniprot:"wdt:P352",refseq:"wdt:P637",mf:"wdt:P680",cc:"wdt:P681",bp:"wdt:P682",protein:"wdt:P688",hp:"wdt:P129"};return{optional:function(e){return"OPTIONAL {"+e+"}"},filter:function(e,t){return"FILTER(CONTAINS(LCASE("+e+"), '"+t.toLowerCase()+"'))."},equals:function(e,t,n){return e+" "+r[t]+" '"+n+"'."},filterEnglish:function(e){return"FILTER(LANG("+e+") = 'en')."},beginning:function(){return"SELECT ?taxon ?taxid ?taxonLabel ?geneLabel ?entrez ?uniprot ?proteinLabel ?locusTag ?refseq_prot ?gene(GROUP_CONCAT(DISTINCT ?aliases) AS ?aliases) (GROUP_CONCAT(DISTINCT ?mfLabel) AS ?mfLabel) (GROUP_CONCAT(DISTINCT ?bpLabel) AS ?bpLabel) (GROUP_CONCAT(DISTINCT ?ccLabel) AS ?ccLabel) (GROUP_CONCAT(DISTINCT ?host_protein) AS ?host_protein) WHERE {?taxon wdt:P171* wd:Q846309.?gene wdt:P279 wd:Q7187.?gene wdt:P703 ?taxon.?gene wdt:P2393 ?locusTag.?gene skos:altLabel ?aliases."},ending:function(){return"?taxon wdt:P685 ?taxid.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}GROUP BY ?locusTag ?taxon ?taxid ?taxonLabel ?geneLabel ?entrez ?uniprot ?proteinLabel ?refseq_prot ?gene"},addLabel:function(e,t,n){return e+" "+r[t]+"/rdfs:label "+n+"."},triple:function(e,t,n){return e+" "+r[t]+" "+n+"."}}});angular.module("goForm").component("goForm",{controller:["$routeParams","$filter","$location","evidenceCodes","sendToView","pubMedData","allGoTerms","locusTag2QID","orthoData",function(o,i,n,e,u,t,a,g,l){var s=this;s.currentTaxid=o.taxid,s.currentLocusTag=o.locusTag,s.pageCount=0;var r={mf_button:{name:"Molecular Function",QID:"Q14860489"},cc_button:{name:"Cellular Component",QID:"Q5058355"},bp_button:{name:"Biological Process",QID:"Q2996394"}};s.goFormModel={evi:null,pub:null,go:null,proteinQID:null,goClass:r[s.goclass].QID},e.getevidenceCodes(function(o){s.evidence=o}),s.data={},s.projection={},l.getOrthologs(s.currentLocusTag).then(function(o){angular.forEach(o.results.bindings,function(o){var e=o.orthoTaxid.value,n=o.orthoLocusTag.value;s.projection[e]=n==s.currentLocusTag,s.data[e]=n})}),s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.selectGoTerm=function(o,e,n){s.goFormModel.go=o,s.goValue=""},s.selectPub=function(o,e,n){s.goFormModel.pub=o,s.pubValue=""},s.getGoTermsAll=function(o){return s.goTermLoading=!0,a.getGoTermsAll(o,r[s.goclass].QID).then(function(o){return o.data.results.bindings.map(function(o){return o})}).finally(function(){s.goTermLoading=!1})},s.getPMID=function(e){return t.getPMID(e).then(function(o){return[o.data.result[e]].map(function(o){return o})})},s.resetForm=function(){s.pageCount=0,s.goFormModel.evi=null,s.goFormModel.pub=null,s.goFormModel.go=null},s.validateFields=function(){if(s.goFormModel.evi&&s.goFormModel.pub&&s.goFormModel.go)return!0},s.sendData=function(){s.loading=!0;var a=0,l=!0,r=!1,e=!1;return angular.forEach(s.projection,function(o){1==o&&(e=!0)}),e?n.path().includes("authorized")?void angular.forEach(s.projection,function(o,t){o?g.getLocusTag2QID(s.data[t],t).then(function(o){var e={evi:s.goFormModel.evi,pub:s.goFormModel.pub,go:s.goFormModel.go,proteinQID:null,goClass:s.goFormModel.goClass};o.data.results.bindings[0].protein&&(e.proteinQID=i("parseQID")(o.data.results.bindings[0].protein.value));var n="/organism/"+t+"/gene/"+s.data[t]+"/wd_go_edit";console.log(n),u.sendToView(n,e).then(function(o){!1===o.data.authentication?l=!(r=!0):o.data.write_success||(l=!1)}).finally(function(){++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)})}):++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(s.loading=!1)):(alert("Please select at least one gene to annotate!"),void(s.loading=!1))}}],templateUrl:"/static/build/js/angular_templates/guided-go-form.min.html",bindings:{goclass:"<",gene:"<"}});angular.module("helpForm").controller("helpFormCtrl",["$http",function(n){"use strict";this.name="",this.email="",this.description="",this.submit=function(){this.submitted=!0,null==this.subject&&(this.subject="Chlambase Help");var t="Name: "+this.name+"\nSender: "+this.email+"\nUrl: "+window.location.href+"\nDescription: "+this.description,e="email?subject="+encodeURIComponent(this.subject)+"&body="+encodeURIComponent(t);n.get(e).then(function(t){console.log("Submitted request!")},function(t){console.log("Error submitting request")})}}]).component("helpForm",{templateUrl:"/static/build/js/angular_templates/help-form.min.html",controller:"helpFormCtrl"});angular.module("hostpathForm").component("hostpathForm",{bindings:{data:"<"},controller:["$location","$routeParams","speciesGenes","pubMedData","sendToView","locusTag2QID","$filter","orthoData",function(t,e,n,o,r,l,u,a){"use strict";var c=this;c.currentTaxid=e.taxid,c.currentLocusTag=e.locusTag,c.pageCount=0,c.orthoData={},c.projection={},a.getOrthologs(c.currentLocusTag).then(function(t){angular.forEach(t.results.bindings,function(t){var e=t.orthoTaxid.value,n=t.orthoLocusTag.value;c.projection[e]=n==c.currentLocusTag,c.orthoData[e]=n})}),c.nextClick=function(){c.pageCount+=1},c.backClick=function(){c.pageCount-=1},c.hostpathAnnotation={proteinQID:null,host_species:null,pub:null,host_protein:null,determination:null},c.species=[{name:"Homo sapiens",qid:"Q15978631",taxid:"9606"},{name:"Mus musculus",qid:"Q83310",taxid:"10090"}],c.determination_methods=[{item:"https://www.wikidata.org/entity/Q32860428",itemLabel:"immunoprecipitation evidence",eco:"ECO:0000085"},{item:"https://www.wikidata.org/entity/Q32860432",itemLabel:"co-localization evidence",eco:"ECO:0001026"}],c.getSpeciesGenes=function(){var t=c.hostpathAnnotation.host_species.taxid;n.getSpeciesGenes(t).then(function(t){c.speciesGenes=t.data.results.bindings})},c.selectProtein=function(t,e,n){c.hostpathAnnotation.host_protein=t},c.getPMID=function(e){return o.getPMID(e).then(function(t){return[t.data.result[e]].map(function(t){return t})})},c.selectPub=function(t,e,n){c.pubValue=t},c.sendData=function(){c.loading=!0;var a=0,i=!0,s=!1,e=!1;return angular.forEach(c.projection,function(t){1==t&&(e=!0)}),e?t.path().includes("authorized")?void angular.forEach(c.projection,function(t,o){t?l.getLocusTag2QID(c.orthoData[o],o).then(function(t){var e={proteinQID:null,host_species:c.hostpathAnnotation.host_species,pub:c.hostpathAnnotation.pub,host_protein:c.hostpathAnnotation.host_protein,determination:c.hostpathAnnotation.determination};if(t.data.results.bindings[0].protein&&(e.proteinQID=u("parseQID")(t.data.results.bindings[0].protein.value)),null!=e.proteinQID){var n="/organism/"+o+"/gene/"+c.orthoData[o]+"/wd_hostpath_edit";console.log(n),r.sendToView(n,e).then(function(t){!1===t.data.authentication?i=!(s=!0):t.data.write_success||(i=!1)}).finally(function(){++a==Object.keys(c.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),c.resetForm()):s?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),c.loading=!1)})}}):++a==Object.keys(c.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),c.resetForm()):s?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),c.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(c.loading=!1)):(alert("Please select at least one gene to annotate!"),void(c.loading=!1))},c.resetForm=function(){c.pageCount=0,c.proteinValue="",c.pubValue=null,c.hostpathAnnotation={proteinQID:null,host_species:null,pub:null,host_protein:null,determination:null}}}],templateUrl:"/static/build/js/angular_templates/hostpath-form.min.html"});angular.module("jbrowseView").component("jbrowseView",{template:'<iframe class="jbrowse" ng-src={{$ctrl.jbrowseURI()}}></iframe>',bindings:{taxid:"<",gene:"<",entrez:"<"},controller:function(){var t=this;t.$onInit=function(){},t.$onChanges=function(e){e.entrez&&(t.jbrowseURI=function(){var e=Number(t.gene.genStart)-1e3,n=Number(t.gene.genEnd)+1e3,r="";return e&&n&&t.gene.refseqGenome&&(r="&loc="+t.gene.refseqGenome+":"+e+".."+n),"static/wiki/js/external_js/JBrowse-1.14.1/index.html?data="+t.taxid+"_data&tracks=DNA,genes,operons,mutants&menu=0"+r})}}});angular.module("keywordForm").component("keywordForm",{controller:["$filter","$location","allChlamydiaGenes",function(e,l,t){"use strict";var o=this;o.$onInit=function(){o.selected=null,t.getAllChlamGeneLabels().then(function(e){o.genes=e.data.results.bindings}),o.submitKeyword=function(e){null==e?alert("Please enter a keyword or ID"):l.path("keyword/"+e)},o.onSelect=function(e){l.path("/organism/"+e.taxid.value+"/gene/"+e.locusTag.value)}},o.scrolled=!1,o.keyPressed=function(e){o.keyword=o.keyword.replace("/"," "),13==e.keyCode?o.scrolled?o.onSelect(o.selected):o.submitKeyword(o.keyword):37<=e.keyCode&&e.keyCode<=40&&(o.scrolled=!0)},o.select=function(e,l){o.selected=e,"click"==l.type&&o.onSelect(e)}}],templateUrl:"/static/build/js/angular_templates/keyword-form.min.html"});angular.module("keywordPaginated").component("keywordPaginated",{bindings:{data:"<",orgs:"<"},controller:["$location",function(n){"use strict";this.onSelect=function(t){n.path("/organism/"+t.taxid.value+"/gene/"+t.locusTag.value)},this.longTitle=function(t){return 80<t.length?t:""}}],templateUrl:"/static/build/js/angular_templates/keyword-paginated.min.html"});angular.module("landingPage").component("landingPage",{controller:["allChlamOrgs","recentChlamPubLinks","euroPubData",function(t,e,a){"use strict";var l=this;l.myInterval=5e3,l.noWrapSlides=!1;l.active=0;l.orgList=t.getAllOrgs(),e.getRecentChlamPubLinks().then(function(t){var e=t.data.esearchresult.idlist;l.recentPubs=[],angular.forEach(e,function(t){a.getEuroPubData(t).then(function(t){t.data.resultList.result[0]&&l.recentPubs.push(t.data.resultList.result[0])})})}),document.getElementById("get-started").onclick=function(){var t=introJs().setOption("skipLabel","Skip Tutorial");t.setOption("showStepNumbers","false"),t.hideHints(),t.start()},window.addEventListener("load",function(){if("true"!=localStorage.getItem("tutorial")){var t=introJs().setOption("skipLabel","Skip Tutorial");t.setOption("showStepNumbers","false"),t.hideHints(),t.oncomplete(function(){console.log("COMPLETED"),localStorage.setItem("tutorial","true")}),t.onexit(function(){console.log("EXIT"),localStorage.setItem("tutorial","true")}),t.start()}else console.log("Tutorial already completed")})}],templateUrl:"/static/build/js/angular_templates/landing-page.min.html"});angular.module("mainPage").component("mainPage",{controller:["$filter","$routeParams","$location","allChlamOrgs","wdGetEntities","entrez2QID","GOTerms","InterPro","OperonData","expasyData","mutantData","locusTag2Pub","locusTag2QID","sendToView","expressionTimingData","hostPathogen","RefSeqChrom","allOrgGenes","$http","ECNumbers",function(a,e,r,n,o,t,u,i,s,c,l,g,p,m,d,h,v,f,G,b){var T=this;r.path().includes("authorized")&&(console.log("Is authorized"),G.get("validateSession").then(function(e){if(console.log("Login: "+e.data.login),!e.data.login)return alert("Your session has expired!"),void r.path(r.path().replace("authorized/",""))})),T.$onInit=function(){"use strict";T.currentTaxid=e.taxid,T.currentLocusTag=e.locusTag,T.currentGene={locusTag:T.currentLocusTag,taxid:T.currentTaxid},T.annotations={ecnumber:[]},f.getAllOrgGenes(T.currentTaxid).then(function(e){var n=e.data.results.bindings;T.currentAllGenes=a("orderObjectBy")(n,"genStart")}),n.getAllOrgs(function(e){T.orgList=e,T.currentOrg=a("getJsonItemOrg")("taxid",T.currentTaxid,T.orgList),null==T.currentOrg&&(alert("not a valid taxonomy id"),r.path("/"))}),T.hasprotein=!0,p.getLocusTag2QID(T.currentLocusTag,T.currentTaxid).then(function(e){var n=e.data.results.bindings;0<n.length?(T.currentGene.geneQID=a("parseQID")(n[0].gene.value),n[0].protein?T.currentGene.proteinQID=a("parseQID")(n[0].protein.value):T.hasprotein=!1):(alert(T.currentLocusTag+" doesn't seem to be a gene in this genome."),r.path("/organism/"+T.currentTaxid))}).finally(function(){o.wdGetEntities(T.currentGene.geneQID).then(function(e){var n=e.entities[T.currentGene.geneQID];T.currentGene.entrez=n.claims.P351[0].mainsnak.datavalue.value,T.currentGene.geneLabel=n.labels.en.value,T.currentGene.locusTag=n.claims.P2393[0].mainsnak.datavalue.value,T.currentGene.geneDescription=n.descriptions.en.value,T.currentGene.genStart=n.claims.P644[0].mainsnak.datavalue.value,T.currentGene.genEnd=n.claims.P645[0].mainsnak.datavalue.value,T.currentGene.strand=n.claims.P2548[0].mainsnak.datavalue.value,T.currentGene.geneType=n.claims.P279[0].mainsnak.datavalue.value,T.currentGene.geneAliases=[],angular.forEach(n.aliases.en,function(e){e.value!=T.currentGene.locusTag&&T.currentGene.geneAliases.push(e.value)})}),T.currentGene.proteinQID&&o.wdGetEntities(T.currentGene.proteinQID).then(function(e){var n=e.entities[T.currentGene.proteinQID];T.currentGene.proteinLabel=n.labels.en.value,T.currentGene.description=n.descriptions.en.value,T.currentGene.uniprot=n.claims.P352[0].mainsnak.datavalue.value,T.currentGene.refseqProt=n.claims.P637[0].mainsnak.datavalue.value,T.currentGene.productType=n.claims.P279[0].mainsnak.datavalue.value,T.currentGene.proteinAliases=[],angular.forEach(n.aliases.en,function(e){T.currentGene.proteinAliases.push(e.value)}),i.getInterPro(T.currentGene.uniprot).then(function(e){T.ipData=e,T.annotations.interpro=e}),h.getHostPathogen(T.currentGene.uniprot).then(function(e){T.hostpathData=e,T.annotations.hostpath=e}),u.getGoTerms(T.currentGene.uniprot).then(function(e){T.annotations.go={cellcomp:[],bioproc:[],molfunc:[]},T.annotations.reaction={},T.mf="mf_button",T.bp="bp_button",T.cc="cc_button";var n=e.data.results.bindings;angular.forEach(n,function(e,n){"http://www.wikidata.org/entity/Q5058355"===e.goclass.value&&T.annotations.go.cellcomp.push(e),"http://www.wikidata.org/entity/Q14860489"===e.goclass.value&&T.annotations.go.molfunc.push(e),"http://www.wikidata.org/entity/Q2996394"===e.goclass.value&&T.annotations.go.bioproc.push(e)})}),b.getECNumbers(T.currentGene.uniprot).then(function(e){var n=e.data.results.bindings;angular.forEach(n,function(e){e.hasOwnProperty("ecnumber")&&-1==T.annotations.ecnumber.indexOf(e.ecnumber.value)&&-1==e.ecnumber.value.indexOf("-")&&T.annotations.ecnumber.push(e.ecnumber.value)})}).finally(function(){angular.forEach(T.annotations.ecnumber,function(e){c.getReactionData(e).then(function(e){console.log(e),T.annotations.reaction[e.ecnumber]=e.reaction})});var e={locusTag:T.currentGene.locusTag,taxid:T.currentGene.taxid,ec_number:T.annotations.ecnumber};t(e)})}),s.getOperonData(T.currentGene.entrez).then(function(e){var n=e.data.results.bindings;0<n.length?(T.annotations.currentOperon=n[0].operonItemLabel.value,T.opData=n,T.annotations.operons=n):(T.opData=[],T.annotations.operons=[])}),v.getRefSeqChrom(T.currentLocusTag).then(function(e){console.log(e),e[0]&&(T.currentGene.refseqGenome=e[0].refSeqChromosome.value)}),d.getExpression(function(e){T.expression=e;var n=a("keywordFilter")(e,T.currentLocusTag);T.currentExpression={},angular.forEach(n[0],function(e,n){"_id"!=n&&"$oid"!=n&&"timestamp"!=n&&(T.currentExpression[n]=e)}),T.annotations.expression=T.currentExpression});var e=T.currentGene.locusTag.replace("_","");g.getlocusTag2Pub(e).then(function(e){T.annotations.pubList=e.data.resultList.result})});var t=function(e){var n=r.path()+"/mg_mutant_view";m.sendToView(n,e).then(function(e){T.annotations.mutants={mutants:e.data.mutants,refseq:T.currentGene.refseqGenome}})}}}],templateUrl:"/static/build/js/angular_templates/main-page_new.min.html"});angular.module("mutantBatch").component("mutantBatch",{bindings:{data:"<"},controller:["$timeout","uploadFile","Upload",function(l,o,n){"use strict";var u=this;u.uploadFiles=function(a,t){u.f=a,u.errFile=t&&t[0],a&&(o.uploadFile("/wd_upload",a).then(function(t){console.log(t)}),a.upload=n.upload({url:"https://angular-file-upload-cors-srv.appspot.com/upload",data:{file:a}}),a.upload.then(function(t){l(function(){a.result=t.data})},function(t){0<t.status&&(u.errorMsg=t.status+": "+t.data)},function(t){a.progress=Math.min(100,parseInt(100*t.loaded/t.total))}))},u.metaModel={}}],templateUrl:"/static/build/js/angular_templates/mutant-batch.min.html"});angular.module("mutantForm").component("mutantForm",{bindings:{data:"<"},controller:["pubMedData","$filter","$location","$routeParams","locusTag2QID","wdGetEntities","sendToView",function(t,a,e,n,o,i,l){var u=this;u.$onInit=function(){u.reftype="PMID",u.pubtitle="",u.pubauthor="",u.pubdate="",u.mutantAnnotation={taxid:n.taxid,locusTag:n.locusTag,chromosome:null,name:null,mutant_type:{alias:null,name:null,id:null,key:null},coordinate:{start:null},percent_gene_intact:null,insert_direction:null,pub:null,doi:null,ref_base:null,variant_base:null,variant_type:{alias:null,name:null,id:null},aa_effect:null},u.pageCount=0,o.getLocusTag2QID(u.mutantAnnotation.locusTag,u.mutantAnnotation.taxid).then(function(t){var n=t.data.results.bindings;0<n.length&&(u.geneQID=a("parseQID")(n[0].gene.value))}).finally(function(){i.wdGetEntities(u.geneQID).then(function(t){var n=t.entities[u.geneQID];u.genStart=n.claims.P644[0].mainsnak.datavalue.value,u.genEnd=n.claims.P645[0].mainsnak.datavalue.value,n.claims.P644[0].qualifiers.P1057?u.mutantAnnotation.chromosome=n.claims.P644[0].qualifiers.P1057[0].datavalue.value:n.claims.P644[0].qualifiers.P2249&&(u.mutantAnnotation.chromosome=n.claims.P644[0].qualifiers.P2249[0].datavalue.value)})}),u.nextClick=function(){u.pageCount+=1},u.backClick=function(){u.pageCount-=1},u.seq_ontology_map=[{alias:"SYNONYMOUS",name:"synonymous",id:"SO:0001814"},{alias:"Non-neutral",name:"non-synonymous",id:"SO:0001816"},{alias:"NON-CODING",name:"non_transcribed_region",id:"SO:0000183"},{alias:"Neutral",name:"silent_mutation",id:"SO:0001017"},{alias:"NONSENSE",name:"stop_gained",id:"SO:0001017"}],u.mutant_type_map=[{alias:"chemical mutagenesis",name:"chemically induced mutation",id:"EFO_0000370",key:1},{alias:"transposon mutagenesis",name:"tbd",id:"tbd",key:2}],u.getPMID=function(n){return t.getPMID(n).then(function(t){return[t.data.result[n]].map(function(t){return t})})},u.selectPub=function(t,n,a){u.mutantAnnotation.pub=t.uid,u.pubtitle=t.title,u.pubauthor=t.authors[0].name,u.pubdate=t.pubdate},u.resetForm=function(){u.$onInit()},u.sendData=function(t){if(u.loading=!0,t.action="annotate",e.path().includes("authorized")){var n=e.path().replace("/authorized/","")+"/wd_mutant_edit";console.log(n),l.sendToView(n,t).then(function(t){!0===t.data.write_success?(console.log("SUCCESS"),console.log(t),alert("Successfully Annotated! Well Done! The annotation will appear here soon."),u.resetForm()):!1===t.data.authentication?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):(console.log("FAILURE: UNKNOWN"),console.log(t),alert("Something went wrong.  Give it another shot!"))}).finally(function(){u.loading=!1})}else alert("Please authorize ChlamBase to edit Wikidata on your behalf!")},u.validatePosition=function(){return u.mutantAnnotation.coordinate.start>=u.genStart&&u.mutantAnnotation.coordinate.start<=u.genEnd},u.validateBase=function(){return u.mutantAnnotation.ref_base&&u.mutantAnnotation.variant_base&&u.mutantAnnotation.ref_base!=u.mutantAnnotation.variant_base},u.validateFields=function(){return!(!u.mutantAnnotation.name||!u.mutantAnnotation.mutant_type||"DOI"==u.reftype&&!u.mutantAnnotation.doi||"PMID"==u.reftype&&!u.mutantAnnotation.pub||!u.validatePosition())&&(1==u.mutantAnnotation.mutant_type.key?u.validateBase()&&u.mutantAnnotation.variant_type&&u.mutantAnnotation.aa_effect:u.mutantAnnotation.percent_gene_intact&&u.mutantAnnotation.insert_direction)}}}],templateUrl:"/static/build/js/angular_templates/mutant-form.min.html"});angular.module("operonForm").component("operonForm",{controller:["$routeParams","$location","$filter","pubMedData","locusTag2QID","allOrgOperons","allChlamOrgs","sendToView",function(e,n,o,a,t,r,l,u){"use strict";var i=this;i.$onInit=function(){i.currentTaxid=e.taxid,i.currentLocusTag=e.locusTag,i.alerts={success:!1,error:!1},t.getLocusTag2QID(i.currentLocusTag,i.currentTaxid).then(function(e){i.geneQID=o("parseQID")(e.data.results.bindings[0].gene.value),i.opFormModel={operon:null,pub:[],genes:[],geneQID:i.geneQID,organism:null},i.pageCount=0,i.nextClick=function(){i.pageCount+=1,console.log(i.data)},i.backClick=function(){i.pageCount-=1},l.getAllOrgs(function(e){i.orgList=e,i.opFormModel.organism=o("getJsonItemOrg")("taxid",i.currentTaxid,i.orgList)}),i.getPMID=function(o){return a.getPMID(o).then(function(e){return[e.data.result[o]].map(function(e){return e})})},i.selectPub=function(e,o,n){i.opFormModel.pub.push(e),i.pubValue=""},i.removePub=function(e){console.log(e);var n,a,o,t;i.opFormModel.pub=(n="uid",a=e.uid,o=i.opFormModel.pub,t=[],angular.forEach(o,function(e,o){e[n]!=a&&t.push(e)}),t)},i.nameOperon=function(e){e&&(i.opFormModel.operon={operon:{value:"None"},operonLabel:{value:e}})},i.selectGene=function(e,o,n){i.opFormModel.genes.push({gene:e.gene.value,locusTag:e.locusTag.value}),i.geneValue=""},i.removeGene=function(e){var n,a,o,t;i.opFormModel.genes=(n="locusTag",a=e.locusTag,o=i.opFormModel.genes,t=[],angular.forEach(o,function(e,o){e[n]!=a&&t.push(e)}),t)},i.validateFields=function(){if(i.opFormModel.operon&&i.opFormModel.pub&&0<i.opFormModel.genes.length)return!0},i.sendData=function(e){i.loading=!0;var o=n.path().replace("/authorized/","")+"/wd_operon_edit";if(!n.path().includes("authorized"))return alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(i.loading=!1);u.sendToView(o,e).then(function(e){!0===e.data.operonWrite_success?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),i.resetForm()):!1===e.data.authentication?(console.log("FAILURE: AUTHENTICATION"),console.log(e),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!")}).finally(function(){i.loading=!1})},i.resetForm=function(){i.pageCount=0,i.opFormModel.operon=null,i.opFormModel.pub=null,i.opFormModel.genes=[],i.operonValue="",i.geneValue="",i.pubValue=""}})}}],templateUrl:"/static/build/js/angular_templates/operon-form.min.html",bindings:{data:"<",operon:"<",allorggenes:"<"}});angular.module("organismForm").component("organismForm",{controller:["$location",function(o){"use strict";this.onSelect=function(n){o.path("/organism/"+n.taxid)}}],templateUrl:"/static/build/js/angular_templates/organism-form.min.html",bindings:{orgs:"<"}});angular.module("organismTree").component("organismTree",{controller:function(){"use strict";var i=this;i.$onInit=function(){google.charts.load("current",{packages:["orgchart"]}),google.charts.setOnLoadCallback(function(){i.data=new google.visualization.DataTable,i.data.addColumn("string","Name"),i.data.addColumn("string","Parent"),i.data.addRows([[{v:"Chlamydia",f:'<div class="btn btn-default treeNode nohover" ><i>Chlamydia</i></div>'},""],[{v:"Chlamydia trachomatis",f:'<div class="btn btn-default treeNode nohover" ><i>Chlamydia trachomatis</i></div>'},"Chlamydia"],[{v:"Chlamydia muridarum",f:'<div class="btn btn-default treeNode nohover" ><i>Chlamydia muridarum</i></div>'},"Chlamydia"],[{v:"Chlamydia pneumoniae",f:'<div class="btn btn-default treeNode nohover" ><i>Chlamydia pneumoniae</i></div>'},"Chlamydia"],[{v:"Chlamydia pneumoniae CWL029",f:'<div class="btn btn-default treeNode link"><a href="/organism/115713/" ><i>Chlamydia pneumoniae CWL029</i></div>'},"Chlamydia pneumoniae"],[{v:"Chlamydia muridarum Nigg",f:'<div class="btn btn-default treeNode link"><a href="/organism/243161/" ><i>Chlamydia muridarum Nigg</i></div>'},"Chlamydia muridarum"],[{v:"Chlamydia trachomatis 434/BU",f:'<div class="btn btn-default treeNode link"><a href="/organism/471472/" ><i>Chlamydia trachomatis 434/BU</i></a></div>'},"Chlamydia trachomatis"],[{v:"Chlamydia trachomatis D/UW-3/CX",f:'<div class="btn btn-default treeNode link"><a href="/organism/272561/" ><i>Chlamydia trachomatis D/UW-3/CX</i></a></div>'},"Chlamydia trachomatis"]]),a=new google.visualization.OrgChart(document.getElementById("chart_div")),console.log(a),a.draw(i.data,{allowHtml:!0,size:"medium"});var a})}},templateUrl:"/static/build/js/angular_templates/organism-tree.min.html",bindings:{orgs:"<"}});angular.module("organismView").component("organismView",{templateUrl:"/static/build/js/angular_templates/organism-view.min.html",controller:["$routeParams",function(i){"use strict";this.currentTaxid=i.taxid}],bindings:{org:"<"}});angular.module("proteinView").component("proteinView",{templateUrl:"/static/build/js/angular_templates/protein-view.min.html",controller:function(){"use strict"},bindings:{protein:"<"}});