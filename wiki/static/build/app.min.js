angular.module("cmod",["ui.bootstrap","ngResource","ngRoute","ngTable","ngCookies","filters","browserPage","mainPage","geneForm","organismForm","resources","proteinView","organismView","jbrowseView","annotationsView","landingPage","geneOntology","interPro","operonAnnotations","goForm","operonForm","geneOverview","enzymeView","mutantsView","allgenesDownload","angularUtils.directives.dirPagination","oauthView","advSearchPage","keywordForm","organismTree","linkedPubs","orthologView","mutantForm","functionalAnnotation","expressionView","hostPathogen","hostpathForm","alignmentView","geneNameForm","oauthForm","advancedKeywordForm","localizationView","localizationForm","footer","header","pdbForm","geneSymbolForm","advancedSearchFilter"]);angular.module("cmod").config(["$locationProvider","$routeProvider","$httpProvider","$interpolateProvider","$compileProvider",function(e,a,t,o,n){"use strict";e.html5Mode({enabled:!0}),n.aHrefSanitizationWhitelist(/^\s*(|blob|):/),n.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension):/),a.when("/",{template:"<landing-page></landing-page>"}).when("/organism/:taxid/",{template:"<browser-page></browser-page>"}).when("/keyword/:keyword",{template:"<adv-search-page></adv-search-page>"}).when("/keyword/",{template:"<adv-search-page></adv-search-page>"}).when("/organism/:taxid/gene/:locusTag",{template:"<main-page></main-page>"}).when("/organism/:taxid/gene/:locusTag/authorized/",{template:"<main-page></main-page>"}).otherwise({template:"<not-found></not-found>"}),o.startSymbol("{$"),o.endSymbol("$}"),t.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded"}]).run(["$http","$cookies",function(e,a){e.defaults.headers.post["X-CSRFToken"]=a.get("csrftoken")}]);angular.module("filters",[]);angular.module("filters").filter("parseQID",function(){return function(r){return r?r.split("/").slice(-1)[0]:"None"}}),angular.module("filters").filter("interactions2bacteria",function(){return function(r){var t=[];return angular.forEach(r,function(r){var n=r.hostLabel.value;"Homo sapiens"!=n&&"Mus musculus"!=n&&t.push(r)}),t}}),angular.module("filters").filter("interactions2host",function(){return function(r){var t=[];return angular.forEach(r,function(r){var n=r.hostLabel.value;"Homo sapiens"!=n&&"Mus musculus"!=n||t.push(r)}),t}}),angular.module("filters").filter("replaceColon",function(){return function(r){return r.split(":").join("_")}}),angular.module("filters").filter("replaceColon",function(){return function(r){return r.split(":").join("_")}}),angular.module("filters").filter("replaceperiod",function(){return function(r){return r.split(".").join("_")}}),angular.module("filters").filter("convertStrand",function(){return function(r){return r?"Q22809711"===r?"reverse":"forward":"None"}}),angular.module("filters").filter("strandNum",function(){return function(r){return r?"Q22809711"===r?"2":"1":"None"}}),angular.module("filters").filter("uniqueGoTerms",function(){return function(r){var t=[];return angular.forEach(r,function(n){angular.forEach(t,function(r){n!=r&&t.push(r)})}),t}}),angular.module("filters").filter("goClass",function(){var n={mf_button:"Molecular Function",cc_button:"Cellular Component",bp_button:"Biological Process"};return function(r){return n[r]}}),angular.module("filters").filter("startFrom",function(){return function(r,n){return n=+n,r.slice(n)}}),angular.module("filters").filter("list2CSV",function(){return function(r){return r?r.join(", "):"None"}}),angular.module("filters").filter("getJsonItem",function(){return function(t,u,r){var e;return angular.forEach(r,function(r,n){if(r[t].value!=u)return"none";e=r}),e}}),angular.module("filters").filter("getJsonItemNoWD",function(){return function(t,u,r){var e=[];return angular.forEach(r,function(r,n){if(r[t]!=u)return"none";e.push(r)}),e}}),angular.module("filters").filter("deleteJsonItem",function(){return function(t,u,r){var e=[];return angular.forEach(r,function(r,n){r[t].value!=u||e.push(r)}),e}}),angular.module("filters").filter("deleteJsonItemValuesList",function(){return function(u,r,n){var e=[];return angular.forEach(r,function(t){angular.forEach(n,function(r,n){r[u].value==t&&e.push(r)})}),e}}),angular.module("filters").filter("getJsonItemOrg",function(){return function(t,u,r){var e;return angular.forEach(r,function(r,n){if(r[t]!=u)return"none";e=r}),e}}),angular.module("filters").filter("orderObjectBy",function(){return function(r,t){if(!angular.isObject(r))return r;var n=[];for(var u in r)n.push(r[u]);return n.sort(function(r,n){return(r=parseInt(r[t].value))-(n=parseInt(n[t].value))}),n}}),angular.module("filters").filter("keywordFilter",["$filter",function(u){return function(n,r){var t=r.split(" ");return angular.forEach(t,function(r){r&&(n=u("filter")(n,r))}),n}}]),angular.module("filters").filter("locusTagFilter",["$filter",function(r){return function(r,n){var t=[];return angular.forEach(r,function(r){-1!=n.indexOf(r.locusTag.value)&&t.push(r)}),t}}]),angular.module("filters").filter("cut",function(){return function(r,n,t,u){if(!r)return"";if(!(t=parseInt(t,10)))return r;if(r.length<=t)return r;if(r=r.substr(0,t),n){var e=r.lastIndexOf(" ");-1!=e&&("."!=r.charAt(e-1)&&","!=r.charAt(e-1)||(e-=1),r=r.substr(0,e))}return r+(u||" â€¦")}}),angular.module("filters").filter("typeFilter",function(){var n={Q7187:"gene",Q20747295:"protein-coding-gene",Q8054:"protein"};return function(r){return n[r]}});angular.module("resources",[]);angular.module("resources").factory("appData",["$resource",function(e){return e("/static/wiki/json/application_data.json",{},{getAppData:{method:"GET",params:{},cache:!0}})}]),angular.module("resources").factory("taxidFilter",["$resource","$q",function(e,n){var o=e("/static/wiki/json/tax_map.json",{},{getTaxMap:{method:"GET",params:{},cache:!0}});return{name:function(r){var t=n.defer();return o.getTaxMap(function(e){t.resolve(e[r])}),t.promise},species:function(r){var t=n.defer();return o.getTaxMap(function(e){t.resolve(e[r].split(" ").slice(0,2).join(" "))}),t.promise},strain:function(r){var t=n.defer();return o.getTaxMap(function(e){t.resolve(e[r].split(" ").slice(2).join(" "))}),t.promise},map:function(){var r=n.defer();return o.getTaxMap(function(e){r.resolve(e)}),r.promise}}}]),angular.module("resources").factory("orgTree",["$resource",function(e){return e("/static/wiki/json/org_tree.json",{},{getOrgTree:{method:"GET",params:{},cache:!0}})}]),angular.module("resources").factory("allOrgs",["$resource",function(e){return e("/static/wiki/json/orgsList.json",{},{getAllOrgs:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("evidenceCodes",["$resource",function(e){return e("/static/wiki/json/evidence_codes.json",{},{getevidenceCodes:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("mutantData",["$resource",function(e){return e("/static/wiki/json/kokes.json",{},{getKokesMutants:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("expressionTimingData",["$resource",function(e){return e("/static/wiki/json/expression_timing.json",{},{getExpression:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("pdbData",["$http",function(t){return{getPdbData:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?pdbId ?pmid WHERE {?protein wdt:P352 '"+e+"'.?protein p:P638 ?pdbClaim.?pdbClaim ps:P638 ?pdbId.?pdbClaim prov:wasDerivedFrom/pr:P248/wdt:P698 ?pmid.}");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("orthoData",["$http","$q",function(n,o){return{getOrthologs:function(e){var r=o.defer(),t="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?orthoLocusTag ?orthoTaxid ?entrez ?uniprot ?refseq ?reference WHERE {{?gene wdt:P2393 '"+e+"'.?gene p:P684 ?statement.?statement ps:P684 ?ortholog.?ortholog wdt:P2393 ?orthoLocusTag.?ortholog wdt:P703 ?orthoTaxon.?orthoTaxon wdt:P685 ?orthoTaxid.OPTIONAL {?ortholog wdt:P351 ?entrez.}?statement prov:wasDerivedFrom/pr:P248 ?reference.OPTIONAL {?ortholog wdt:P688 ?protein.?protein wdt:P352 ?uniprot.?protein wdt:P637 ?refseq.}}UNION{?gene wdt:P2393 '"+e+"'.?gene wdt:P2393 ?orthoLocusTag.?gene wdt:P703 ?orthoTaxon.?orthoTaxon wdt:P685 ?orthoTaxid.OPTIONAL {?gene wdt:P351 ?entrez.}OPTIONAL {?gene wdt:P688 ?protein.?protein wdt:P352 ?uniprot.?protein wdt:P637 ?refseq.}}}");return n.get(t).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}}}]),angular.module("resources").factory("sendToView",["$http",function(n){return{sendToView:function(e,r){var t=e;return n.post(t,r).success(function(e){return e}).error(function(e,r){return r})}}}]),angular.module("resources").factory("uploadFile",["$http",function(n){return{uploadFile:function(e,r){var t=e;return n.post(t,r).success(function(e){return e}).error(function(e,r){return r})}}}]),angular.module("resources").factory("currentOrgFetch",["$http",function(r){return{getCurrentOrg:function(t){var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?taxid ?taxon ?taxonLabel WHERE{ ?taxon wdt:P685 '"+t+"'. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . } }");return r.get(e).then(function(e){var r=e.data.results.bindings;return{taxid:t,taxon:r[0].taxon.value,taxonLabel:r[0].taxonLabel.value}})}}}]),angular.module("resources").factory("speciesGenes",["$http",function(t){return{getSpeciesGenes:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?protein ?proteinLabel ?uniprot WHERE{ ?taxon wdt:P685 '"+e+'\'. ?protein wdt:P352 ?uniprot;wdt:P703 ?taxon;rdfs:label ?proteinLabel.FILTER (lang(?proteinLabel) = "en") }');return console.log(r),t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allOrgOperons",["$http",function(t){return{getAllOrgOperons:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?operon ?operonLabel WHERE{ ?taxon wdt:P685 '"+e+"'. ?operon wdt:P703 ?taxon; wdt:P279 wd:Q139677. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' .}} ");return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("proteinMass",["$http","$q",function(n,o){return{getMass:function(e){var r="https://www.uniprot.org/uniprot/{}.xml".replace("{}",e),t=o.defer();return n.get(r).success(function(e){return t.resolve(e.match(/mass="\d+"/)[0].match(/\d+/)[0])}).error(function(e){return t.reject(e)}),t.promise}}}]),angular.module("resources").factory("GOTerms",["$http",function(t){return{getGoTerms:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?gotermValueLabel ?goID ?gotermValue ?goclass ?reference_retrievedLabel (GROUP_CONCAT(DISTINCT ?reference_stated_label; SEPARATOR = '; ') AS ?reference_stated_label) (GROUP_CONCAT(DISTINCT ?determination; SEPARATOR = ';') AS ?determinationLabel) WHERE {?protein wdt:P352 '"+e+"'.?protein (p:P680|p:P681|p:P682)+ ?goterm.?goterm pq:P459/rdfs:label ?determination. FILTER(LANG(?determination) = 'en').OPTIONAL { ?goterm (prov:wasDerivedFrom/pr:P248)/rdfs:label ?reference_stated_label. FILTER(LANG(?reference_stated_label) = 'en').}OPTIONAL { ?goterm (prov:wasDerivedFrom/pr:P813) ?reference_retrieved. }?goterm (ps:P680|ps:P681|ps:P682)+ ?gotermValue.?gotermValue wdt:P31 ?goclass.?gotermValue wdt:P686 ?goID.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}GROUP BY ?gotermValueLabel ?goID ?gotermValue ?goclass ?determinationLabel ?reference_retrievedLabel");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("ECNumbers",["$http",function(t){return{getECNumbers:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?ecnumber WHERE {?protein wdt:P352 '"+e+"'.?protein (wdt:P680|wdt:P681|wdt:P682)+ ?gotermValue.?gotermValue wdt:P591 ?ecnumber.}");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("InterPro",["$http",function(t){return{getInterPro:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT distinct ?protein ?interPro_item ?interPro_label ?ipID ?reference_stated_inLabel ?refURL WHERE {?proteinLabel wdt:P352'"+e+'\';p:P527 ?interPro.?interPro ps:P527 ?interPro_item.?interPro prov:wasDerivedFrom/pr:P248 ?reference_stated_in ;prov:wasDerivedFrom/pr:P854 ?refURL .?interPro_item wdt:P2926 ?ipID;rdfs:label ?interPro_label. SERVICE wikibase:label { bd:serviceParam wikibase:language "en" .}filter (lang(?interPro_label) = "en") .}');return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("RefSeqChrom",["$http",function(t){return{getRefSeqChrom:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?refSeqChromosome WHERE{ \n  ?gene wdt:P2393 '"+e+"';        p:P644 ?chr.\n  ?chr pq:P1057 ?chromosome. \n  ?chromosome wdt:P2249 ?refSeqChromosome.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' .}\n} \n");return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("hostPathogen",["$http",function(t){return{getHostPathogen:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT DISTINCT ?hostGeneLabel ?hostProteinLabel ?hostLabel ?reference_stated_inLabel ?determinationLabel ?pmid WHERE {?protein wdt:P352 '"+e+"'.?protein p:P129 ?hpClaim.?hpClaim (prov:wasDerivedFrom/pr:P248) ?reference_stated_in.?hpClaim pq:P459 ?determination.?reference_stated_in wdt:P698 ?pmid.?hpClaim ps:P129 ?hostProtein.?hostProtein wdt:P703 ?host.?hostProtein wdt:P702 ?hostGene.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}");return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("tax2QID",["$http",function(t){return{getQID:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?taxon WHERE {?taxon wdt:P685 '"+e+"'.}");return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("annotationSettings",["$http",function(e){return{getSettings:function(){return e.get("/static/wiki/json/module_settings.json").then(function(e){return e})}}}]),angular.module("resources").factory("OperonData",["$http",function(t){return{getOperonData:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?operonItemLabel ?op_genesLabel ?locusTag ?entrez ?genStart ?genEnd ?strandLabel ?reference_stated_inLabel ?reference_pmid WHERE {?gene wdt:P2393 '"+e+"';      p:P361 ?operon.?operon ps:P361 ?operonItem;        (prov:wasDerivedFrom/pr:P248) ?reference_stated_in.?operonItem wdt:P31 wd:Q139677;            wdt:P527 ?op_genes.?op_genes wdt:P2393 ?locusTag;          wdt:P351 ?entrez;          wdt:P644 ?genStart;          wdt:P645 ?genEnd;          wdt:P2548 ?strand.?reference_stated_in wdt:P698 ?reference_pmid.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("geneSequenceData",["$http","$q",function(c,e){"use strict";return{getSequence:function(s){var i=e.defer();return c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=gene&term="+s).success(function(e){var u=e;if(u.includes("<Id>")){var r=u.substring(u.indexOf("<Id>")+4,u.indexOf("</Id>"));c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=gene&id="+r).success(function(e){u=e;var r=parseInt(u.substring(u.indexOf("<ChrStart>")+10,u.indexOf("</ChrStart>")))+1,t=parseInt(u.substring(u.indexOf("<ChrStop>")+9,u.indexOf("</ChrStop>")))+1,n=u.substring(u.indexOf("<ChrAccVer>")+11,u.indexOf("</ChrAccVer>")),o=1;if(t<r){o=2;var a=r;r=t,t=a}c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id="+n+"&seq_start="+r+"&seq_stop="+t+"&strand="+o+"&rettype=fasta").success(function(e){var r=">"+s+"\n",t=e.substring(e.indexOf("\n")+1,e.length).replace(/\n/g,"");i.resolve(r+t)}).error(function(e){i.reject(e)})}).error(function(e){i.reject(e)})}}),i.promise}}}]),angular.module("resources").factory("proteinSequenceData",["$http","$q",function(e,r){"use strict";return{getSequence:function(n){var o=r.defer();return n?e.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=protein&id="+n+"&rettype=fasta").then(function(e){var r=e.data,t=">"+n+"\n"+r.substring(r.indexOf("\n")+1).replace(/\n/g,"");o.resolve(t)},function(e){console.log("Error reading protein sequence"),o.reject(e)}):(console.log("No Ref Seq ID"),o.reject()),o.promise}}}]),angular.module("resources").factory("expasyData",["$http","$location",function(t,e){var n="https://"+e.host()+"/expasy/EC/{ecnumber}.txt";return{getReactionData:function(e){var r=n.replace("{ecnumber}",e);return t.get(r).then(function(e){var n={reaction:[]},r=e.data.split("\n");return angular.forEach(r,function(e,r){if(e.match("^ID")&&(n.ecnumber=e.slice(5)),e.match("^CA ")){var t=e.replace(/^(CA)/,"");n.reaction.push(t)}}),n},function(e){return e})}}}]),angular.module("resources").factory("pubMedData",["$http",function(t){return{getPMID:function(r){var e="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&retmode=json&id="+r;return t.get(e).success(function(e){return e.result[r]}).error(function(e){return e})}}}]),angular.module("resources").factory("locusTag2Pub",["$http",function(t){return{getlocusTag2Pub:function(e){var r="https://www.ebi.ac.uk/europepmc/webservices/rest/search?query=chlamydia%20{locusTag}&format=json".replace("{locusTag}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("euroPubData",["$http",function(t){return{getEuroPubData:function(e){var r="https://www.ebi.ac.uk/europepmc/webservices/rest/search?query={pubmedID}&resulttype=core&format=json".replace("{pubmedID}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("pubLinks",["$http","$filter",function(t,e){return{getPubLinks:function(e){var r="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?dbfrom=gene&db=pubmed&id={entrez}&retmode=json&linkname=gene_pubmed_pmc_nucleotide".replace("{entrez}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("recentPubLinks",["$http",function(o){return{getRecentPubLinks:function(e,r,t){var n="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&term="+e+"&reldate="+r+"&datetype=edat&retmax="+t+"&usehistory=y&retmode=json";return o.get(n).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allGoTerms",["$http",function(n){return{getGoTermsAll:function(e,r){var t="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT DISTINCT ?goterm ?goID ?goterm_label WHERE { ?goterm wdt:P279* wd:"+r+"; rdfs:label ?goterm_label; wdt:P686 ?goID. FILTER(lang(?goterm_label) = 'en') FILTER(CONTAINS(LCASE(?goterm_label), '"+e.toLowerCase()+"' ))}");return n.get(t).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("developmentalForm",["$http",function(t){return{getDevelopmentalForms:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT (GROUP_CONCAT(?eb) AS ?eb) (GROUP_CONCAT(?rb) AS ?rb) ?pmid (GROUP_CONCAT(?increased) AS ?increased) WHERE {?protein wdt:P352 '"+e+"'.?protein p:P5572+ ?claim.?claim ps:P5572 ?form.?claim prov:wasDerivedFrom/pr:P248/wdt:P698 ?pmid.BIND(IF(?form = wd:Q51955212, '+', '') AS ?eb).BIND(IF(?form = wd:Q51955198, '+', '') AS ?rb).OPTIONAL {?protein wdt:P1911 ?form.BIND(IF(?form = wd:Q51955212, 'eb', 'rb') AS ?increased).}}GROUP BY ?pmid");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("allOrgGenes",["$http",function(t){return{getAllOrgGenes:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT REDUCED ?gene ?geneLabel ?entrez ?locusTag WHERE { ?taxon wdt:P685 '"+e+"'. ?gene wdt:P703 ?taxon;       wdt:P279|wdt:P31 wd:Q7187;       wdt:P2393 ?locusTag.OPTIONAL {?gene wdt:P351 ?entrez.} SERVICE wikibase:label {bd:serviceParam wikibase:language 'en' . }}ORDER BY ASC(?locusTag)");return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allSpeciesGenes",["$http",function(t){return{getAllSpeciesGenes:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT REDUCED ?taxid ?taxonLabel ?gene ?geneLabel ?geneAltLabel ?locusTag ?entrez ?uniprot ?refseq_prot ?pdb ?mfLabel ?bpLabel ?ccLabel ?host_proteinLabel WHERE {?taxon (wdt:P171*/wdt:P685) '"+parentTax+"';   wdt:P685 ?taxid.?gene wdt:P703 ?taxon;   (wdt:P279|wdt:P31) wd:Q7187;   wdt:P2393 ?locusTag.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}");return t.get(r).success(function(e){var r=e.results.bindings,a=/(\w{2,4})_?(RS)?\d+/;return angular.forEach(r,function(e){var r=e.geneLabel.value,t=r.match(a)[0];-1!=r.indexOf("_")&&(e.geneLabel.value+="/"+t.replace("_",""));var n=t.match(/(\w{2,4})_?(RS)?/)[0],o=parseInt(t.substring(n.length));e.geneLabel.value+="/"+n+o,-1!=n.indexOf("_")&&(e.geneLabel.value+="/"+n.replace("_","")+o)}),r}).error(function(e){return e})},getAllSpeciesGeneLabels:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT DISTINCT ?geneLabel ?locusTag ?taxid ?symbol WHERE { ?taxon wdt:P171+/wdt:P685 '"+e+"'.?gene wdt:P703 ?taxon;wdt:P279|wdt:P31 wd:Q7187;wdt:P2393 ?locusTag.?taxon wdt:P685 ?taxid. OPTIONAL {?gene wdt:P2561 ?symbol}SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}");return t.get(r).success(function(e){var r=e.results.bindings,u=/(\w{2,4})_?(RS)?\d+/;return angular.forEach(r,function(e){var r=e.geneLabel.value,t=r.match(u)[0];-1!=r.indexOf("_")&&(e.geneLabel.value+="/"+t.replace("_",""));var n=t.match(/(\w{2,4})_?(RS)?/)[0],o=parseInt(t.substring(n.length));if(e.geneLabel.value+="/"+n+o,-1!=n.indexOf("_")&&(e.geneLabel.value+="/"+n.replace("_","")+o),e.symbol){var a=e.symbol.value;-1==e.geneLabel.value.toLowerCase().indexOf(a.toLowerCase())&&(e.geneLabel.value+=" ("+a+")")}}),r}).error(function(e){return e})}}}]),angular.module("resources").factory("wdGetEntities",function(){return{wdGetEntities:function(e){return $.ajax({url:"https://www.wikidata.org/w/api.php",jsonp:"callback",dataType:"jsonp",data:{action:"wbgetentities",ids:e,format:"json"},xhrFields:{withCredentials:!0},success:function(e){return e},error:function(e){return e}})}}}),angular.module("resources").factory("entrez2QID",["$http","$filter",function(t,e){return{getEntrez2QID:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT distinct ?gene ?protein WHERE{?gene wdt:P351 '{entrez}'; wdt:P688 ?protein.}".replace("{entrez}",e));return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("locusTag2QID",["$http","$filter",function(o,e){return{getLocusTag2QID:function(e,r){var t="SELECT distinct ?gene ?protein WHERE{?strain wdt:P685 '{taxid}'. ?gene wdt:P2393 '{locusTag}'; wdt:P703 ?strain. OPTIONAL {?gene wdt:P688 ?protein.}}".replace("{taxid}",r).replace("{locusTag}",e),n="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(t);return o.get(n).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("abstractSPARQL",["$http",function(a){return{getAbstractSPARQL:function(e,r,t){var n="PREFIX wd: <https://www.wikidata.org/entity/> PREFIX prov: <https://www.w3.org/ns/prov#> PREFIX pr: <https://www.wikidata.org/prop/reference/> PREFIX p: <https://www.wikidata.org/prop/> PREFIX ps: <https://www.wikidata.org/prop/statement/> SELECT (wd:prot_qid as ?sub) ?obj ?objLabel ?objDescription ?obj_id ?stated_in ?stated_inLabel ?retrieved ?reference_url ?language ?languageLabel ?curator ?curatorLabel ?determination ?determinationLabel WHERE {  wd:prot_qid p:an_prop ?claim .  ?claim ps:an_prop ?obj.  ?obj wdt:id_prop ?obj_id.   optional {?claim prov:wasDerivedFrom/pr:P248 ?stated_in. }   optional {?claim prov:wasDerivedFrom/pr:P813 ?retrieved. }   optional {?claim prov:wasDerivedFrom/pr:P854 ?reference_url. }   optional {?claim prov:wasDerivedFrom/pr:P407 ?language. }   optional {?claim prov:wasDerivedFrom/pr:P1640 ?curator. }   optional {?claim pq:P459 ?determination. }   SERVICE wikibase:label {         bd:serviceParam wikibase:language 'en' .  } }".replace(/prot_qid/g,e).replace(/an_prop/g,r).replace(/id_prop/g,t),o="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(n);return console.log(n),a.get(o).success(function(e){return e}).error(function(e){return e})}}}]);angular.module("advancedKeywordForm",["resources"]);angular.module("advancedSearchFilter",["resources"]);angular.module("advSearchPage",["resources"]);angular.module("allgenesDownload",[]);angular.module("alignmentView",[]);angular.module("annotationsView",["resources","cellVisualizer","helpForm"]);angular.module("enzymeView",[]);angular.module("expressionView",[]);angular.module("geneOntology",[]);angular.module("hostPathogen",[]);angular.module("interPro",[]);angular.module("linkedPubs",[]);angular.module("localizationView",[]);angular.module("mutantsView",["resources"]);angular.module("operonAnnotations",[]);angular.module("orthologView",["resources"]);angular.module("oauthForm",["resources"]);angular.module("oauthView",["resources"]);angular.module("browserPage",["resources"]);angular.module("cellVisualizer",[]);angular.module("footer",[]);angular.module("functionalAnnotation",["resources"]);angular.module("geneForm",["resources"]);angular.module("geneNameForm",["resources"]);angular.module("geneOverview",["resources"]);angular.module("geneSymbolForm",[]);angular.module("goForm",["resources"]);angular.module("header",[]);angular.module("helpForm",["resources"]);angular.module("hostpathForm",["resources"]);angular.module("jbrowseView",["resources"]);angular.module("keywordForm",["resources"]);angular.module("landingPage",["resources"]);angular.module("localizationForm",[]);angular.module("mainPage",["resources"]);angular.module("mutantBatch",["resources"]);angular.module("mutantForm",["resources"]);angular.module("operonForm",["resources"]);angular.module("organismForm",["resources"]);angular.module("organismTree",["resources"]);angular.module("organismView",["resources"]);angular.module("pdbForm",["resources"]);angular.module("proteinView",[]);angular.module("advancedKeywordForm").component("advancedKeywordForm",{controller:["$cacheFactory","allGoTerms","$location","allSpeciesGenes","appData",function(e,t,o,a,n){var l=this;n.getAppData(function(e){a.getAllSpeciesGeneLabels(e.parent_taxid).then(function(e){l.genes=e.data.results.bindings}),l.locusTag=e.example_locus_tag}),l.submitKeyword=function(e){null==e?o.path("keyword/"):o.path("keyword/"+e)},l.onSelect=function(e){o.path("/organism/"+e.taxid.value+"/gene/"+e.locusTag.value)},l.scrolled=!1,l.keyPressed=function(e){l.keyword=l.keyword.replace("/"," "),13==e.keyCode?l.scrolled?l.onSelect(l.selected):l.geneList&&1==l.geneList.length?l.onSelect(l.geneList[0]):l.submitKeyword(l.keyword):37<=e.keyCode&&e.keyCode<=40&&(l.scrolled=!0)},l.select=function(e,t){l.selected=e,"click"==t.type&&l.onSelect(e)},l.advSearch=function(){l.storeCache(),l.keyword||(l.keyword=""),o.path("keyword/"+l.keyword)}}],templateUrl:"/static/build/js/angular_templates/advanced-keyword-form.min.html"});angular.module("advancedSearchFilter").component("advancedSearchFilter",{controller:["$cacheFactory","allGoTerms","allOrgs",function(e,r,t){var a=this,n=e.get("advSearch");n?(a.mf=n.get("mf")[0],a.mftext=n.get("mf")[1],a.bp=n.get("bp")[0],a.bptext=n.get("bp")[1],a.cc=n.get("cc")[0],a.cctext=n.get("cc")[1],a.hp=n.get("hp")[0],a.hptext=n.get("hp")[1],a.entrez=n.get("entrez")[0],a.entreztext=n.get("entrez")[1],a.uniprot=n.get("uniprot")[0],a.uniprottext=n.get("uniprot")[1],a.refseq=n.get("refseq")[0],a.refseqtext=n.get("refseq")[1],a.pdb=n.get("pdb")[0],a.pdbtext=n.get("pdb")[1],a.cm=n.get("cm"),a.tm=n.get("tm"),a.im=n.get("im"),a.rm=n.get("rm"),a.rb=n.get("rb"),a.eb=n.get("eb"),a.bacp=n.get("bacp")[0],a.bacptext=n.get("bacp")[1],a.orgData=n.get("orgs"),a.constitutive=n.get("constitutive"),a.early=n.get("early"),a.mid=n.get("mid"),a.midlate=n.get("midlate"),a.late=n.get("late"),a.verylate=n.get("verylate")):(a.orgData=[],t.getAllOrgs(function(t){angular.forEach(t,function(t){t.check=!0,a.orgData.push(t)})}));var c={name:"Molecular Function",QID:"Q14860489"},p={name:"Cellular Component",QID:"Q5058355"},u={name:"Biological Process",QID:"Q2996394"};a.mfTerms=function(t){return r.getGoTermsAll(t,c.QID).then(function(t){return t.data.results.bindings.map(function(t){return t})})},a.ccTerms=function(t){return r.getGoTermsAll(t,p.QID).then(function(t){return t.data.results.bindings.map(function(t){return t})})},a.bpTerms=function(t){return r.getGoTermsAll(t,u.QID).then(function(t){return t.data.results.bindings.map(function(t){return t})})},a.storeCache=function(){var t=e.get("advSearch");null==t&&(t=e("advSearch")),t.put("mf",[a.mf,a.mftext]),t.put("bp",[a.bp,a.bptext]),t.put("cc",[a.cc,a.cctext]),t.put("hp",[a.hp,a.hptext]),t.put("entrez",[a.entrez,a.entreztext]),t.put("uniprot",[a.uniprot,a.uniprottext]),t.put("refseq",[a.refseq,a.refseqtext]),t.put("pdb",[a.pdb,a.pdbtext]),t.put("cm",a.cm),t.put("tm",a.tm),t.put("im",a.im),t.put("rm",a.rm),t.put("rb",a.rb),t.put("eb",a.eb),t.put("bacp",[a.bacp,a.bacptext]),t.put("constitutive",a.constitutive),t.put("early",a.early),t.put("mid",a.mid),t.put("midlate",a.midlate),t.put("late",a.late),t.put("verylate",a.verylate),t.put("orgs",a.orgData)}}],templateUrl:"/static/build/js/angular_templates/advanced-search-filter.min.html",bindings:{mf:"=?",mftext:"=?",bp:"=?",bptext:"=?",cc:"=?",cctext:"=?",hp:"=?",hptext:"=?",entrez:"=?",entreztext:"=?",uniprot:"=?",uniprottext:"=?",refseq:"=?",refseqtext:"=?",pdb:"=?",pdbtext:"=?",bacp:"=?",bacptext:"=?",cm:"=?",tm:"=?",im:"=?",rm:"=?",rb:"=?",eb:"=?",constitutive:"=?",early:"=?",mid:"=?",midlate:"=?",late:"=?",verylate:"=?",orgData:"=?",storeCache:"=?"}});angular.module("advSearchPage").component("advSearchPage",{controller:["$location","$filter","allSpeciesGenes","queryBuilder","$http","allGoTerms","sendToView","$cacheFactory","appData","NgTableParams","expressionTimingData","concatenator","$timeout",function(t,l,e,n,a,i,r,o,s,u,c,p,d){"use strict";var b=this;b.$onInit=function(){b.speciesGenes={},b.tableParams=new u,b.onSelect=function(e){t.path("/organism/"+e.taxid.value+"/gene/"+e.locusTag.value)},b.longTitle=function(e){return 80<e.length?e:""},b.keyword=t.path().split("/")[2],b.keywordResult=b.keyword,b.adv_cache=o.get("advSearch"),s.getAppData(function(e){b.appData=e}),b.advSearch=function(){b.loading=!0,b.keywordResult=b.keyword;s.getAppData(function(e){var t="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(b.buildQuery(e.parent_taxid));a.get(t).then(function(e){b.speciesGenes.allGenes=p.concatenate(e.data.results.bindings),b.speciesGenes.keywordAll=l("keywordFilter")(b.speciesGenes.allGenes,b.keyword),b.currentOrgsList=[],angular.forEach(b.orgData,function(e){1==e.check&&b.currentOrgsList.push(e.taxid)}),b.speciesGenes.keywordAll=l("deleteJsonItemValuesList")("taxid",b.currentOrgsList,b.speciesGenes.keywordAll);var t="organism/1/gene/1/mg_mutant_view",n=0;if(b.cm&&n++,b.tm&&n++,b.im&&n++,b.rm&&n++,(b.constitutive||b.early||b.mid||b.midlate||b.late||b.verylate)&&n++,0==n)return b.tableParams.settings({dataset:b.speciesGenes.keywordAll}),void(b.loading=!1);(b.constitutive||b.early||b.mid||b.midlate||b.late||b.verylate)&&c.getExpression(function(e){var t=[],a=[];if(b.constitutive&&a.push("Constitutive"),b.early&&a.push("Early"),b.mid&&a.push("Mid"),b.midlate&&a.push("Mid_Late"),b.late&&a.push("Late"),b.verylate&&a.push("Very_Late"),angular.forEach(e,function(e){-1!=a.indexOf(e.RB_EXPRESSION_TIMING)&&t.push(e["Locus tag"])}),b.speciesGenes.keywordAll=l("locusTagFilter")(b.speciesGenes.keywordAll,t),0==--n)return b.tableParams.settings({dataset:b.speciesGenes.keywordAll}),void(b.loading=!1)}),b.cm&&r.sendToView(t,{action:"chemical"}).then(function(e){var t=e.data.mutants,a=[];if(angular.forEach(t,function(e){-1==a.indexOf(e.locusTag)&&a.push(e.locusTag)}),b.speciesGenes.keywordAll=l("locusTagFilter")(b.speciesGenes.keywordAll,a),0==--n)return b.tableParams.settings({dataset:b.speciesGenes.keywordAll}),void(b.loading=!1)}),b.tm&&r.sendToView(t,{action:"transposition"}).then(function(e){var t=e.data.mutants,a=[];if(angular.forEach(t,function(e){-1==a.indexOf(e.locusTag)&&a.push(e.locusTag)}),b.speciesGenes.keywordAll=l("locusTagFilter")(b.speciesGenes.keywordAll,a),0==--n)return b.tableParams.settings({dataset:b.speciesGenes.keywordAll}),void(b.loading=!1)}),b.rm&&r.sendToView(t,{action:"recombination"}).then(function(e){var t=e.data.mutants,a=[];if(angular.forEach(t,function(e){-1==a.indexOf(e.locusTag)&&a.push(e.locusTag)}),b.speciesGenes.keywordAll=l("locusTagFilter")(b.speciesGenes.keywordAll,a),0==--n)return b.tableParams.settings({dataset:b.speciesGenes.keywordAll}),void(b.loading=!1)}),b.im&&r.sendToView(t,{action:"insertion"}).then(function(e){var t=e.data.mutants,a=[];if(angular.forEach(t,function(e){-1==a.indexOf(e.locusTag)&&a.push(e.locusTag)}),b.speciesGenes.keywordAll=l("locusTagFilter")(b.speciesGenes.keywordAll,a),0==--n)return b.tableParams.settings({dataset:b.speciesGenes.keywordAll}),void(b.loading=!1)})},function(e){console.log("Error with query"),console.log(e),b.loading=!1})})},b.adv_cache&&d(b.advSearch,500)},b.startJS=function(){$(".collapse").collapse("show");var e=introJs().setOption("skipLabel","Exit");e.setOption("showStepNumbers","false"),e.hideHints(),e.start()},b.buildQuery=function(e){var t=n.beginning(e);b.entrez&&(b.entreztext?t+=n.equals("?gene","entrez",b.entreztext):t+=n.triple("?gene","entrez","?entrez"));var a="";return b.uniprot&&(b.uniprottext?a+=n.equals("?protein","uniprot",b.uniprottext):a+=n.triple("?protein","uniprot","?uniprot")),b.pdb&&(b.pdbtext?a+=n.equals("?protein","pdb",b.pdbtext.toUpperCase()):a+=n.triple("?protein","pdb","?pdb")),b.refseq&&(b.refseqtext?a+=n.equals("?protein","refseq",b.refseqtext):a+=n.triple("?protein","refseq","?refseq")),b.rb&&(a+=n.triple("?protein","db","wd:Q51955198")),b.eb&&(a+=n.triple("?protein","db","wd:Q51955212")),b.mf&&(a+=n.addLabel("?protein","mf","?mfLabel"),a+=n.filterEnglish("?mfLabel")),b.bp&&(a+=n.addLabel("?protein","bp","?bpLabel"),a+=n.filterEnglish("?bpLabel")),b.cc&&(a+=n.addLabel("?protein","cc","?ccLabel"),a+=n.filterEnglish("?ccLabel")),(b.hp||b.bacp)&&(a+=n.triple("?protein","hp","?host_protein")),b.hp&&b.bacp||(b.hp?a+=n.minus(n.triple("?host_protein","taxon","?taxon")):b.bacp&&(a+=n.triple("?host_protein","taxon","?taxon"))),(b.uniprot||b.refseq||b.mf||b.bp||b.cc||b.hp||b.bacp||b.pdb||b.eb||b.rb)&&(t+=n.triple("?gene","protein","?protein"),t+=a),b.mf&&b.mftext&&(t+=n.filter("?mfLabel",b.mftext)),b.cc&&b.cctext&&(t+=n.filter("?ccLabel",b.cctext)),b.bp&&b.bptext&&(t+=n.filter("?bpLabel",b.bptext)),b.hp&&b.hptext&&(t+=n.filter("?host_proteinLabel",b.hptext)),b.bacp&&b.bacptext&&(t+=n.filter("?host_proteinLabel",b.bacptext)),t+=n.ending(),console.log("QUERY:"),console.log(t),t}}],templateUrl:"/static/build/js/angular_templates/advanced-search-page.min.html"}).factory("queryBuilder",function(){var n={entrez:"wdt:P351",uniprot:"wdt:P352",refseq:"wdt:P637",mf:"wdt:P680",cc:"wdt:P681",bp:"wdt:P682",protein:"wdt:P688",hp:"wdt:P129",pdb:"wdt:P638",db:"wdt:P5572",taxon:"wdt:P703"};return{optional:function(e){return"OPTIONAL {\n"+e+"}\n"},filter:function(e,t){return"FILTER(CONTAINS(LCASE("+e+"), '"+t.toLowerCase()+"')).\n"},equals:function(e,t,a){return e+" "+n[t]+" '"+a+"'.\n"},filterEnglish:function(e){return"FILTER(LANG("+e+") = 'en').\n"},beginning:function(e){return"SELECT REDUCED ?taxid ?taxonLabel ?gene ?geneLabel ?geneAltLabel ?locusTag ?entrez ?uniprot ?refseq_prot ?pdb ?mfLabel ?bpLabel ?ccLabel ?host_proteinLabel WHERE {\n?taxon (wdt:P171*/wdt:P685) '"+e+"';\n   wdt:P685 ?taxid.\n?gene wdt:P703 ?taxon;\n   (wdt:P279|wdt:P31) wd:Q7187;\n   wdt:P2393 ?locusTag.\n"},ending:function(){return"SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}"},addLabel:function(e,t,a){return e+" "+n[t]+"/rdfs:label "+a+".\n"},triple:function(e,t,a){return e+" "+n[t]+" "+a+".\n"},union:function(e,t){return"{"+e+"} UNION {"+t+"}\n"},minus:function(e){return"MINUS {\n"+e+"}\n"}}}).factory("concatenator",function(){return{concatenate:function(e){var a={};angular.forEach(e,function(e){var t=e.locusTag.value;t in a?("mfLabel"in a[t]&&-1==a[t].mfLabel.value.indexOf(e.mfLabel.value)&&a[t].mfLabel.value.push(e.mfLabel.value),"bpLabel"in a[t]&&-1==a[t].bpLabel.value.indexOf(e.bpLabel.value)&&a[t].bpLabel.value.push(e.bpLabel.value),"ccLabel"in a[t]&&-1==a[t].ccLabel.value.indexOf(e.ccLabel.value)&&a[t].ccLabel.value.push(e.ccLabel.value),"host_proteinLabel"in a[t]&&-1==a[t].host_proteinLabel.value.indexOf(e.host_proteinLabel.value)&&a[t].host_proteinLabel.value.push(e.host_proteinLabel.value),"pdb"in a[t]&&-1==a[t].pdb.value.indexOf(e.pdb.value)&&a[t].pdb.value.push(e.pdb.value)):("mfLabel"in e&&(e.mfLabel.value=[e.mfLabel.value]),"bpLabel"in e&&(e.bpLabel.value=[e.bpLabel.value]),"ccLabel"in e&&(e.ccLabel.value=[e.ccLabel.value]),"host_proteinLabel"in e&&(e.host_proteinLabel.value=[e.host_proteinLabel.value]),"pdb"in e&&(e.pdb.value=[e.pdb.value]),a[t]=e)});var t=[];return angular.forEach(a,function(e){"mfLabel"in e&&(e.mfLabel.value=e.mfLabel.value.join(", ")),"bpLabel"in e&&(e.bpLabel.value=e.bpLabel.value.join(", ")),"ccLabel"in e&&(e.ccLabel.value=e.ccLabel.value.join(", ")),"host_proteinLabel"in e&&(e.host_proteinLabel.value=e.host_proteinLabel.value.join(", ")),"pdb"in e&&(e.pdb.value=e.pdb.value.join(", ")),t.push(e)}),t}}});angular.module("allgenesDownload").component("allgenesDownload",{template:'<a target="_blank" href="{{$ctrl.genesUrl()}}"><div class="btn btn-default">Download Genes</div></a>',bindings:{taxid:"<"},controller:function(){"use strict";var t=this;t.$onChanges=function(e){e.taxid&&(t.genesUrl=function(){return"https://query.wikidata.org/#SELECT ?refSeqChromosome ?gene ?genStart ?genEnd ?strand ?geneLabel ?entrez ?locusTag ?protein ?proteinLabel ?uniprot ?refseqProt WHERE{ ?taxon wdt:P685 '"+t.taxid+"'. ?gene wdt:P703 ?taxon; wdt:P279 wd:Q7187; wdt:P644 ?genStart; wdt:P645 ?genEnd; wdt:P2548 ?strand; wdt:P2393 ?locusTag; wdt:P351 ?entrez; wdt:P688 ?protein. ?protein wdt:P352 ?uniprot; wdt:P637 ?refseqProt.OPTIONAL{ ?gene p:P644 ?chr. ?chr pq:P2249 ?refSeqChromosome.} SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . } }"})}}});angular.module("alignmentView").controller("alignmentCtrl",["orthoData","geneSequenceData","alignOrthologData","proteinSequenceData","taxidFilter",function(e,o,l,i,n){"use strict";var s=this;n.map().then(function(e){s.tax2Name=e}),s.projection={},s.type="dna",s.alignMessage="Aligning Orthologs. Please be patient.",s.citation=!1,s.isRendered=!1,s.data={},e.getOrthologs(s.locusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var n=e.orthoTaxid.value,t=e.orthoLocusTag.value;s.hasOrthologs=!0,s.projection[n]=!0;var a=e.refseq?e.refseq.value:"";s.data[n]=[t,a]})}),s.select=function(e,n){s.projection[n]=e},s.alignData=function(){var t=[],a=0;angular.forEach(s.projection,function(e,n){e?("dna"==s.type?o.getSequence(s.data[n][0]):i.getSequence(s.data[n][1])).then(function(e){a++,t.push(e),a==Object.keys(s.projection).length&&(s.aligning=!0,l.align(t,s),s.citation=!0)},function(e){a++,s.aligning=!1}):a++})}}]).factory("alignOrthologData",["$http","$timeout","$sce",function(e,l,i){"use strict";var s=function(a,o){e.get("https://www.ebi.ac.uk/Tools/services/rest/muscle/status/"+a).then(function(e){if(console.log(e.data),"RUNNING"!=e.data)if("FINISHED"==e.data){o.aligning=!1;var n={el:document.getElementById("msaDiv"),vis:{conserv:!0,seqlogo:!1,labelId:!1},zoomer:{labelNameLength:110},colorscheme:{scheme:"clustal2"}},t=new msa.msa(n);t.u.file.importURL("https://www.ebi.ac.uk/Tools/services/rest/muscle/result/"+a+"/aln-fasta",function(){t.render()}),new msa.menu.defaultmenu({el:document.getElementById("menuDiv"),msa:t}).render(),o.isRendered=!0,o.alignmentURL=i.trustAsResourceUrl("https://www.ebi.ac.uk/Tools/services/rest/muscle/result/"+a+"/aln-fasta")}else console.log("ERROR: "+e.data),o.aligning=!1;else l(s(a,o),2e3)})};return{align:function(a,o){e.get("alignOrthologs?sequence="+encodeURIComponent(a.join("\n"))+"&length="+encodeURIComponent(a.length)).then(function(e){var n=e.data.id;console.log("Job ID:"+n),s(n,o)},function(e){o.aligning=!1,console.log("POST TO MUSCLE Error"+e.status),console.log(e);var n=msa.io.fasta.parse(a.join("\n")),t={el:document.getElementById("msaDiv"),seqs:n};new msa.msa(t).render(),o.isRendered=!0})}}}]).component("alignmentView",{controller:"alignmentCtrl",templateUrl:"/static/build/js/angular_templates/alignment-view.min.html",bindings:{locusTag:"<",taxId:"<"}});angular.module("annotationsView").component("annotationsView",{templateUrl:"/static/build/js/angular_templates/annotations-view.min.html",bindings:{data:"<",annotations:"<",org:"<",allorggenes:"<",hasprotein:"<"},controller:["annotationSettings",function(t){"use strict";var i=this;i.settings={product:!0,ortholog:!0,alignment:!0,expression:!0,go:!0,localizations:!0,operon:!0,interpro:!0,enzyme:!0,mutants:!0,hostpath:!0,pubs:!0},i.map={product:"Gene Product",ortholog:"Orthologs",alignment:"Alignments",expression:"Expression",go:"Functions",localizations:"Localizations",operon:"Operons",interpro:"Interpro",enzyme:"Enzyme",mutants:"Mutants",hostpath:"Protein Interactions",pubs:"Related Pubs"},t.getSettings().then(function(t){i.settings={product:i.settings.product&&t.data["protein-view"],ortholog:i.settings.ortholog&&t.data["ortholog-view"],alignment:i.settings.alignment&&t.data["alignment-view"],expression:i.settings.expression&&t.data["expression-view"],go:i.settings.go&&t.data["function-view"],localizations:i.settings.localizations&&t.data["localization-view"],operon:i.settings.operon&&t.data["operon-view"],interpro:i.settings.interpro&&t.data["interpro-view"],enzyme:i.settings.enzyme&&t.data["enzyme-view"],mutants:i.settings.mutants&&t.data["mutant-view"],hostpath:i.settings.hostpath&&t.data["protein-interaction-view"],pubs:i.settings.pubs&&t.data["related-publication-view"]},i.table=[];var o=0,e=0;angular.forEach(i.settings,function(t,n){t&&(0!=e&&e%6==0&&o++,i.table[o]?i.table[o].push(n):i.table[o]=[n],e++)})}),i.$onChanges=function(t){t.hasprotein&&0==t.hasprotein.currentValue&&(i.settings.product=!1,i.settings.go=!1,i.settings.localizations=!1,i.settings.interpro=!1,i.settings.enzyme=!1,i.settings.hostpath=!1)},i.$onInit=function(){i.expandAll=function(){i.toggleOpen(!0)},i.collapseAll=function(){i.toggleOpen(!1)},i.accordion={go:!0,operon:!0,interpro:!0,enzyme:!0,mutants:!0,pubs:!0,product:!0,ortholog:!0,alignment:!0,expression:!0,hostpath:!0,localizations:!0},i.toggleOpen=function(t){i.accordion.go=t,i.accordion.operon=t,i.accordion.interpro=t,i.accordion.enzyme=t,i.accordion.mutants=t,i.accordion.pubs=t,i.accordion.product=t,i.accordion.ortholog=t,i.accordion.alignment=t,i.accordion.hostpath=t,i.accordion.expression=t,i.accordion.localizations=t},i.status={isCustomHeaderOpen:!1,isFirstOpen:!0,isFirstDisabled:!1}}}]});angular.module("enzymeView").component("enzymeView",{templateUrl:"/static/build/js/angular_templates/enzyme-view.min.html",bindings:{reaction:"<",ecnumber:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("expressionView").component("expressionView",{templateUrl:"/static/build/js/angular_templates/expression-view.min.html",bindings:{data:"<",gene:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("geneOntology").component("geneOntology",{templateUrl:"/static/build/js/angular_templates/gene-ontology-view.min.html",bindings:{data:"<",goclass:"@",gene:"<"},controller:function(){"use strict";var e=this;e.$onChanges=function(){e.data&&angular.forEach(e.data,function(e){e.determinationLabel.values=e.determinationLabel.value.split(";")})},e.evidenceCodes={IEA:"Inferred From Electronic Annotation",EXP:"Inferred from Experiment",IDA:"Inferred from Direct Assay",IPI:"Inferred From Physical Interaction",IMP:"Inferred from Mutant Phenotype",IGI:"Inferred from Genetic Interaction",IEP:"Inferred from Expression Pattern",ISS:"Inferred From Sequence or structural Similarity",ISO:"Inferred from Sequence Orthology",ISA:"Inferred from Sequence Alignment",ISM:"Inferred From Sequence Model",IGC:"Inferred from Genomic Context",IBA:"Inferred from Biological aspect of Ancestor",IBD:"Inferred from Biological aspect of Descendant",IKR:"Inferred From Key Residues",IRD:"Inferred from Rapid Divergence",RCA:"Inferred from Reviewed Computational Analysis",TAS:"Traceable Author Statement",NAS:"Non traceable author statement",IC:"Inferred by Curator",ND:"No biological Data available"}}});angular.module("hostPathogen").component("hostPathogen",{templateUrl:"/static/build/js/angular_templates/host-pathogen.min.html",bindings:{data:"<"},controller:function(){"use strict"}});angular.module("interPro").component("interPro",{templateUrl:"/static/build/js/angular_templates/interpro-view.min.html",bindings:{data:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("linkedPubs").component("linkedPubs",{templateUrl:"/static/build/js/angular_templates/linked-pubs.min.html",bindings:{pubs:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("localizationView").component("localizationView",{templateUrl:"/static/build/js/angular_templates/localization-view.min.html",bindings:{components:"<",localizations:"<",gene:"<"},controller:function(){"use strict";var e=this;e.$onChanges=function(){e.components&&angular.forEach(e.components,function(e){e.determinationLabel.values=e.determinationLabel.value.split(";")})},e.evidenceCodes={IEA:"Inferred From Electronic Annotation",EXP:"Inferred from Experiment",IDA:"Inferred from Direct Assay",IPI:"Inferred From Physical Interaction",IMP:"Inferred from Mutant Phenotype",IGI:"Inferred from Genetic Interaction",IEP:"Inferred from Expression Pattern",ISS:"Inferred From Sequence or structural Similarity",ISO:"Inferred from Sequence Orthology",ISA:"Inferred from Sequence Alignment",ISM:"Inferred From Sequence Model",IGC:"Inferred from Genomic Context",IBA:"Inferred from Biological aspect of Ancestor",IBD:"Inferred from Biological aspect of Descendant",IKR:"Inferred From Key Residues",IRD:"Inferred from Rapid Divergence",RCA:"Inferred from Reviewed Computational Analysis",TAS:"Traceable Author Statement",NAS:"Non traceable author statement",IC:"Inferred by Curator",ND:"No biological Data available"}}});angular.module("mutantsView").component("mutantsView",{bindings:{data:"<"},controller:["$location","sendToView","NgTableParams","$filter",function(n,e,a,t){"use strict";var i=this;i.$onInit=function(){},i.authorized=n.path().includes("authorized"),i.deleteAnnotation=function(a){console.log(a),i.loading=!0,a.action="delete";var t=n.path()+"/wd_mutant_edit";e.sendToView(t,a).then(function(a){}).finally(function(){i.loading=!1})},i.chemParams=new a({},{}),i.transParams=new a({},{}),i.intronParams=new a({},{}),i.recombParams=new a({},{}),i.$onChanges=function(){if(i.data){var n=[];angular.forEach(i.data,function(a){var t=a;t.start=parseInt(a.coordinate.start),t.end=parseInt(a.coordinate.end),n.push(t)}),i.chemParams=new a({},{dataset:t("filter")(n,"EFO_0000370")}),i.transParams=new a({},{dataset:t("filter")(n,"EFO_0004021")}),i.intronParams=new a({},{dataset:t("filter")(n,"EFO_0004016")}),i.recombParams=new a({},{dataset:t("filter")(n,"EFO_0004293")})}}}],templateUrl:"/static/build/js/angular_templates/mutants-view.min.html"});angular.module("operonAnnotations").component("operonAnnotations",{templateUrl:"/static/build/js/angular_templates/operon-view.min.html",bindings:{operon:"<",allorggenes:"<",gene:"<"},controller:["NgTableParams",function(n){var e=this;e.$onChanges=function(){if(e.operon){var a=[];angular.forEach(e.operon,function(n){var e={};angular.forEach(n,function(n,a){n.value===parseInt(n.value)?e[a]=parseInt(n.value):e[a]=n.value}),a.push(e)}),e.tableParams=new n({page:1,count:10},{dataset:a})}}}]});angular.module("orthologView").component("orthologView",{bindings:{locusTag:"<"},controller:"orthologCtrl",templateUrl:"/static/build/js/angular_templates/ortholog-view.min.html"}).controller("orthologCtrl",["orthoData","InterPro","hostPathogen","GOTerms","OperonData","expressionTimingData","$filter","sendToView","$location","taxidFilter",function(t,e,a,o,n,i,u,l,h,r){"use strict";var s=this;r.map().then(function(t){s.tax2Name=t}),s.data={},s.reference="",t.getOrthologs(s.locusTag).then(function(t){angular.forEach(t.results.bindings,function(r){s.hasOrthologs=!0,s.data[r.orthoTaxid.value]={locusTag:r.orthoLocusTag.value,taxid:r.orthoTaxid.value},r.reference&&(s.reference=r.reference.value),r.uniprot?(e.getInterPro(r.uniprot.value).then(function(t){s.data[r.orthoTaxid.value].ip=0<t.length}),a.getHostPathogen(r.uniprot.value).then(function(t){s.data[r.orthoTaxid.value].hp=0<t.length}),o.getGoTerms(r.uniprot.value).then(function(t){var e=t.data.results.bindings;s.data[r.orthoTaxid.value].go=0<e.length;var a=[];angular.forEach(e,function(t,e){t.hasOwnProperty("ecnumber")&&-1==a.indexOf(t.ecnumber.value)&&a.push(t.ecnumber.value)});var o={locusTag:r.orthoLocusTag.value,taxid:r.orthoTaxid.value,ec_number:a},n=h.path()+"/mg_mutant_view";l.sendToView(n,o).then(function(t){s.data[r.orthoTaxid.value].mutant=0<t.data.mutants.length})})):(s.data[r.orthoTaxid.value].ip=!1,s.data[r.orthoTaxid.value].hp=!1,s.data[r.orthoTaxid.value].go=!1),r.entrez&&n.getOperonData(r.entrez.value).then(function(t){s.data[r.orthoTaxid.value].operon=0<t.data.results.bindings.length}),i.getExpression(function(t){var e=u("keywordFilter")(t,r.orthoLocusTag.value),a={};angular.forEach(e[0],function(t,e){"_id"!=e&&"$oid"!=e&&"timestamp"!=e&&(a[e]=t)}),s.data[r.orthoTaxid.value].expression=null!=a.RB_EXPRESSION_TIMING})})}),s.tSettings={strain:!0,tax:!0,cLocus:!0,dLocus:!1,identity:!1,length:!1,eval:!1,ref:!0,expression:!0,go:!0,operons:!0,mutants:!0,interpro:!0,hostPathogen:!0}}]);angular.module("oauthForm").component("oauthForm",{controller:["$window","$routeParams","$location","sendToView","appData",function(a,i,n,t,o){"use strict";var e=this;e.authorization=n.path().includes("authorized"),o.getAppData(function(t){e.appData=t}),e.oauthAuthorization=function(){t.sendToView("/wd_oauth",{authorization:"sending",current_path:n.path(),initiate:!0}).then(function(t){a.location.href=t.data.wikimediaURL})},e.revokeAuthorization=function(){t.sendToView("/wd_oauth",{deauthenticate:!0}).then(function(t){var a="/organism/{taxid}".replace("{taxid}",i.taxid),o="/gene/{locusTag}/".replace("{locusTag}",i.locusTag);n.url(a+o)})}}],templateUrl:"/static/build/js/angular_templates/oauth-form.min.html"});angular.module("oauthView").component("oauthView",{bindings:{},controller:["$window","$routeParams","$location","sendToView",function(t,o,i,e){"use strict";o.oauth_verifier&&(e.sendToView("/wd_oauth",{url:i.url()}).then(function(t){console.log(t)}),i.url(i.path())),this.authorization=i.path().includes("authorized")}],templateUrl:"/static/build/js/angular_templates/authorization-view.min.html"});angular.module("browserPage").component("browserPage",{controller:["$filter","$location","$routeParams","allOrgs","allOrgGenes","appData",function(n,e,t,a,r,l){"use strict";var i=this;i.$onInit=function(){i.loading=!0,i.currentTaxid=t.taxid,l.getAppData(function(t){i.appData=t}),a.getAllOrgs(function(t){i.orgList=t,i.currentOrg=n("getJsonItemOrg")("taxid",i.currentTaxid,i.orgList),null==i.currentOrg&&(alert("not a valid taxonomy id"),e.path("/"))}),r.getAllOrgGenes(i.currentTaxid).then(function(t){i.currentAllGenes=t.data.results.bindings,i.initialGene=i.currentAllGenes[0]}).finally(function(){i.loading=!1}),i.onSelect=function(t){e.path("/organism/"+i.currentTaxid+"/gene/"+t.locusTag.value)}}}],templateUrl:"/static/build/js/angular_templates/browser-page.min.html"});angular.module("cellVisualizer").controller("cellVisualizerCtrl",["geneOntologyService",function(o){"use strict";var t="#cc0000",i=this;function n(e){var n=[];if(n=o.isInclusion(e)?document.getElementsByClassName("inclusion"):document.getElementsByClassName(o.getClass(e)),i.pending--,o.isPlasmaMembrane(e))n[0].style.fill=t,document.getElementsByClassName("cytoplasm")[0].style.fill!=t&&(document.getElementsByClassName("cytoplasm")[0].style.fill="#FFFFFF");else if(o.isInclusion(e))o.isInclusionMembrane(e)?n[0].style.stroke=t:n[0].style.fill=t;else for(var l=0;l<n.length;l++)n[l].style.fill=t;0==i.pending&&(i.loading=!1)}i.status="Loading Component Viewer...",i.loading=!0,i.$onChanges=function(){i.cellComp?(i.pending=i.cellComp.length,angular.forEach(i.cellComp,function(e){var n=e.goID.value.replace(":","_");i.highlight(n)}),i.development&&("+"==i.development.eb.value&&i.highlight("BTO_0000377"),"+"==i.development.rb.value&&i.highlight("BTO_0001172")),0==i.pending&&(i.loading=!1,i.status="No Components to Show")):i.loading=!1},this.displayCell=!1,this.highlight=function(e){o.isValid(e)?(i.displayCell=!0,n(e)):o.getParent(e).then(function(e){i.displayCell=!0,n(e)},function(e){i.pending--,0==i.pending&&(i.loading=!1,i.status="No Components to Show")})}}]).service("geneOntologyService",["$http","$q",function(n,l){var o={GO_0044177:"golgi",GO_0044174:"endosome",GO_0120149:"peroxisome",GO_0042025:"nucleus",GO_0033650:"mitochondria",GO_0044165:"er",GO_0140221:"inclusion_membrane",GO_0140222:"inclusion_lumen",BTO_0001172:"rb",BTO_0000377:"eb",GO_0044187:"lysosome",GO_0044186:"ld",GO_0120148:"centrosome",GO_0044163:"cytoskeleton",GO_0020002:"plasma_membrane",GO_0030430:"cytoplasm",GO_0044164:"cytoplasm"},i=function(e){return!!o[e]};return{getParent:function(o){var t=l.defer(),e=encodeURIComponent(encodeURIComponent("https://purl.obolibrary.org/obo/"+o));return n.get("https://www.ebi.ac.uk/ols/api/ontologies/go/terms/"+e+"/hierarchicalAncestors").success(function(e){if(e._embedded)for(var n=0;n<e._embedded.terms.length;n++){var l=e._embedded.terms[n];if(i(l.short_form))return console.log("Go term "+o+" has parent "+l.label),void t.resolve(l.short_form)}t.reject(e)}).error(function(e){t.reject(e)}),t.promise},isValid:i,getClass:function(e){return o[e]},isPlasmaMembrane:function(e){return"plasma_membrane"==o[e]},isInclusion:function(e){return"inclusion_membrane"==o[e]||"inclusion_lumen"==o[e]},isInclusionMembrane:function(e){return"inclusion_membrane"==o[e]}}}]).component("cellVisualizer",{controller:"cellVisualizerCtrl",templateUrl:"/static/build/js/angular_templates/cell-visualizer-view.min.html",bindings:{cellComp:"<",development:"<"}});angular.module("footer").component("footer",{templateUrl:"/static/build/js/angular_templates/footer.min.html",controller:function(){}});angular.module("functionalAnnotation").component("functionalAnnotation",{templateUrl:"/static/build/js/angular_templates/functional-annotation.min.html",bindings:{data:"<",config:"<"},controller:function(){"use strict";var t=this;t.$onInit=function(){t.title=t.config.title+" ({title})".replace("{title}",t.data.length)}}});angular.module("geneForm").component("geneForm",{templateUrl:"/static/build/js/angular_templates/gene-form.min.html",bindings:{taxid:"<",genes:"<"},controller:["$location",function(n){"use strict";var t=this;t.onSelect=function(e){n.path("/organism/"+t.taxid+"/gene/"+e.locusTag.value)}}]});angular.module("geneNameForm").controller("geneNameCtrl",["$location","sendToView","orthoData","$routeParams","locusTag2QID","$filter","taxidFilter",function(e,l,a,t,s,u,n){"use strict";var g=this;g.locusTag=t.locusTag,n.map().then(function(e){g.tax2Name=e}),g.orthoData={},g.projection={},a.getOrthologs(g.locusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var a=e.orthoTaxid.value,t=e.orthoLocusTag.value;g.projection[a]=t==g.locusTag,g.orthoData[a]=t})}),g.pageCount=0,g.nextClick=function(){g.pageCount+=1},g.backClick=function(){g.pageCount-=1},g.geneNameData={geneQID:null,proteinQID:null,geneName:""},g.resetForm=function(){g.geneNameData.geneName="",g.pageCount=0},g.$onChanges=function(){g.geneNameData.geneQID=g.gene.geneQID,g.geneNameData.proteinQID=g.gene.proteinQID},g.sendData=function(){var o=0,r=!0,i=!1,a=!1;if(angular.forEach(g.projection,function(e){1==e&&(a=!0)}),!a)return alert("Please select at least one gene to annotate!"),void(g.loading=!1);e.path().includes("authorized")?angular.forEach(g.projection,function(e,n){e?s.getLocusTag2QID(g.orthoData[n],n).then(function(e){var a={geneQID:u("parseQID")(e.data.results.bindings[0].gene.value),proteinQID:null,geneName:g.geneNameData.geneName};e.data.results.bindings[0].protein&&(a.proteinQID=u("parseQID")(e.data.results.bindings[0].protein.value));var t="/organism/"+n+"/gene/"+g.orthoData[n]+"/wd_gene_name_edit";console.log(t),l.sendToView(t,a).then(function(e){!1===e.data.authentication?r=!(i=!0):e.data.write_success||(r=!1)}).finally(function(){++o==Object.keys(g.projection).length&&(r?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),g.resetForm()):i?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"))})}):++o==Object.keys(g.projection).length&&(r?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),g.resetForm()):i?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),g.resetForm())}):alert("Please authorize ChlamBase to edit Wikidata on your behalf!")}}]).component("geneNameForm",{bindings:{gene:"<"},templateUrl:"/static/build/js/angular_templates/gene-name-form.min.html",controller:"geneNameCtrl"});angular.module("geneOverview").component("geneOverview",{templateUrl:"/static/build/js/angular_templates/gene-overview.min.html",bindings:{data:"<",annotations:"<"},controller:["$routeParams","sendToView","$location","taxidFilter",function(i,n,a,e){"use strict";var o=this;o.$onInit=function(){o.taxid=i.taxid,o.locusTag=i.locusTag,o.cm=o.tm=o.rm=o.im=0,e.species(o.taxid).then(function(t){o.species=t}),e.strain(o.taxid).then(function(t){o.strain=t});var t=a.path()+"/mg_mutant_view";n.sendToView(t,{locusTag:o.locusTag,taxid:o.taxid}).then(function(t){angular.forEach(t.data.mutants,function(t){"EFO_0000370"==t.mutation_id?o.cm++:"EFO_0004021"==t.mutation_id?o.tm++:"EFO_0004016"==t.mutation_id?o.im++:"EFO_0004293"==t.mutation_id&&o.rm++})})}}]});angular.module("geneSymbolForm").controller("symbolFormCtrl",["$location","sendToView","orthoData","locusTag2QID","$filter","pubMedData","taxidFilter",function(e,r,t,n,u,o,a){"use strict";var s=this;a.map().then(function(e){s.tax2Name=e}),s.orthoData={},s.projection={},t.getOrthologs(s.gene.locusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var t=e.orthoTaxid.value,n=e.orthoLocusTag.value;s.projection[t]=n==s.gene.locusTag,s.orthoData[t]=n})}),s.pageCount=0,s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.geneSymbolData={geneQID:null,proteinQID:null,geneSymbol:"",pmid:null},s.resetForm=function(){s.geneSymbolData.geneSymbol="",s.geneSymbolData.pmid=null,s.pageCount=0},s.$onChanges=function(){s.geneSymbolData.geneQID=s.gene.geneQID,s.geneSymbolData.proteinQID=s.gene.proteinQID},s.getPMID=function(t){return o.getPMID(t).then(function(e){return[e.data.result[t]].map(function(e){return e})})},s.selectPub=function(e){s.geneSymbolData.pmid=e.uid},s.sendData=function(){var a=0,l=!0,i=!1,t=!1;if(angular.forEach(s.projection,function(e){1==e&&(t=!0)}),!t)return alert("Please select at least one gene to annotate!"),void(s.loading=!1);e.path().includes("authorized")?angular.forEach(s.projection,function(e,o){e?n.getLocusTag2QID(s.orthoData[o],o).then(function(e){var t={geneQID:u("parseQID")(e.data.results.bindings[0].gene.value),proteinQID:null,geneSymbol:s.geneSymbolData.geneSymbol,pmid:s.geneSymbolData.pmid};e.data.results.bindings[0].protein&&(t.proteinQID=u("parseQID")(e.data.results.bindings[0].protein.value));var n="/organism/"+o+"/gene/"+s.orthoData[o]+"/wd_gene_symbol_edit";console.log(n),r.sendToView(n,t).then(function(e){!1===e.data.authentication?l=!(i=!0):e.data.write_success||(l=!1)}).finally(function(){++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):i?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"))})}):++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):i?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.resetForm())}):alert("Please authorize ChlamBase to edit Wikidata on your behalf!")}}]).component("geneSymbolForm",{controller:"symbolFormCtrl",templateUrl:"/static/build/js/angular_templates/gene-symbol-form.min.html",bindings:{gene:"<"}});angular.module("goForm").component("goForm",{controller:["$routeParams","$filter","$location","evidenceCodes","sendToView","pubMedData","allGoTerms","locusTag2QID","orthoData","taxidFilter",function(e,i,n,o,u,t,a,g,l,r){var s=this;s.currentTaxid=e.taxid,s.currentLocusTag=e.locusTag,s.pageCount=0,r.map().then(function(e){s.tax2Name=e});var c={mf_button:{name:"Molecular Function",QID:"Q14860489"},cc_button:{name:"Cellular Component",QID:"Q5058355"},bp_button:{name:"Biological Process",QID:"Q2996394"}};s.goFormModel={evi:null,pub:null,go:null,proteinQID:null,goClass:c[s.goclass].QID},o.getevidenceCodes(function(e){s.evidence=e}),s.data={},s.projection={},l.getOrthologs(s.currentLocusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var o=e.orthoTaxid.value,n=e.orthoLocusTag.value;s.projection[o]=n==s.currentLocusTag,s.data[o]=n})}),s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.selectGoTerm=function(e,o,n){s.goFormModel.go=e,s.goValue=""},s.selectPub=function(e,o,n){s.goFormModel.pub=e,s.pubValue=""},s.getGoTermsAll=function(e){return s.goTermLoading=!0,a.getGoTermsAll(e,c[s.goclass].QID).then(function(e){return e.data.results.bindings.map(function(e){return e})}).finally(function(){s.goTermLoading=!1})},s.getPMID=function(o){return t.getPMID(o).then(function(e){return[e.data.result[o]].map(function(e){return e})})},s.resetForm=function(){s.pageCount=0,s.goFormModel.evi=null,s.goFormModel.pub=null,s.goFormModel.go=null},s.validateFields=function(){if(s.goFormModel.evi&&s.goFormModel.pub&&s.goFormModel.go)return!0},s.sendData=function(){s.loading=!0;var a=0,l=!0,r=!1,o=!1;return angular.forEach(s.projection,function(e){1==e&&(o=!0)}),o?n.path().includes("authorized")?void angular.forEach(s.projection,function(e,t){e?g.getLocusTag2QID(s.data[t],t).then(function(e){var o={evi:s.goFormModel.evi,pub:s.goFormModel.pub,go:s.goFormModel.go,proteinQID:null,goClass:s.goFormModel.goClass};e.data.results.bindings[0].protein&&(o.proteinQID=i("parseQID")(e.data.results.bindings[0].protein.value));var n="/organism/"+t+"/gene/"+s.data[t]+"/wd_go_edit";console.log(n),u.sendToView(n,o).then(function(e){!1===e.data.authentication?l=!(r=!0):e.data.write_success||(l=!1)}).finally(function(){++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)})}):++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(s.loading=!1)):(alert("Please select at least one gene to annotate!"),void(s.loading=!1))}}],templateUrl:"/static/build/js/angular_templates/guided-go-form.min.html",bindings:{goclass:"<",gene:"<"}});angular.module("header").component("header",{templateUrl:"/static/build/js/angular_templates/header.min.html",controller:["appData",function(a){var t=this;a.getAppData(function(a){t.appData=a})}],bindings:{oauth:"<"}});angular.module("helpForm").controller("helpFormCtrl",["$http",function(n){"use strict";this.name="",this.email="",this.description="",this.submit=function(){this.submitted=!0,null==this.subject&&(this.subject="Chlambase Help");var t="Name: "+this.name+"\nSender: "+this.email+"\nUrl: "+window.location.href+"\nDescription: "+this.description,e="email?subject="+encodeURIComponent(this.subject)+"&body="+encodeURIComponent(t);n.get(e).then(function(t){console.log("Submitted request!")},function(t){console.log("Error submitting request")})}}]).component("helpForm",{templateUrl:"/static/build/js/angular_templates/help-form.min.html",controller:"helpFormCtrl"});angular.module("hostpathForm").component("hostpathForm",{bindings:{data:"<"},controller:["$location","$routeParams","speciesGenes","pubMedData","sendToView","locusTag2QID","$filter","orthoData","taxidFilter",function(t,e,n,o,l,r,u,a,i){"use strict";var h=this;i.map().then(function(t){h.tax2Name=t}),h.currentTaxid=e.taxid,h.currentLocusTag=e.locusTag,h.pageCount=0,h.orthoData={},h.projection={},a.getOrthologs(h.currentLocusTag).then(function(t){angular.forEach(t.results.bindings,function(t){var e=t.orthoTaxid.value,n=t.orthoLocusTag.value;h.projection[e]=n==h.currentLocusTag,h.orthoData[e]=n})}),h.nextClick=function(){h.pageCount+=1},h.backClick=function(){h.pageCount-=1},h.hostpathAnnotation={proteinQID:null,host_species:null,pub:null,host_protein:null,determination:null},h.species=[{name:"Homo sapiens",qid:"Q15978631",taxid:"9606"},{name:"Mus musculus",qid:"Q83310",taxid:"10090"},{name:"Chlamydia trachomatis D/UW-3/CX",qid:"Q20800373",taxid:"272561"},{name:"Chlamydia trachomatis 434/BU",qid:"Q20800254",taxid:"471472"},{name:"Chlamydia muridarum Nigg",qid:"Q21398805",taxid:"243161"},{name:"Chlamydophila pneumoniae CWL029",qid:"Q21397863",taxid:"115713"}],h.isChlamydia=function(){return null!=h.hostpathAnnotation.host_species&&"Homo sapiens"!=h.hostpathAnnotation.host_species.name&&"Mus musculus"!=h.hostpathAnnotation.host_species.name},h.determination_methods=[{item:"https://www.wikidata.org/entity/Q32860428",itemLabel:"immunoprecipitation evidence",eco:"ECO:0000085"},{item:"https://www.wikidata.org/entity/Q32860432",itemLabel:"co-localization evidence",eco:"ECO:0001026"}],h.getSpeciesGenes=function(){h.proteinValue="",h.pubValue=null,h.hostpathAnnotation={proteinQID:null,host_species:h.hostpathAnnotation.host_species,pub:null,host_protein:null,determination:null};var t=h.hostpathAnnotation.host_species.taxid;n.getSpeciesGenes(t).then(function(t){h.speciesGenes=t.data.results.bindings})},h.selectProtein=function(t,e,n){h.hostpathAnnotation.host_protein=t},h.getPMID=function(e){return o.getPMID(e).then(function(t){return[t.data.result[e]].map(function(t){return t})})},h.selectPub=function(t,e,n){h.pubValue=t},h.sendData=function(){h.loading=!0;var a=0,i=!0,s=!1,e=!1;return angular.forEach(h.projection,function(t){1==t&&(e=!0)}),e?t.path().includes("authorized")?void angular.forEach(h.projection,function(t,o){t?r.getLocusTag2QID(h.orthoData[o],o).then(function(t){var e={proteinQID:null,host_species:h.hostpathAnnotation.host_species,pub:h.hostpathAnnotation.pub,host_protein:h.hostpathAnnotation.host_protein,determination:h.hostpathAnnotation.determination};if(t.data.results.bindings[0].protein&&(e.proteinQID=u("parseQID")(t.data.results.bindings[0].protein.value)),null!=e.proteinQID){var n="/organism/"+o+"/gene/"+h.orthoData[o]+"/wd_hostpath_edit";console.log(n),l.sendToView(n,e).then(function(t){!1===t.data.authentication?i=!(s=!0):t.data.write_success||(i=!1)}).finally(function(){++a==Object.keys(h.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),h.resetForm()):s?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),h.loading=!1)})}}):++a==Object.keys(h.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),h.resetForm()):s?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),h.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(h.loading=!1)):(alert("Please select at least one gene to annotate!"),void(h.loading=!1))},h.resetForm=function(){h.pageCount=0,h.proteinValue="",h.pubValue=null,h.hostpathAnnotation={proteinQID:null,host_species:null,pub:null,host_protein:null,determination:null}}}],templateUrl:"/static/build/js/angular_templates/hostpath-form.min.html"});angular.module("jbrowseView").component("jbrowseView",{template:'<iframe class="jbrowse" ng-src={{$ctrl.jbrowseURI()}}></iframe>',bindings:{taxid:"<",gene:"<"},controller:function(){var t=this;t.$onInit=function(){},t.$onChanges=function(){t.gene&&(t.jbrowseURI=function(){var e=Number(t.gene.genStart)-1e3,n=Number(t.gene.genEnd)+1e3,r="";return e&&n&&t.gene.refseqGenome&&(r="&loc="+t.gene.refseqGenome+":"+e+".."+n),"static/wiki/js/external_js/JBrowse-1.14.1/index.html?data="+t.taxid+"_data&tracks=DNA,genes,operons,mutants&menu=0"+r})}}});angular.module("keywordForm").component("keywordForm",{controller:["$filter","$location","allSpeciesGenes","appData",function(e,t,l,n){"use strict";var o=this;o.$onInit=function(){o.selected=null,n.getAppData(function(e){l.getAllSpeciesGeneLabels(e.parent_taxid).then(function(e){o.genes=e.data.results.bindings}),o.locusTag=e.example_locus_tag}),o.submitKeyword=function(e){null==e?t.path("keyword/"):t.path("keyword/"+e)},o.onSelect=function(e){t.path("/organism/"+e.taxid.value+"/gene/"+e.locusTag.value)}},o.scrolled=!1,o.keyPressed=function(e){o.keyword=o.keyword.replace("/"," "),13==e.keyCode?o.scrolled?o.onSelect(o.selected):o.geneList&&1==o.geneList.length?o.onSelect(o.geneList[0]):o.submitKeyword(o.keyword):37<=e.keyCode&&e.keyCode<=40&&(o.scrolled=!0)},o.select=function(e,t){o.selected=e,"click"==t.type&&o.onSelect(e)}}],templateUrl:"/static/build/js/angular_templates/keyword-form.min.html"});angular.module("landingPage").component("landingPage",{controller:["allOrgs","recentPubLinks","euroPubData","appData",function(t,e,a,n){"use strict";var o=this;n.getAppData(function(t){o.appData=t,e.getRecentPubLinks(t.newsfeed_search_term,t.newsfeed_recent_days,t.newsfeed_max_articles).then(function(t){var e=t.data.esearchresult.idlist;o.recentPubs=[],angular.forEach(e,function(t){a.getEuroPubData(t).then(function(t){t.data.resultList.result[0]&&o.recentPubs.push(t.data.resultList.result[0])})})})}),o.myInterval=5e3,o.noWrapSlides=!1,o.active=0,t.getAllOrgs(function(t){o.orgList=t}),document.getElementById("get-started").onclick=function(){var t=introJs().setOption("skipLabel","Skip Tutorial");t.setOption("showStepNumbers","false"),t.hideHints(),t.start()},window.addEventListener("load",function(){if("true"!=localStorage.getItem("tutorial")){var t=introJs().setOption("skipLabel","Skip Tutorial");t.setOption("showStepNumbers","false"),t.hideHints(),t.oncomplete(function(){console.log("COMPLETED"),localStorage.setItem("tutorial","true")}),t.onexit(function(){console.log("EXIT"),localStorage.setItem("tutorial","true")}),t.start()}else console.log("Tutorial already completed")})}],templateUrl:"/static/build/js/angular_templates/landing-page.min.html"});angular.module("localizationForm").component("localizationForm",{controller:["$location","$routeParams","pubMedData","sendToView","locusTag2QID","orthoData","$filter","taxidFilter",function(e,n,t,r,u,a,c,o){"use strict";var s=this;s.currentTaxid=n.taxid,s.currentLocusTag=n.locusTag,s.pageCount=0,o.map().then(function(e){s.tax2Name=e}),s.orthoData={},s.projection={},a.getOrthologs(s.currentLocusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var n=e.orthoTaxid.value,t=e.orthoLocusTag.value;s.projection[n]=t==s.currentLocusTag,s.orthoData[n]=t})}),s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.localizationAnnotation={proteinQID:null,pub:null,localizationQID:null,increased:null},s.selectForm=function(){"elementary body AND reticulate body"!=s.localizationAnnotation.localizationQID.name&&(s.localizationAnnotation.increased=null)},s.map=[{name:"elementary body",qid:["Q51955212"]},{name:"reticulate body",qid:["Q51955198"]},{name:"elementary body AND reticulate body",qid:["Q51955212","Q51955198"]}],s.increasedMap=[{name:"elementary body",qid:"Q51955212"},{name:"reticulate body",qid:"Q51955198"},{name:"neither",qid:null}],s.relativeTo={Q51955212:"Q51955198",Q51955198:"Q51955212"},s.getPMID=function(n){return t.getPMID(n).then(function(e){return[e.data.result[n]].map(function(e){return e})})},s.selectPub=function(e,n,t){s.pubValue=e},s.sendData=function(){s.loading=!0;var o=0,i=!0,l=!1,n=!1;return angular.forEach(s.projection,function(e){1==e&&(n=!0)}),n?e.path().includes("authorized")?void angular.forEach(s.projection,function(e,a){e?u.getLocusTag2QID(s.orthoData[a],a).then(function(e){var n={proteinQID:null,pub:s.pubValue.uid,localizationQID:s.localizationAnnotation.localizationQID.qid,increased:null,relativeTo:null};if(e.data.results.bindings[0].protein&&(n.proteinQID=c("parseQID")(e.data.results.bindings[0].protein.value)),null!=s.localizationAnnotation.increased&&(n.increased=s.localizationAnnotation.increased.qid,n.relativeTo=s.relativeTo[n.increased]),null!=n.proteinQID){var t="/organism/"+a+"/gene/"+s.orthoData[a]+"/wd_localization_edit";console.log(t),r.sendToView(t,n).then(function(e){!1===e.data.authentication?i=!(l=!0):e.data.write_success||(i=!1)}).finally(function(){++o==Object.keys(s.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):l?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)})}}):++o==Object.keys(s.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):l?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(s.loading=!1)):(alert("Please select at least one gene to annotate!"),void(s.loading=!1))},s.resetForm=function(){s.pageCount=0,s.pubValue=null,s.localizationAnnotation={proteinQID:null,pub:null,localizationQID:null,increased:null}}}],templateUrl:"/static/build/js/angular_templates/localization-form.min.html"});angular.module("mainPage").component("mainPage",{controller:["$filter","$routeParams","$location","allOrgs","wdGetEntities","entrez2QID","GOTerms","InterPro","OperonData","expasyData","mutantData","locusTag2Pub","locusTag2QID","sendToView","expressionTimingData","hostPathogen","RefSeqChrom","allOrgGenes","$http","ECNumbers","pdbData","proteinSequenceData","proteinMass","developmentalForm","appData",function(a,e,r,n,o,t,u,i,s,c,l,g,p,m,d,v,h,G,f,b,T,P,D,x,w){var I=this;r.path().includes("authorized")&&(console.log("Is authorized"),f.get("validateSession").then(function(e){if(console.log("Login: "+e.data.login),!e.data.login)return alert("Your session has expired!"),void r.path(r.path().replace("authorized/",""))})),w.getAppData(function(e){I.appData=e}),I.$onInit=function(){"use strict";I.currentTaxid=e.taxid,I.currentLocusTag=e.locusTag,I.currentGene={locusTag:I.currentLocusTag,taxid:I.currentTaxid},I.annotations={ecnumber:[]},G.getAllOrgGenes(I.currentTaxid).then(function(e){I.currentAllGenes=e.data.results.bindings}),n.getAllOrgs(function(e){I.orgList=e,I.currentOrg=a("getJsonItemOrg")("taxid",I.currentTaxid,I.orgList),null==I.currentOrg&&(alert("not a valid taxonomy id"),r.path("/"))}),I.hasprotein=!0,p.getLocusTag2QID(I.currentLocusTag,I.currentTaxid).then(function(e){var n=e.data.results.bindings;0<n.length?(I.currentGene.geneQID=a("parseQID")(n[0].gene.value),n[0].protein?I.currentGene.proteinQID=a("parseQID")(n[0].protein.value):(I.hasprotein=!1,I.currentGene.productType={id:"Q7187"})):(alert(I.currentLocusTag+" doesn't seem to be a gene in this genome."),r.path("/organism/"+I.currentTaxid))}).finally(function(){o.wdGetEntities(I.currentGene.geneQID).then(function(e){var n=e.entities[I.currentGene.geneQID];I.currentGene.geneLabel=n.labels.en.value,I.currentGene.locusTag=n.claims.P2393[0].mainsnak.datavalue.value,I.currentGene.geneDescription=n.descriptions.en.value,I.currentGene.genStart=n.claims.P644[0].mainsnak.datavalue.value,I.currentGene.genEnd=n.claims.P645[0].mainsnak.datavalue.value,I.currentGene.strand=n.claims.P2548[0].mainsnak.datavalue.value,n.claims.P279&&(I.currentGene.geneType=n.claims.P279[0].mainsnak.datavalue.value),I.currentGene.geneAliases=[],angular.forEach(n.aliases.en,function(e){e.value!=I.currentGene.locusTag&&I.currentGene.geneAliases.push(e.value)}),n.claims.P2561&&(I.currentGene.geneSymbol=n.claims.P2561[0].mainsnak.datavalue.value.text),n.claims.P351&&(I.currentGene.entrez=n.claims.P351[0].mainsnak.datavalue.value,s.getOperonData(I.currentGene.locusTag).then(function(e){var n=e.data.results.bindings;0<n.length?I.annotations.operon=n:I.annotations.operon=[]}))}),I.currentGene.proteinQID&&o.wdGetEntities(I.currentGene.proteinQID).then(function(e){var n=e.entities[I.currentGene.proteinQID];I.currentGene.proteinLabel=n.labels.en.value,I.currentGene.description=n.descriptions.en.value,I.currentGene.refseqProt=n.claims.P637[0].mainsnak.datavalue.value,n.claims.P279&&(I.currentGene.productType=n.claims.P279[0].mainsnak.datavalue.value),I.currentGene.proteinAliases=[],angular.forEach(n.aliases.en,function(e){I.currentGene.proteinAliases.push(e.value)}),P.getSequence(I.currentGene.refseqProt).then(function(e){I.currentGene.sequenceProt=encodeURIComponent(e)}),n.claims.P352&&(I.currentGene.uniprot=n.claims.P352[0].mainsnak.datavalue.value,x.getDevelopmentalForms(I.currentGene.uniprot).then(function(e){if(I.currentGene.developmentalForm=e.data.results.bindings[0],I.currentGene.developmentalForm){var n=-1!=I.currentGene.developmentalForm.eb.value.indexOf("+")?"+":"",t=-1!=I.currentGene.developmentalForm.rb.value.indexOf("+")?"+":"";I.currentGene.developmentalForm.eb.value=n,I.currentGene.developmentalForm.rb.value=t}}),D.getMass(I.currentGene.uniprot).then(function(e){I.currentGene.mass=e}),T.getPdbData(I.currentGene.uniprot).then(function(e){0<e.data.results.bindings.length&&(I.currentGene.pdbIds=e.data.results.bindings)}),i.getInterPro(I.currentGene.uniprot).then(function(e){I.ipData=e,I.annotations.interpro=e}),v.getHostPathogen(I.currentGene.uniprot).then(function(e){I.hostpathData=e,I.annotations.hostpath=e}),u.getGoTerms(I.currentGene.uniprot).then(function(e){I.annotations.go={cellcomp:[],bioproc:[],molfunc:[]},I.annotations.reaction={},I.mf="mf_button",I.bp="bp_button",I.cc="cc_button";var n=e.data.results.bindings;angular.forEach(n,function(e,n){"http://www.wikidata.org/entity/Q5058355"===e.goclass.value&&I.annotations.go.cellcomp.push(e),"http://www.wikidata.org/entity/Q14860489"===e.goclass.value&&I.annotations.go.molfunc.push(e),"http://www.wikidata.org/entity/Q2996394"===e.goclass.value&&I.annotations.go.bioproc.push(e)})}),b.getECNumbers(I.currentGene.uniprot).then(function(e){var n=e.data.results.bindings;angular.forEach(n,function(e){e.hasOwnProperty("ecnumber")&&-1==I.annotations.ecnumber.indexOf(e.ecnumber.value)&&-1==e.ecnumber.value.indexOf("-")&&I.annotations.ecnumber.push(e.ecnumber.value)})}).finally(function(){angular.forEach(I.annotations.ecnumber,function(e){c.getReactionData(e).then(function(e){console.log(e),I.annotations.reaction[e.ecnumber]=e.reaction})});var e={locusTag:I.currentGene.locusTag,taxid:I.currentGene.taxid,ec_number:I.annotations.ecnumber};t(e)}))}),h.getRefSeqChrom(I.currentLocusTag).then(function(e){e[0]&&(I.currentGene.refseqGenome=e[0].refSeqChromosome.value)}),d.getExpression(function(e){I.expression=e;var n=a("keywordFilter")(e,I.currentLocusTag);I.currentExpression={},angular.forEach(n[0],function(e,n){"_id"!=n&&"$oid"!=n&&"timestamp"!=n&&(I.currentExpression[n]=e)}),I.annotations.expression=I.currentExpression});var e=I.currentGene.locusTag.replace("_","");g.getlocusTag2Pub(e).then(function(e){I.annotations.pubList=e.data.resultList.result})});var t=function(e){var n=r.path()+"/mg_mutant_view";m.sendToView(n,e).then(function(e){I.annotations.mutants=e.data.mutants})}}}],templateUrl:"/static/build/js/angular_templates/main-page_new.min.html"});angular.module("mutantBatch").component("mutantBatch",{bindings:{data:"<"},controller:["$timeout","uploadFile","Upload",function(l,o,n){"use strict";var u=this;u.uploadFiles=function(a,t){u.f=a,u.errFile=t&&t[0],a&&(o.uploadFile("/wd_upload",a).then(function(t){console.log(t)}),a.upload=n.upload({url:"https://angular-file-upload-cors-srv.appspot.com/upload",data:{file:a}}),a.upload.then(function(t){l(function(){a.result=t.data})},function(t){0<t.status&&(u.errorMsg=t.status+": "+t.data)},function(t){a.progress=Math.min(100,parseInt(100*t.loaded/t.total))}))},u.metaModel={}}],templateUrl:"/static/build/js/angular_templates/mutant-batch.min.html"});angular.module("mutantForm").component("mutantForm",{bindings:{data:"<"},controller:["pubMedData","$filter","$location","$routeParams","locusTag2QID","wdGetEntities","sendToView","RefSeqChrom",function(n,a,o,t,e,i,u,m){var r=this;e.getLocusTag2QID(t.locusTag,t.taxid).then(function(n){var t=n.data.results.bindings;0<t.length&&(r.geneQID=a("parseQID")(t[0].gene.value))}).finally(function(){i.wdGetEntities(r.geneQID).then(function(n){var t=n.entities[r.geneQID];r.genStart=t.claims.P644[0].mainsnak.datavalue.value,r.genEnd=t.claims.P645[0].mainsnak.datavalue.value})}),m.getRefSeqChrom(t.locusTag).then(function(n){n[0]&&(r.chromosome=n[0].refSeqChromosome.value,r.mutantAnnotation&&(r.mutantAnnotation.chromosome=r.chromosome))}),r.seq_ontology_map={synonymous:"SO:0001815","non-synonymous":"SO:0001816",non_transcribed_region:"SO:0000183",silent_mutation:"SO:0001017",stop_gained:"SO:0001587"},r.seq_ontology_list=["synonymous","non-synonymous","non_transcribed_region","silent_mutation","stop_gained"],r.mutant_type_map={"chemically induced mutation":"EFO_0000370",transposition:"EFO_0004021",recombination:"EFO_0004293",insertion:"EFO_0004016"},r.mutant_type_list=["chemically induced mutation","transposition","recombination","insertion"],r.getPMID=function(t){return n.getPMID(t).then(function(n){return[n.data.result[t]].map(function(n){return n})})},r.selectPub=function(n,t,a){r.mutantAnnotation.pub=n.uid,r.pubtitle=n.title,r.pubauthor=n.authors[0].name,r.pubdate=n.pubdate},r.$onInit=function(){r.reftype="PMID",r.pubtitle="",r.pubauthor="",r.pubdate="",r.pageCount=0;var n=null;r.mutantAnnotation&&r.mutantAnnotation.name&&(n=r.mutantAnnotation.name),r.mutantAnnotation={taxid:t.taxid,locusTag:t.locusTag,coordinate:{},chromosome:r.chromosome,name:n}},r.resetForm=function(){r.mutantAnnotation.name=null,r.$onInit()},r.sendData=function(n){if(r.loading=!0,n.action="annotate",o.path().includes("authorized")){var t=o.path().replace("/authorized/","")+"/wd_mutant_edit";console.log(t),u.sendToView(t,n).then(function(n){!0===n.data.write_success?(console.log("SUCCESS"),console.log(n),alert("Successfully Annotated! Well Done! The annotation will appear here soon."),r.resetForm()):!1===n.data.authentication?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):(console.log("FAILURE: UNKNOWN"),console.log(n),alert("Something went wrong.  Give it another shot!"))}).finally(function(){r.loading=!1})}else alert("Please authorize ChlamBase to edit Wikidata on your behalf!")},r.nextClick=function(){r.pageCount+=1},r.backClick=function(){r.pageCount-=1},r.changeType=function(){var n=r.mutantAnnotation.mutation_name;r.$onInit(),r.mutantAnnotation.mutation_name=n,r.mutantAnnotation.mutation_id=r.mutant_type_map[n]},r.validatePosition=function(){return r.mutantAnnotation.coordinate.start>=r.genStart&&r.mutantAnnotation.coordinate.start<=r.genEnd},r.validateEndPosition=function(){return r.validatePosition()&&r.mutantAnnotation.coordinate.end>=r.mutantAnnotation.coordinate.start&&r.mutantAnnotation.coordinate.end<=r.genEnd},r.validateBase=function(){return r.mutantAnnotation.ref_base&&r.mutantAnnotation.variant_base&&r.mutantAnnotation.ref_base!=r.mutantAnnotation.variant_base},r.validateFields=function(){return!(!r.mutantAnnotation.name||!r.mutantAnnotation.mutation_name||"DOI"==r.reftype&&!r.mutantAnnotation.doi||"PMID"==r.reftype&&!r.mutantAnnotation.pub||!r.validatePosition())&&("chemically induced mutation"==r.mutantAnnotation.mutation_name?r.validateBase()&&r.mutantAnnotation.snv_name&&r.mutantAnnotation.aa_effect:"transposition"==r.mutantAnnotation.mutation_name||"insertion"==r.mutantAnnotation.mutation_name?r.mutantAnnotation.percent_gene_intact&&r.mutantAnnotation.insert_direction:r.validateEndPosition()&&r.mutantAnnotation.genes_inserted&&r.mutantAnnotation.insert_direction)}}],templateUrl:"/static/build/js/angular_templates/mutant-form.min.html"});angular.module("operonForm").component("operonForm",{controller:["$routeParams","$location","$filter","pubMedData","locusTag2QID","allOrgOperons","sendToView","tax2QID","taxidFilter",function(e,n,o,t,a,r,l,u,i){"use strict";var s=this;s.currentTaxid=e.taxid,s.currentLocusTag=e.locusTag,s.opFormModel={name:null,pub:[],genes:[],geneQID:s.gene.geneQID,taxid:s.currentTaxid,taxQID:null,strand:null},i.name(s.currentTaxid).then(function(e){s.opFormModel.taxLabel=e}),s.$onChanges=function(){s.strand&&(s.opFormModel.strand=s.strand)},s.$onInit=function(){s.alerts={success:!1,error:!1},u.getQID(s.currentTaxid).then(function(e){s.opFormModel.taxQID=o("parseQID")(e[0].taxon.value)}),s.pageCount=0,s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.getPMID=function(o){return t.getPMID(o).then(function(e){return[e.data.result[o]].map(function(e){return e})})},s.selectPub=function(e,o,n){s.opFormModel.pub.push(e),s.pubValue=""},s.removePub=function(e){console.log(e);var n,t,o,a;s.opFormModel.pub=(n="uid",t=e.uid,o=s.opFormModel.pub,a=[],angular.forEach(o,function(e,o){e[n]!=t&&a.push(e)}),a)},s.selectGene=function(e,o,n){s.opFormModel.genes.push({gene:e.gene.value,locusTag:e.locusTag.value}),s.geneValue=""},s.removeGene=function(e){var n,t,o,a;s.opFormModel.genes=(n="locusTag",t=e.locusTag,o=s.opFormModel.genes,a=[],angular.forEach(o,function(e,o){e[n]!=t&&a.push(e)}),a)},s.validateFields=function(){if(s.opFormModel.name&&s.opFormModel.pub&&0<s.opFormModel.genes.length)return!0},s.sendData=function(e){s.loading=!0;var o=n.path().replace("/authorized/","")+"/wd_operon_edit";if(!n.path().includes("authorized"))return alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(s.loading=!1);l.sendToView(o,e).then(function(e){!0===e.data.operonWrite_success?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):!1===e.data.authentication?(console.log("FAILURE: AUTHENTICATION"),console.log(e),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!")}).finally(function(){s.loading=!1})},s.resetForm=function(){s.pageCount=0,s.opFormModel.name=null,s.opFormModel.pub=null,s.opFormModel.genes=[],s.geneValue="",s.pubValue=""}}}],templateUrl:"/static/build/js/angular_templates/operon-form.min.html",bindings:{allorggenes:"<",gene:"<",strand:"<"}});angular.module("organismForm").component("organismForm",{controller:["$location",function(o){"use strict";this.onSelect=function(n){o.path("/organism/"+n.taxid)}}],templateUrl:"/static/build/js/angular_templates/organism-form.min.html",bindings:{orgs:"<"}});angular.module("organismTree").component("organismTree",{controller:["orgTree",function(a){"use strict";var e=this;e.$onInit=function(){google.charts.load("current",{packages:["orgchart"]}),google.charts.setOnLoadCallback(function(){e.data=new google.visualization.DataTable,e.data.addColumn("string","Name"),e.data.addColumn("string","Parent"),a.getOrgTree(function(a){var t;e.data.addRows(a.data),t=new google.visualization.OrgChart(document.getElementById("chart_div")),console.log(t),t.draw(e.data,{allowHtml:!0,size:"medium"})})})}}],templateUrl:"/static/build/js/angular_templates/organism-tree.min.html",bindings:{orgs:"<"}});angular.module("organismView").component("organismView",{templateUrl:"/static/build/js/angular_templates/organism-view.min.html",controller:["$routeParams","taxidFilter",function(t,a){"use strict";var e=this;e.currentTaxid=t.taxid,a.name(e.currentTaxid).then(function(t){e.name=t})}]});angular.module("pdbForm").component("pdbForm",{controller:["pubMedData","$location","orthoData","locusTag2QID","$filter","sendToView","taxidFilter",function(t,e,n,r,u,d,a){"use strict";var s=this;a.map().then(function(t){s.tax2Name=t}),s.$onInit=function(){s.pdbAnnotation={id:null,pub:null,qid:s.gene.proteinQID,image:null},s.pageCount=0,s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.orthoData={},s.projection={},n.getOrthologs(s.gene.locusTag).then(function(t){angular.forEach(t.results.bindings,function(t){var n=t.orthoTaxid.value,e=t.orthoLocusTag.value;s.projection[n]=e==s.gene.locusTag,s.orthoData[n]=e})}),s.getPMID=function(n){return t.getPMID(n).then(function(t){return[t.data.result[n]].map(function(t){return t})})},s.selectPub=function(t,n,e){s.pdbAnnotation.pub=t},s.validateId=function(){return s.pdbAnnotation.id&&4==s.pdbAnnotation.id.length&&1==s.pdbAnnotation.id.match(/[0-9][0-9A-Za-z]{3}/).length},s.sendData=function(){s.loading=!0;var o=0,i=!0,l=!1,n=!1;return angular.forEach(s.projection,function(t){1==t&&(n=!0)}),n?e.path().includes("authorized")?void angular.forEach(s.projection,function(t,a){t?r.getLocusTag2QID(s.orthoData[a],a).then(function(t){var n={id:s.pdbAnnotation.id.toUpperCase(),pub:s.pdbAnnotation.pub.uid,qid:null,image:{front:"https://www.ebi.ac.uk/pdbe/static/entry/{}_deposited_chain_front_image-800x800.png".replace("{}",s.pdbAnnotation.id),side:"https://www.ebi.ac.uk/pdbe/static/entry/{}_deposited_chain_side_image-800x800.png".replace("{}",s.pdbAnnotation.id),top:"https://www.ebi.ac.uk/pdbe/static/entry/{}_deposited_chain_top_image-800x800.png".replace("{}",s.pdbAnnotation.id)}};if(t.data.results.bindings[0].protein&&(n.qid=u("parseQID")(t.data.results.bindings[0].protein.value)),null!=n.qid){var e="/organism/"+a+"/gene/"+s.orthoData[a]+"/wd_pdb_edit";console.log(e),d.sendToView(e,n).then(function(t){!1===t.data.authentication?i=!(l=!0):t.data.write_success||(i=!1)}).finally(function(){++o==Object.keys(s.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):l?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)})}}):++o==Object.keys(s.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):l?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(s.loading=!1)):(alert("Please select at least one gene to annotate!"),void(s.loading=!1))},s.resetForm=function(){s.pageCount=0,s.pdbAnnotation.id=null,s.pubValue="",s.pdbAnnotation.pub=null,s.image=null}}}],templateUrl:"/static/build/js/angular_templates/pdb-form.min.html",bindings:{gene:"<"}});angular.module("proteinView").component("proteinView",{templateUrl:"/static/build/js/angular_templates/protein-view.min.html",controller:function(){"use strict"},bindings:{protein:"<"}});