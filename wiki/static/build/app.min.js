angular.module("cmod",["ui.bootstrap","ngResource","ngRoute","ngTable","ngFileUpload","ngCookies","filters","browserPage","mainPage","geneForm","organismForm","resources","proteinView","organismView","jbrowseView","annotationsView","landingPage","geneOntology","interPro","operonAnnotations","goForm","operonForm","geneOverview","enzymeView","mutantsView","allgenesDownload","angularUtils.directives.dirPagination","oauthView","genesKeyword","keywordForm","keywordPaginated","organismTree","linkedPubs","orthologView","mutantForm","functionalAnnotation","expressionView","hostPathogen","hostpathForm","alignmentView","geneNameForm","oauthForm","advancedKeywordForm","localizationView","localizationForm","footer","pdbForm"]);angular.module("cmod").config(["$locationProvider","$routeProvider","$httpProvider","$interpolateProvider","$compileProvider",function(e,t,o,n,a){"use strict";e.html5Mode({enabled:!0}),a.aHrefSanitizationWhitelist(/^\s*(|blob|):/),a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension):/),t.when("/",{template:"<landing-page></landing-page>"}).when("/organism/:taxid/",{template:"<browser-page></browser-page>"}).when("/keyword/:keyword",{template:"<genes-keyword></genes-keyword>"}).when("/keyword/",{template:"<genes-keyword></genes-keyword>"}).when("/organism/:taxid/gene/:locusTag",{template:"<main-page></main-page>"}).when("/organism/:taxid/gene/:locusTag/authorized/",{template:"<main-page></main-page>"}).otherwise({template:"<not-found></not-found>"}),n.startSymbol("{$"),n.endSymbol("$}"),o.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded"}]).run(["$http","$cookies",function(e,t){e.defaults.headers.post["X-CSRFToken"]=t.get("csrftoken")}]);angular.module("filters",[]);angular.module("filters").filter("parseQID",function(){return function(r){return r?r.split("/").slice(-1)[0]:"None"}}),angular.module("filters").filter("taxid2Name",function(){var n={471472:"Chlamydia trachomatis 434/BU",272561:"Chlamydia trachomatis D/UW-3/CX",243161:"Chlamydia muridarum Str. Nigg",115713:"Chlamydia pneumoniae CWL209"};return function(r){return r?n[r]:"None"}}),angular.module("filters").filter("taxid2Species",function(){var n={471472:"Chlamydia trachomatis",272561:"Chlamydia trachomatis",243161:"Chlamydia muridarum",115713:"Chlamydia pneumoniae"};return function(r){return r?n[r]:"None"}}),angular.module("filters").filter("taxid2Strain",function(){var n={471472:"434/BU",272561:"D/UW-3/CX",243161:"Str. Nigg",115713:"CWL209"};return function(r){return r?n[r]:"None"}}),angular.module("filters").filter("interactions2bacteria",function(){return function(r){var t=[];return angular.forEach(r,function(r){var n=r.hostLabel.value;"Homo sapiens"!=n&&"Mus musculus"!=n&&t.push(r)}),t}}),angular.module("filters").filter("interactions2host",function(){return function(r){var t=[];return angular.forEach(r,function(r){var n=r.hostLabel.value;"Homo sapiens"!=n&&"Mus musculus"!=n||t.push(r)}),t}}),angular.module("filters").filter("replaceColon",function(){return function(r){return r.split(":").join("_")}}),angular.module("filters").filter("replaceColon",function(){return function(r){return r.split(":").join("_")}}),angular.module("filters").filter("replaceperiod",function(){return function(r){return r.split(".").join("_")}}),angular.module("filters").filter("convertStrand",function(){return function(r){return r?"Q22809711"===r?"reverse":"forward":"None"}}),angular.module("filters").filter("strandNum",function(){return function(r){return r?"Q22809711"===r?"2":"1":"None"}}),angular.module("filters").filter("uniqueGoTerms",function(){return function(r){var t=[];return angular.forEach(r,function(n){angular.forEach(t,function(r){n!=r&&t.push(r)})}),t}}),angular.module("filters").filter("goClass",function(){var n={mf_button:"Molecular Function",cc_button:"Cellular Component",bp_button:"Biological Process"};return function(r){return n[r]}}),angular.module("filters").filter("startFrom",function(){return function(r,n){return n=+n,r.slice(n)}}),angular.module("filters").filter("list2CSV",function(){return function(r){return r?r.join(", "):"None"}}),angular.module("filters").filter("getJsonItem",function(){return function(t,u,r){var e;return angular.forEach(r,function(r,n){if(r[t].value!=u)return"none";e=r}),e}}),angular.module("filters").filter("getJsonItemNoWD",function(){return function(t,u,r){var e=[];return angular.forEach(r,function(r,n){if(r[t]!=u)return"none";e.push(r)}),e}}),angular.module("filters").filter("deleteJsonItem",function(){return function(t,u,r){var e=[];return angular.forEach(r,function(r,n){r[t].value!=u||e.push(r)}),e}}),angular.module("filters").filter("deleteJsonItemValuesList",function(){return function(u,r,n){var e=[];return angular.forEach(r,function(t){angular.forEach(n,function(r,n){r[u].value==t&&e.push(r)})}),e}}),angular.module("filters").filter("getJsonItemOrg",function(){return function(t,u,r){var e;return angular.forEach(r,function(r,n){if(r[t]!=u)return"none";e=r}),e}}),angular.module("filters").filter("orderObjectBy",function(){return function(r,t){if(!angular.isObject(r))return r;var n=[];for(var u in r)n.push(r[u]);return n.sort(function(r,n){return(r=parseInt(r[t].value))-(n=parseInt(n[t].value))}),n}}),angular.module("filters").filter("keywordFilter",["$filter",function(u){return function(n,r){var t=r.split(" ");return angular.forEach(t,function(r){r&&(n=u("filter")(n,r))}),n}}]),angular.module("filters").filter("locusTagFilter",["$filter",function(r){return function(r,n){var t=[];return angular.forEach(r,function(r){-1!=n.indexOf(r.locusTag.value)&&t.push(r)}),t}}]),angular.module("filters").filter("cut",function(){return function(r,n,t,u){if(!r)return"";if(!(t=parseInt(t,10)))return r;if(r.length<=t)return r;if(r=r.substr(0,t),n){var e=r.lastIndexOf(" ");-1!=e&&("."!=r.charAt(e-1)&&","!=r.charAt(e-1)||(e-=1),r=r.substr(0,e))}return r+(u||" â€¦")}}),angular.module("filters").filter("typeFilter",function(){var n={Q7187:"gene",Q20747295:"protein-coding-gene",Q8054:"protein"};return function(r){return n[r]}});angular.module("resources",[]);angular.module("resources").factory("allOrgs",["$resource",function(e){return e("/static/wiki/json/orgsList.json",{},{getAllOrgs:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("allChlamOrgs",["$resource",function(e){return e("/static/wiki/json/chlamsOrgList.json",{},{getAllOrgs:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("evidenceCodes",["$resource",function(e){return e("/static/wiki/json/evidence_codes.json",{},{getevidenceCodes:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("mutantData",["$resource",function(e){return e("/static/wiki/json/kokes.json",{},{getKokesMutants:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("expressionTimingData",["$resource",function(e){return e("/static/wiki/json/expression_timing.json",{},{getExpression:{method:"GET",params:{},isArray:!0,cache:!0}})}]),angular.module("resources").factory("pdbData",["$http",function(t){return{getPdbData:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?pdbId ?image WHERE {?protein wdt:P352 '"+e+"'.?protein wdt:P638 ?pdbId.OPTIONAL {?protein wdt:P18 ?image}}");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("orthoData",["$http","$q",function(n,o){return{getOrthologs:function(e){var r=o.defer(),t="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?orthoLocusTag ?orthoTaxid ?entrez ?uniprot ?refseq ?reference WHERE {{?gene wdt:P2393 '"+e+"'.?gene p:P684 ?statement.?statement ps:P684 ?ortholog.?ortholog wdt:P2393 ?orthoLocusTag.?ortholog wdt:P703 ?orthoTaxon.?orthoTaxon wdt:P685 ?orthoTaxid.?ortholog wdt:P351 ?entrez.?statement prov:wasDerivedFrom/pr:P248 ?reference.OPTIONAL {?ortholog wdt:P688 ?protein.?protein wdt:P352 ?uniprot.?protein wdt:P637 ?refseq.}}UNION{?gene wdt:P2393 '"+e+"'.?gene wdt:P2393 ?orthoLocusTag.?gene wdt:P703 ?orthoTaxon.?orthoTaxon wdt:P685 ?orthoTaxid.?gene wdt:P351 ?entrez.OPTIONAL {?gene wdt:P688 ?protein.?protein wdt:P352 ?uniprot.?protein wdt:P637 ?refseq.}}}");return n.get(t).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}}}]),angular.module("resources").factory("sendToView",["$http",function(n){return{sendToView:function(e,r){var t=e;return n.post(t,r).success(function(e){return e}).error(function(e,r){return r})}}}]),angular.module("resources").factory("uploadFile",["$http",function(n){return{uploadFile:function(e,r){var t=e;return n.post(t,r).success(function(e){return e}).error(function(e,r){return r})}}}]),angular.module("resources").factory("currentOrgFetch",["$http",function(r){return{getCurrentOrg:function(t){var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?taxid ?taxon ?taxonLabel WHERE{ ?taxon wdt:P685 '"+t+"'. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . } }");return r.get(e).then(function(e){var r=e.data.results.bindings;return{taxid:t,taxon:r[0].taxon.value,taxonLabel:r[0].taxonLabel.value}})}}}]),angular.module("resources").factory("speciesGenes",["$http",function(t){return{getSpeciesGenes:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?protein ?proteinLabel ?uniprot WHERE{ ?taxon wdt:P685 '"+e+'\'. ?protein wdt:P352 ?uniprot;wdt:P703 ?taxon;rdfs:label ?proteinLabel.FILTER (lang(?proteinLabel) = "en") }');return console.log(r),t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allOrgGenes",["$http",function(t){return{getAllOrgGenes:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?gene ?geneLabel ?proteinLabel ?protein ?entrez ?refseqProt ?locusTag ?uniprot ?chromosome ?chromosomeLabel ?refSeqChromosome ?refSeqChromosomeLabel ?genStart ?genEnd ?strand (group_concat(?aliases;separator=', ') as ?alias) WHERE{ ?taxon wdt:P685 '"+e+"'. ?gene wdt:P703 ?taxon; wdt:P279 wd:Q7187; wdt:P2393 ?locusTag; wdt:P351 ?entrez; wdt:P644 ?genStart; wdt:P645 ?genEnd; wdt:P2548 ?strand; skos:altLabel ?aliases. OPTIONAL {?gene wdt:P688 ?protein; wdt:P352 ?uniprot; wdt:P637 ?refseqProt. }?gene p:P644 ?chr. ?chr pq:P1057 ?chromosome. ?chromosome wdt:P2249 ?refSeqChromosome.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' .}} GROUP BY ?gene ?geneLabel ?protein ?proteinLabel ?entrez ?refseqProt ?locusTag ?uniprot ?chromosome ?chromosomeLabel ?genStart ?genEnd ?strand ?refSeqChromosome ?refSeqChromosomeLabel ");return console.log("Loading all organism genes"),t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allOrgOperons",["$http",function(t){return{getAllOrgOperons:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?operon ?operonLabel WHERE{ ?taxon wdt:P685 '"+e+"'. ?operon wdt:P703 ?taxon; wdt:P279 wd:Q139677. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' .}} ");return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("proteinMass",["$http","$q",function(n,o){return{getMass:function(e){var r="https://www.uniprot.org/uniprot/{}.xml".replace("{}",e),t=o.defer();return n.get(r).success(function(e){return t.resolve(e.match(/mass="\d+"/)[0].match(/\d+/)[0])}).error(function(e){return t.reject(e)}),t.promise}}}]),angular.module("resources").factory("GOTerms",["$http",function(t){return{getGoTerms:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?gotermValueLabel ?goID ?gotermValue ?goclass ?reference_retrievedLabel (GROUP_CONCAT(DISTINCT ?reference_stated_label; SEPARATOR = '; ') AS ?reference_stated_label) (GROUP_CONCAT(DISTINCT ?determination; SEPARATOR = ';') AS ?determinationLabel) WHERE {?protein wdt:P352 '"+e+"'.?protein (p:P680|p:P681|p:P682)+ ?goterm.?goterm pq:P459/rdfs:label ?determination. FILTER(LANG(?determination) = 'en').OPTIONAL { ?goterm (prov:wasDerivedFrom/pr:P248)/rdfs:label ?reference_stated_label. FILTER(LANG(?reference_stated_label) = 'en').}OPTIONAL { ?goterm (prov:wasDerivedFrom/pr:P813) ?reference_retrieved. }?goterm (ps:P680|ps:P681|ps:P682)+ ?gotermValue.?gotermValue wdt:P31 ?goclass.?gotermValue wdt:P686 ?goID.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}GROUP BY ?gotermValueLabel ?goID ?gotermValue ?goclass ?determinationLabel ?reference_retrievedLabel");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("ECNumbers",["$http",function(t){return{getECNumbers:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?ecnumber WHERE {?protein wdt:P352 '"+e+"'.?protein (wdt:P680|wdt:P681|wdt:P682)+ ?gotermValue.?gotermValue wdt:P591 ?ecnumber.}");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("InterPro",["$http",function(t){return{getInterPro:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT distinct ?protein ?interPro_item ?interPro_label ?ipID ?reference_stated_inLabel ?refURL WHERE {?proteinLabel wdt:P352'"+e+'\';p:P527 ?interPro.?interPro ps:P527 ?interPro_item.?interPro prov:wasDerivedFrom/pr:P248 ?reference_stated_in ;prov:wasDerivedFrom/pr:P854 ?refURL .?interPro_item wdt:P2926 ?ipID;rdfs:label ?interPro_label. SERVICE wikibase:label { bd:serviceParam wikibase:language "en" .}filter (lang(?interPro_label) = "en") .}');return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("RefSeqChrom",["$http",function(t){return{getRefSeqChrom:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?refSeqChromosome WHERE{ \n  ?gene wdt:P2393 '"+e+"';        p:P644 ?chr.\n  ?chr pq:P1057 ?chromosome. \n  ?chromosome wdt:P2249 ?refSeqChromosome.\n  SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' .}\n} \n");return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("hostPathogen",["$http",function(t){return{getHostPathogen:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT DISTINCT ?hostGeneLabel ?hostProteinLabel ?hostLabel ?reference_stated_inLabel ?determinationLabel ?pmid WHERE {?protein wdt:P352 '"+e+"'.?protein p:P129 ?hpClaim.?hpClaim (prov:wasDerivedFrom/pr:P248) ?reference_stated_in.?hpClaim pq:P459 ?determination.?reference_stated_in wdt:P698 ?pmid.?hpClaim ps:P129 ?hostProtein.?hostProtein wdt:P703 ?host.?hostProtein wdt:P702 ?hostGene.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}");return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("tax2QID",["$http",function(t){return{getQID:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?taxon WHERE {?taxon wdt:P685 '"+e+"'.}");return t.get(r).then(function(e){return e.data.results.bindings})}}}]),angular.module("resources").factory("annotationSettings",["$http",function(e){return{getSettings:function(){return e.get("/static/wiki/json/module_settings.json").then(function(e){return e})}}}]),angular.module("resources").factory("OperonData",["$http",function(t){return{getOperonData:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?operonItemLabel ?op_genesLabel ?locusTag ?entrez ?genStart ?genEnd ?strandLabel ?reference_stated_inLabel ?reference_pmid WHERE {?gene wdt:P351 '"+e+"'.?gene p:P361 ?operon.?operon ps:P361 ?operonItem.?operonItem wdt:P31 wd:Q139677.?operonItem wdt:P527 ?op_genes.?op_genes wdt:P2393 ?locusTag.?op_genes wdt:P351 ?entrez.?op_genes wdt:P644 ?genStart.?op_genes wdt:P645 ?genEnd.?op_genes wdt:P2548 ?strand.?operon (prov:wasDerivedFrom/pr:P248) ?reference_stated_in.?reference_stated_in wdt:P698 ?reference_pmid.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}");return t.get(r).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("geneSequenceData",["$http","$q",function(c,e){"use strict";return{getSequence:function(i){var u=e.defer();return c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=gene&term="+i).success(function(e){var s=e;if(s.includes("<Id>")){var r=s.substring(s.indexOf("<Id>")+4,s.indexOf("</Id>"));c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=gene&id="+r).success(function(e){s=e;var r=parseInt(s.substring(s.indexOf("<ChrStart>")+10,s.indexOf("</ChrStart>")))+1,t=parseInt(s.substring(s.indexOf("<ChrStop>")+9,s.indexOf("</ChrStop>")))+1,n=s.substring(s.indexOf("<ChrAccVer>")+11,s.indexOf("</ChrAccVer>")),o=1;if(t<r){o=2;var a=r;r=t,t=a}c.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=nuccore&id="+n+"&seq_start="+r+"&seq_stop="+t+"&strand="+o+"&rettype=fasta").success(function(e){var r=">"+i+"\n",t=e.substring(e.indexOf("\n")+1,e.length).replace(/\n/g,"");u.resolve(r+t)}).error(function(e){u.reject(e)})}).error(function(e){u.reject(e)})}}),u.promise}}}]),angular.module("resources").factory("proteinSequenceData",["$http","$q",function(e,r){"use strict";return{getSequence:function(n){var o=r.defer();return n?e.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=protein&id="+n+"&rettype=fasta").then(function(e){var r=e.data,t=">"+n+"\n"+r.substring(r.indexOf("\n")+1).replace(/\n/g,"");o.resolve(t)},function(e){console.log("Error reading protein sequence"),o.reject(e)}):(console.log("No Ref Seq ID"),o.reject()),o.promise}}}]),angular.module("resources").factory("expasyData",["$http","$location",function(t,e){var n="https://"+e.host()+"/expasy/EC/{ecnumber}.txt";return{getReactionData:function(e){var r=n.replace("{ecnumber}",e);return t.get(r).then(function(e){var n={reaction:[]},r=e.data.split("\n");return angular.forEach(r,function(e,r){if(e.match("^ID")&&(n.ecnumber=e.slice(5)),e.match("^CA ")){var t=e.replace(/^(CA)/,"");n.reaction.push(t)}}),n},function(e){return e})}}}]),angular.module("resources").factory("pubMedData",["$http",function(t){return{getPMID:function(r){var e="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&retmode=json&id="+r;return t.get(e).success(function(e){return e.result[r]}).error(function(e){return e})}}}]),angular.module("resources").factory("locusTag2Pub",["$http",function(t){return{getlocusTag2Pub:function(e){var r="https://www.ebi.ac.uk/europepmc/webservices/rest/search?query=chlamydia%20{locusTag}&format=json".replace("{locusTag}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("euroPubData",["$http",function(t){return{getEuroPubData:function(e){var r="https://www.ebi.ac.uk/europepmc/webservices/rest/search?query={pubmedID}&resulttype=core&format=json".replace("{pubmedID}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("pubLinks",["$http","$filter",function(t,e){return{getPubLinks:function(e){var r="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?dbfrom=gene&db=pubmed&id={entrez}&retmode=json&linkname=gene_pubmed_pmc_nucleotide".replace("{entrez}",e);return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("recentChlamPubLinks",["$http",function(r){return{getRecentChlamPubLinks:function(e){return r.get("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&term=chlamydia trachomatis&reldate=10&datetype=edat&retmax=100&usehistory=y&retmode=json").success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("allGoTerms",["$http",function(n){return{getGoTermsAll:function(e,r){var t="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT DISTINCT ?goterm ?goID ?goterm_label WHERE { ?goterm wdt:P279* wd:"+r+"; rdfs:label ?goterm_label; wdt:P686 ?goID. FILTER(lang(?goterm_label) = 'en') FILTER(CONTAINS(LCASE(?goterm_label), '"+e.toLowerCase()+"' ))}");return n.get(t).success(function(e){return e.data}).error(function(e){return e})}}}]),angular.module("resources").factory("allChlamydiaGenes",["$http",function(r){return{getAllChlamGenes:function(){var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?taxon ?taxid ?taxonLabel ?geneLabel ?entrez ?uniprot ?proteinLabel ?locusTag ?refseq_prot ?gene(GROUP_CONCAT(DISTINCT ?aliases) AS ?aliases) (GROUP_CONCAT(DISTINCT ?goLabel) AS ?goLabel) (GROUP_CONCAT(DISTINCT ?host_protein) AS ?host_protein) WHERE {?taxon wdt:P171* wd:Q846309.?gene wdt:P279 wd:Q7187.?gene wdt:P703 ?taxon.?gene wdt:P351 ?entrez.?gene wdt:P2393 ?locusTag.?gene skos:altLabel ?aliases.OPTIONAL {?gene wdt:P688 ?protein.?protein wdt:P352 ?uniprot.?protein wdt:P637 ?refseq_prot.OPTIONAL {?protein (wdt:P680 | wdt:P681 | wdt:P682)+/rdfs:label ?goLabel.FILTER(LANG(?goLabel) = 'en').}OPTIONAL {?protein wdt:P129+/rdfs:label ?host_protein}}?taxon wdt:P685 ?taxid.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}GROUP BY ?locusTag ?taxon ?taxid ?taxonLabel ?geneLabel ?entrez ?uniprot ?proteinLabel ?refseq_prot ?gene");return r.get(e).success(function(e){var r=e.results.bindings,a=/(TC|CTL|CT|CPn)_?(RS)?\d+/;return angular.forEach(r,function(e){var r=e.geneLabel.value,t=r.match(a)[0];-1!=r.indexOf("_")&&(e.geneLabel.value+="/"+t.replace("_",""));var n=t.match(/(TC|CTL|CT|CPn)_?(RS)?/)[0],o=parseInt(t.substring(n.length));e.geneLabel.value+="/"+n+o,-1!=n.indexOf("_")&&(e.geneLabel.value+="/"+n.replace("_","")+o)}),r}).error(function(e){return e})},getAllChlamGeneLabels:function(){var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT ?geneLabel ?locusTag ?taxid WHERE { ?taxon wdt:P171* wd:Q846309. ?gene wdt:P279 wd:Q7187.?gene wdt:P703 ?taxon.?gene wdt:P2393 ?locusTag.?taxon wdt:P685 ?taxid. SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}");return r.get(e).success(function(e){var r=e.results.bindings,a=/(TC|CTL|CT|CPn)_?(RS)?\d+/;return angular.forEach(r,function(e){var r=e.geneLabel.value,t=r.match(a)[0];-1!=r.indexOf("_")&&(e.geneLabel.value+="/"+t.replace("_",""));var n=t.match(/(TC|CTL|CT|CPn)_?(RS)?/)[0],o=parseInt(t.substring(n.length));e.geneLabel.value+="/"+n+o,-1!=n.indexOf("_")&&(e.geneLabel.value+="/"+n.replace("_","")+o)}),r}).error(function(e){return e})}}}]),angular.module("resources").factory("wdGetEntities",function(){return{wdGetEntities:function(e){return $.ajax({url:"https://www.wikidata.org/w/api.php",jsonp:"callback",dataType:"jsonp",data:{action:"wbgetentities",ids:e,format:"json"},xhrFields:{withCredentials:!0},success:function(e){return e},error:function(e){return e}})}}}),angular.module("resources").factory("entrez2QID",["$http","$filter",function(t,e){return{getEntrez2QID:function(e){var r="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent("SELECT distinct ?gene ?protein WHERE{?gene wdt:P351 '{entrez}'; wdt:P688 ?protein.}".replace("{entrez}",e));return t.get(r).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("locusTag2QID",["$http","$filter",function(o,e){return{getLocusTag2QID:function(e,r){var t="SELECT distinct ?gene ?protein WHERE{?strain wdt:P685 '{taxid}'. ?gene wdt:P2393 '{locusTag}'; wdt:P703 ?strain. OPTIONAL {?gene wdt:P688 ?protein.}}".replace("{taxid}",r).replace("{locusTag}",e),n="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(t);return o.get(n).success(function(e){return e}).error(function(e){return e})}}}]),angular.module("resources").factory("abstractSPARQL",["$http",function(a){return{getAbstractSPARQL:function(e,r,t){var n="PREFIX wd: <https://www.wikidata.org/entity/> PREFIX prov: <https://www.w3.org/ns/prov#> PREFIX pr: <https://www.wikidata.org/prop/reference/> PREFIX p: <https://www.wikidata.org/prop/> PREFIX ps: <https://www.wikidata.org/prop/statement/> SELECT (wd:prot_qid as ?sub) ?obj ?objLabel ?objDescription ?obj_id ?stated_in ?stated_inLabel ?retrieved ?reference_url ?language ?languageLabel ?curator ?curatorLabel ?determination ?determinationLabel WHERE {  wd:prot_qid p:an_prop ?claim .  ?claim ps:an_prop ?obj.  ?obj wdt:id_prop ?obj_id.   optional {?claim prov:wasDerivedFrom/pr:P248 ?stated_in. }   optional {?claim prov:wasDerivedFrom/pr:P813 ?retrieved. }   optional {?claim prov:wasDerivedFrom/pr:P854 ?reference_url. }   optional {?claim prov:wasDerivedFrom/pr:P407 ?language. }   optional {?claim prov:wasDerivedFrom/pr:P1640 ?curator. }   optional {?claim pq:P459 ?determination. }   SERVICE wikibase:label {         bd:serviceParam wikibase:language 'en' .  } }".replace(/prot_qid/g,e).replace(/an_prop/g,r).replace(/id_prop/g,t),o="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(n);return console.log(n),a.get(o).success(function(e){return e}).error(function(e){return e})}}}]);angular.module("advancedKeywordForm",["resources"]);angular.module("allgenesDownload",[]);angular.module("alignmentView",[]);angular.module("annotationsView",["resources","cellVisualizer","helpForm"]);angular.module("enzymeView",[]);angular.module("expressionView",[]);angular.module("geneOntology",[]);angular.module("hostPathogen",[]);angular.module("interPro",[]);angular.module("linkedPubs",[]);angular.module("localizationView",[]);angular.module("mutantsView",["resources"]);angular.module("operonAnnotations",[]);angular.module("orthologView",["resources"]);angular.module("oauthForm",["resources"]);angular.module("oauthView",["resources"]);angular.module("browserPage",["resources"]);angular.module("cellVisualizer",[]);angular.module("footer",[]);angular.module("functionalAnnotation",["resources"]);angular.module("geneForm",["resources"]);angular.module("geneNameForm",["resources"]);angular.module("geneOverview",["resources"]);angular.module("genesKeyword",["resources"]);angular.module("goForm",["resources"]);angular.module("helpForm",["resources"]);angular.module("hostpathForm",["resources"]);angular.module("jbrowseView",["resources"]);angular.module("keywordForm",["resources"]);angular.module("keywordPaginated",[]);angular.module("landingPage",["resources"]);angular.module("localizationForm",[]);angular.module("mainPage",["resources"]);angular.module("mutantBatch",["resources"]);angular.module("mutantForm",["resources"]);angular.module("operonForm",["resources"]);angular.module("organismForm",["resources"]);angular.module("organismTree",["resources"]);angular.module("organismView",["resources"]);angular.module("pdbForm",["resources"]);angular.module("proteinView",[]);angular.module("advancedKeywordForm").component("advancedKeywordForm",{controller:["$cacheFactory","allGoTerms","$location","allChlamydiaGenes",function(t,n,r,e){var o=this,l={name:"Molecular Function",QID:"Q14860489"},u={name:"Cellular Component",QID:"Q5058355"},c={name:"Biological Process",QID:"Q2996394"};o.mfTerms=function(e){return n.getGoTermsAll(e,l.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})},o.ccTerms=function(e){return n.getGoTermsAll(e,u.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})},o.bpTerms=function(e){return n.getGoTermsAll(e,c.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})},o.advSearch=function(){var e=t("advSearch");e.put("mf",[o.mf,o.mf_text]),e.put("bp",[o.bp,o.bp_text]),e.put("cc",[o.cc,o.cc_text]),e.put("hp",[o.hp,o.hp_text]),e.put("entrez",[o.entrez,o.entrez_text]),e.put("uniprot",[o.uniprot,o.uniprot_text]),e.put("refseq",[o.refseq,o.refseq_text]),e.put("pdb",[o.pdb,o.pdb_text]),e.put("cm",o.cm),e.put("tm",o.tm),e.put("im",o.im),e.put("rm",o.rm),o.keyword||(o.keyword=""),r.path("keyword/"+o.keyword)},e.getAllChlamGeneLabels().then(function(e){o.genes=e.data.results.bindings}),o.submitKeyword=function(e){null==e?r.path("keyword/"):r.path("keyword/"+e)},o.onSelect=function(e){r.path("/organism/"+e.taxid.value+"/gene/"+e.locusTag.value)},o.scrolled=!1,o.keyPressed=function(e){o.keyword=o.keyword.replace("/"," "),13==e.keyCode?o.scrolled?o.onSelect(o.selected):o.geneList&&1==o.geneList.length?o.onSelect(o.geneList[0]):o.submitKeyword(o.keyword):37<=e.keyCode&&e.keyCode<=40&&(o.scrolled=!0)},o.select=function(e,t){o.selected=e,"click"==t.type&&o.onSelect(e)}}],templateUrl:"/static/build/js/angular_templates/advanced-keyword-form.min.html"});angular.module("allgenesDownload").component("allgenesDownload",{template:'<a target="_blank" href="{{$ctrl.genesUrl()}}"><div class="btn btn-default">Download Genes</div></a>',bindings:{taxid:"<"},controller:function(){"use strict";var t=this;t.$onChanges=function(e){e.taxid&&(t.genesUrl=function(){return"https://query.wikidata.org/#SELECT ?refSeqChromosome ?gene ?genStart ?genEnd ?strand ?geneLabel ?entrez ?locusTag ?protein ?proteinLabel ?uniprot ?refseqProt WHERE{ ?taxon wdt:P685 '"+t.taxid+"'. ?gene wdt:P703 ?taxon; wdt:P279 wd:Q7187; wdt:P644 ?genStart; wdt:P645 ?genEnd; wdt:P2548 ?strand; wdt:P2393 ?locusTag; wdt:P351 ?entrez; wdt:P688 ?protein. ?protein wdt:P352 ?uniprot; wdt:P637 ?refseqProt.OPTIONAL{ ?gene p:P644 ?chr. ?chr pq:P2249 ?refSeqChromosome.} SERVICE wikibase:label { bd:serviceParam wikibase:language 'en' . } }"})}}});angular.module("alignmentView").controller("alignmentCtrl",["orthoData","geneSequenceData","alignOrthologData","proteinSequenceData",function(e,o,l,s){"use strict";var i=this;i.projection={},i.type="dna",i.alignMessage="Aligning Orthologs. Please be patient.",i.citation=!1,i.isRendered=!1,i.data={},e.getOrthologs(i.locusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var n=e.orthoTaxid.value,t=e.orthoLocusTag.value;i.hasOrthologs=!0,i.projection[n]=!0;var a=e.refseq?e.refseq.value:"";i.data[n]=[t,a]})}),i.select=function(e,n){i.projection[n]=e},i.alignData=function(){var t=[],a=0;angular.forEach(i.projection,function(e,n){e?("dna"==i.type?o.getSequence(i.data[n][0]):s.getSequence(i.data[n][1])).then(function(e){a++,t.push(e),a==Object.keys(i.projection).length&&(i.aligning=!0,l.align(t,i),i.citation=!0)},function(e){a++,i.aligning=!1}):a++})}}]).factory("alignOrthologData",["$http","$timeout","$sce",function(e,l,s){"use strict";var i=function(a,o){e.get("https://www.ebi.ac.uk/Tools/services/rest/muscle/status/"+a).then(function(e){if(console.log(e.data),"RUNNING"!=e.data)if("FINISHED"==e.data){o.aligning=!1;var n={el:document.getElementById("msaDiv"),vis:{conserv:!0,seqlogo:!1,labelId:!1},zoomer:{labelNameLength:110},colorscheme:{scheme:"clustal2"}},t=new msa.msa(n);t.u.file.importURL("https://www.ebi.ac.uk/Tools/services/rest/muscle/result/"+a+"/aln-fasta",function(){t.render()}),new msa.menu.defaultmenu({el:document.getElementById("menuDiv"),msa:t}).render(),o.isRendered=!0,o.alignmentURL=s.trustAsResourceUrl("https://www.ebi.ac.uk/Tools/services/rest/muscle/result/"+a+"/aln-fasta")}else console.log("ERROR: "+e.data),o.aligning=!1;else l(i(a,o),2e3)})};return{align:function(a,o){e.get("alignOrthologs?sequence="+encodeURIComponent(a.join("\n"))+"&length="+encodeURIComponent(a.length)).then(function(e){var n=e.data.id;console.log("Job ID:"+n),i(n,o)},function(e){o.aligning=!1,console.log("POST TO MUSCLE Error"+e.status),console.log(e);var n=msa.io.fasta.parse(a.join("\n")),t={el:document.getElementById("msaDiv"),seqs:n};new msa.msa(t).render(),o.isRendered=!0})}}}]).component("alignmentView",{controller:"alignmentCtrl",templateUrl:"/static/build/js/angular_templates/alignment-view.min.html",bindings:{locusTag:"<",taxId:"<",allorggenes:"<"}});angular.module("annotationsView").component("annotationsView",{templateUrl:"/static/build/js/angular_templates/annotations-view.min.html",bindings:{data:"<",annotations:"<",org:"<",allorggenes:"<",hasprotein:"<"},controller:["annotationSettings",function(t){"use strict";var i=this;i.settings={product:!0,ortholog:!0,alignment:!0,expression:!0,go:!0,localizations:!0,operon:!0,interpro:!0,enzyme:!0,mutants:!0,hostpath:!0,pubs:!0},i.map={product:"Gene Product",ortholog:"Orthologs",alignment:"Alignments",expression:"Expression",go:"Functions",localizations:"Localizations",operon:"Operons",interpro:"Interpro",enzyme:"Enzyme",mutants:"Mutants",hostpath:"Protein Interactions",pubs:"Related Pubs"},t.getSettings().then(function(t){i.settings={product:i.settings.product&&t.data["protein-view"],ortholog:i.settings.ortholog&&t.data["ortholog-view"],alignment:i.settings.alignment&&t.data["alignment-view"],expression:i.settings.expression&&t.data["expression-view"],go:i.settings.go&&t.data["function-view"],localizations:i.settings.localizations&&t.data["localization-view"],operon:i.settings.operon&&t.data["operon-view"],interpro:i.settings.interpro&&t.data["interpro-view"],enzyme:i.settings.enzyme&&t.data["enzyme-view"],mutants:i.settings.mutants&&t.data["mutant-view"],hostpath:i.settings.hostpath&&t.data["protein-interaction-view"],pubs:i.settings.pubs&&t.data["related-publication-view"]},i.table=[];var o=0,e=0;angular.forEach(i.settings,function(t,n){t&&(0!=e&&e%6==0&&o++,i.table[o]?i.table[o].push(n):i.table[o]=[n],e++)})}),i.$onChanges=function(t){!1===t.hasprotein&&(i.settings.product=!1,i.settings.go=!1,i.settings.localizations=!1,i.settings.interpro=!1,i.settings.enzyme=!1,i.settings.hostpath=!1)},i.$onInit=function(){i.expandAll=function(){i.toggleOpen(!0)},i.collapseAll=function(){i.toggleOpen(!1)},i.accordion={go:!0,operon:!0,interpro:!0,enzyme:!0,mutants:!0,pubs:!0,product:!0,ortholog:!0,alignment:!0,expression:!0,hostpath:!0,localizations:!0},i.toggleOpen=function(t){i.accordion.go=t,i.accordion.operon=t,i.accordion.interpro=t,i.accordion.enzyme=t,i.accordion.mutants=t,i.accordion.pubs=t,i.accordion.product=t,i.accordion.ortholog=t,i.accordion.alignment=t,i.accordion.hostpath=t,i.accordion.expression=t,i.accordion.localizations=t},i.status={isCustomHeaderOpen:!1,isFirstOpen:!0,isFirstDisabled:!1}}}]});angular.module("enzymeView").component("enzymeView",{templateUrl:"/static/build/js/angular_templates/enzyme-view.min.html",bindings:{reaction:"<",ecnumber:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("expressionView").component("expressionView",{templateUrl:"/static/build/js/angular_templates/expression-view.min.html",bindings:{data:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("geneOntology").component("geneOntology",{templateUrl:"/static/build/js/angular_templates/gene-ontology-view.min.html",bindings:{data:"<",goclass:"@",gene:"<"},controller:function(){"use strict";var e=this;e.$onChanges=function(){e.data&&angular.forEach(e.data,function(e){e.determinationLabel.values=e.determinationLabel.value.split(";")})},e.evidenceCodes={IEA:"Inferred From Electronic Annotation",EXP:"Inferred from Experiment",IDA:"Inferred from Direct Assay",IPI:"Inferred From Physical Interaction",IMP:"Inferred from Mutant Phenotype",IGI:"Inferred from Genetic Interaction",IEP:"Inferred from Expression Pattern",ISS:"Inferred From Sequence or structural Similarity",ISO:"Inferred from Sequence Orthology",ISA:"Inferred from Sequence Alignment",ISM:"Inferred From Sequence Model",IGC:"Inferred from Genomic Context",IBA:"Inferred from Biological aspect of Ancestor",IBD:"Inferred from Biological aspect of Descendant",IKR:"Inferred From Key Residues",IRD:"Inferred from Rapid Divergence",RCA:"Inferred from Reviewed Computational Analysis",TAS:"Traceable Author Statement",NAS:"Non traceable author statement",IC:"Inferred by Curator",ND:"No biological Data available"}}});angular.module("hostPathogen").component("hostPathogen",{templateUrl:"/static/build/js/angular_templates/host-pathogen.min.html",bindings:{data:"<"},controller:function(){"use strict"}});angular.module("interPro").component("interPro",{templateUrl:"/static/build/js/angular_templates/interpro-view.min.html",bindings:{data:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("linkedPubs").component("linkedPubs",{templateUrl:"/static/build/js/angular_templates/linked-pubs.min.html",bindings:{pubs:"<"},controller:function(){"use strict";this.$onInit=function(){}}});angular.module("localizationView").component("localizationView",{templateUrl:"/static/build/js/angular_templates/localization-view.min.html",bindings:{components:"<",localizations:"<",gene:"<"},controller:function(){"use strict";var e=this;e.$onChanges=function(){e.components&&angular.forEach(e.components,function(e){e.determinationLabel.values=e.determinationLabel.value.split(";")})},e.evidenceCodes={IEA:"Inferred From Electronic Annotation",EXP:"Inferred from Experiment",IDA:"Inferred from Direct Assay",IPI:"Inferred From Physical Interaction",IMP:"Inferred from Mutant Phenotype",IGI:"Inferred from Genetic Interaction",IEP:"Inferred from Expression Pattern",ISS:"Inferred From Sequence or structural Similarity",ISO:"Inferred from Sequence Orthology",ISA:"Inferred from Sequence Alignment",ISM:"Inferred From Sequence Model",IGC:"Inferred from Genomic Context",IBA:"Inferred from Biological aspect of Ancestor",IBD:"Inferred from Biological aspect of Descendant",IKR:"Inferred From Key Residues",IRD:"Inferred from Rapid Divergence",RCA:"Inferred from Reviewed Computational Analysis",TAS:"Traceable Author Statement",NAS:"Non traceable author statement",IC:"Inferred by Curator",ND:"No biological Data available"}}});angular.module("mutantsView").component("mutantsView",{bindings:{data:"<"},controller:["$location","sendToView",function(i,e){"use strict";var a=this;a.$onInit=function(){},a.authorized=i.path().includes("authorized"),a.deleteAnnotation=function(t){console.log(t),a.loading=!0,t.action="delete";var n=i.path()+"/wd_mutant_edit";e.sendToView(n,t).then(function(t){}).finally(function(){a.loading=!1})}}],templateUrl:"/static/build/js/angular_templates/mutants-view.min.html"});angular.module("operonAnnotations").component("operonAnnotations",{templateUrl:"/static/build/js/angular_templates/operon-view.min.html",bindings:{operon:"<",allorggenes:"<",gene:"<"},controller:function(){this.$onInit=function(){}}});angular.module("orthologView").component("orthologView",{bindings:{locusTag:"<"},controller:"orthologCtrl",templateUrl:"/static/build/js/angular_templates/ortholog-view.min.html"}).controller("orthologCtrl",["orthoData","InterPro","hostPathogen","GOTerms","OperonData","expressionTimingData","$filter","sendToView","$location",function(t,a,e,o,n,i,u,l,h){"use strict";var s=this;s.data={},s.reference="",t.getOrthologs(s.locusTag).then(function(t){angular.forEach(t.results.bindings,function(r){s.hasOrthologs=!0,s.data[r.orthoTaxid.value]={locusTag:r.orthoLocusTag.value,taxid:r.orthoTaxid.value},r.reference&&(s.reference=r.reference.value),r.uniprot?(a.getInterPro(r.uniprot.value).then(function(t){s.data[r.orthoTaxid.value].ip=0<t.length}),e.getHostPathogen(r.uniprot.value).then(function(t){s.data[r.orthoTaxid.value].hp=0<t.length}),o.getGoTerms(r.uniprot.value).then(function(t){var a=t.data.results.bindings;s.data[r.orthoTaxid.value].go=0<a.length;var e=[];angular.forEach(a,function(t,a){t.hasOwnProperty("ecnumber")&&-1==e.indexOf(t.ecnumber.value)&&e.push(t.ecnumber.value)});var o={locusTag:r.orthoLocusTag.value,taxid:r.orthoTaxid.value,ec_number:e},n=h.path()+"/mg_mutant_view";l.sendToView(n,o).then(function(t){s.data[r.orthoTaxid.value].mutant=0<t.data.mutants.length})})):(s.data[r.orthoTaxid.value].ip=!1,s.data[r.orthoTaxid.value].hp=!1,s.data[r.orthoTaxid.value].go=!1),n.getOperonData(r.entrez.value).then(function(t){s.data[r.orthoTaxid.value].operon=0<t.data.results.bindings.length}),i.getExpression(function(t){var a=u("keywordFilter")(t,r.orthoLocusTag.value),e={};angular.forEach(a[0],function(t,a){"_id"!=a&&"$oid"!=a&&"timestamp"!=a&&(e[a]=t)}),s.data[r.orthoTaxid.value].expression=null!=e.RB_EXPRESSION_TIMING})})}),s.tSettings={strain:!0,tax:!0,cLocus:!0,dLocus:!1,identity:!1,length:!1,eval:!1,ref:!0,expression:!0,go:!0,operons:!0,mutants:!0,interpro:!0,hostPathogen:!0}}]);angular.module("oauthForm").component("oauthForm",{controller:["$window","$routeParams","$location","sendToView",function(a,i,n,t){"use strict";var o=this;o.authorization=n.path().includes("authorized"),o.oauthAuthorization=function(){t.sendToView("/wd_oauth",{authorization:"sending",current_path:n.path(),initiate:!0}).then(function(t){a.location.href=t.data.wikimediaURL})},o.revokeAuthorization=function(){t.sendToView("/wd_oauth",{deauthenticate:!0}).then(function(t){var a="/organism/{taxid}".replace("{taxid}",i.taxid),o="/gene/{locusTag}/".replace("{locusTag}",i.locusTag);n.url(a+o)})}}],templateUrl:"/static/build/js/angular_templates/oauth-form.min.html"});angular.module("oauthView").component("oauthView",{bindings:{},controller:["$window","$routeParams","$location","sendToView",function(t,o,i,e){"use strict";o.oauth_verifier&&(e.sendToView("/wd_oauth",{url:i.url()}).then(function(t){console.log(t)}),i.url(i.path())),this.authorization=i.path().includes("authorized")}],templateUrl:"/static/build/js/angular_templates/authorization-view.min.html"});angular.module("browserPage").component("browserPage",{controller:["$filter","$location","$routeParams","allChlamOrgs","allOrgGenes",function(t,n,e,r,l){"use strict";var a=this;a.$onInit=function(){a.loading=!0,a.currentTaxid=e.taxid,console.log(a.currentTaxid),r.getAllOrgs(function(e){a.orgList=e,a.currentOrg=t("getJsonItemOrg")("taxid",a.currentTaxid,a.orgList),null==a.currentOrg&&(alert("not a valid taxonomy id"),n.path("/"))}),l.getAllOrgGenes(a.currentTaxid).then(function(e){var n=e.data.results.bindings;a.currentAllGenes=t("orderObjectBy")(n,"genStart"),a.initialGene=a.currentAllGenes[0],console.log(a.currentAllGenes)}).finally(function(){a.loading=!1}),a.onSelect=function(e){n.path("/organism/"+a.currentTaxid+"/gene/"+e.locusTag.value)}}}],templateUrl:"/static/build/js/angular_templates/browser-page.min.html"});angular.module("cellVisualizer").controller("cellVisualizerCtrl",["geneOntologyService",function(o){"use strict";var t="#cc0000",i=this;function n(e){var n=[];if(n=o.isInclusion(e)?document.getElementsByClassName("inclusion"):document.getElementsByClassName(o.getClass(e)),i.pending--,o.isPlasmaMembrane(e))n[0].style.fill=t,document.getElementsByClassName("cytoplasm")[0].style.fill!=t&&(document.getElementsByClassName("cytoplasm")[0].style.fill="#FFFFFF");else if(o.isInclusion(e))o.isInclusionMembrane(e)?n[0].style.stroke=t:n[0].style.fill=t;else for(var l=0;l<n.length;l++)n[l].style.fill=t;0==i.pending&&(i.loading=!1)}i.status="Loading Component Viewer...",i.loading=!0,i.$onChanges=function(){i.cellComp&&(i.pending=i.cellComp.length,angular.forEach(i.cellComp,function(e){var n=e.goID.value.replace(":","_");i.highlight(n)}),0==i.pending&&(i.loading=!1,i.status="No Components to Show"))},this.displayCell=!1,this.highlight=function(e){o.isValid(e)?(i.displayCell=!0,n(e)):o.getParent(e).then(function(e){i.displayCell=!0,n(e)},function(e){i.pending--,0==i.pending&&(i.loading=!1,i.status="No Components to Show")})}}]).service("geneOntologyService",["$http","$q",function(n,l){var o={GO_0044177:"golgi",GO_0044174:"endosome",GO_0120149:"peroxisome",GO_0042025:"nucleus",GO_0033650:"mitochondria",GO_0044165:"er",GO_0140221:"inclusion_membrane",GO_0140222:"inclusion_lumen",BTO_0001172:"rb",BTO_0000377:"eb",GO_0044187:"lysosome",GO_0044186:"ld",GO_0120148:"centrosome",GO_0044163:"cytoskeleton",GO_0020002:"plasma_membrane",GO_0030430:"cytoplasm",GO_0044164:"cytoplasm"},i=function(e){return!!o[e]};return{getParent:function(o){var t=l.defer(),e=encodeURIComponent(encodeURIComponent("https://purl.obolibrary.org/obo/"+o));return n.get("https://www.ebi.ac.uk/ols/api/ontologies/go/terms/"+e+"/hierarchicalAncestors").success(function(e){if(e._embedded)for(var n=0;n<e._embedded.terms.length;n++){var l=e._embedded.terms[n];if(i(l.short_form))return console.log("Go term "+o+" has parent "+l.label),void t.resolve(l.short_form)}t.reject(e)}).error(function(e){t.reject(e)}),t.promise},isValid:i,getClass:function(e){return o[e]},isPlasmaMembrane:function(e){return"plasma_membrane"==o[e]},isInclusion:function(e){return"inclusion_membrane"==o[e]||"inclusion_lumen"==o[e]},isInclusionMembrane:function(e){return"inclusion_membrane"==o[e]}}}]).component("cellVisualizer",{controller:"cellVisualizerCtrl",templateUrl:"/static/build/js/angular_templates/cell-visualizer-view.min.html",bindings:{cellComp:"<"}});angular.module("footer").component("footer",{templateUrl:"/static/build/js/angular_templates/footer.min.html",controller:function(){}});angular.module("functionalAnnotation").component("functionalAnnotation",{templateUrl:"/static/build/js/angular_templates/functional-annotation.min.html",bindings:{data:"<",config:"<"},controller:function(){"use strict";var t=this;t.$onInit=function(){t.title=t.config.title+" ({title})".replace("{title}",t.data.length)}}});angular.module("geneForm").component("geneForm",{templateUrl:"/static/build/js/angular_templates/gene-form.min.html",bindings:{taxid:"<",genes:"<"},controller:["$location",function(n){"use strict";var t=this;t.onSelect=function(e){n.path("/organism/"+t.taxid+"/gene/"+e.locusTag.value)}}]});angular.module("geneNameForm").controller("geneNameCtrl",["$location","sendToView","orthoData","$routeParams","locusTag2QID","$filter",function(e,l,a,n,s,g){"use strict";var u=this;u.locusTag=n.locusTag,u.orthoData={},u.projection={},a.getOrthologs(u.locusTag).then(function(e){angular.forEach(e.results.bindings,function(e){var a=e.orthoTaxid.value,n=e.orthoLocusTag.value;u.projection[a]=n==u.locusTag,u.orthoData[a]=n})}),u.pageCount=0,u.nextClick=function(){u.pageCount+=1},u.backClick=function(){u.pageCount-=1},u.geneNameData={geneQID:null,proteinQID:null,geneName:""},u.resetForm=function(){u.geneNameData.geneName="",u.pageCount=0},u.$onChanges=function(){u.geneNameData.geneQID=u.gene.geneQID,u.geneNameData.proteinQID=u.gene.proteinQID},u.sendData=function(){var o=0,r=!0,i=!1,a=!1;if(angular.forEach(u.projection,function(e){1==e&&(a=!0)}),!a)return alert("Please select at least one gene to annotate!"),void(u.loading=!1);e.path().includes("authorized")?angular.forEach(u.projection,function(e,t){e?s.getLocusTag2QID(u.orthoData[t],t).then(function(e){var a={geneQID:g("parseQID")(e.data.results.bindings[0].gene.value),proteinQID:null,geneName:u.geneNameData.geneName};e.data.results.bindings[0].protein&&(a.proteinQID=g("parseQID")(e.data.results.bindings[0].protein.value));var n="/organism/"+t+"/gene/"+u.orthoData[t]+"/wd_gene_name_edit";console.log(n),l.sendToView(n,a).then(function(e){!1===e.data.authentication?r=!(i=!0):e.data.write_success||(r=!1)}).finally(function(){++o==Object.keys(u.projection).length&&(r?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),u.resetForm()):i?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"))})}):++o==Object.keys(u.projection).length&&(r?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),u.resetForm()):i?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),u.resetForm())}):alert("Please authorize ChlamBase to edit Wikidata on your behalf!")}}]).component("geneNameForm",{bindings:{gene:"<"},templateUrl:"/static/build/js/angular_templates/gene-name-form.min.html",controller:"geneNameCtrl"});angular.module("geneOverview").component("geneOverview",{templateUrl:"/static/build/js/angular_templates/gene-overview.min.html",bindings:{data:"<",annotations:"<"},controller:["$routeParams","sendToView","$location","$scope",function(a,n,i,t){"use strict";var e=this;e.$onInit=function(){e.taxid=a.taxid,e.locusTag=a.locusTag,e.cm=e.tm=e.rm=e.im=0;var t=i.path()+"/mg_mutant_view";n.sendToView(t,{locusTag:e.locusTag,taxid:e.taxid}).then(function(t){angular.forEach(t.data.mutants,function(t){"EFO_0000370"==t.mutation_id?e.cm++:"EFO_0004021"==t.mutation_id?e.tm++:"EFO_0004016"==t.mutation_id?e.im++:"EFO_0004293"==t.mutation_id&&e.rm++})})}}]});angular.module("genesKeyword").component("genesKeyword",{controller:["$location","$filter","allChlamOrgs","allChlamydiaGenes","queryBuilder","$http","allGoTerms","sendToView","$cacheFactory",function(l,a,o,i,n,t,s,c,u){"use strict";var p=this;p.$onInit=function(){p.loading=!0,p.chlamGenes={},p.keyword=l.path().split("/")[2],p.keywordResult=p.keyword;var e=u.get("advSearch");e&&(p.adv_cache=!0,p.mf=e.get("mf")[0],p.mf_text=e.get("mf")[1],p.bp=e.get("bp")[0],p.bp_text=e.get("bp")[1],p.cc=e.get("cc")[0],p.cc_text=e.get("cc")[1],p.hp=e.get("hp")[0],p.hp_text=e.get("hp")[1],p.entrez=e.get("entrez")[0],p.entrez_text=e.get("entrez")[1],p.uniprot=e.get("uniprot")[0],p.uniprot_text=e.get("uniprot")[1],p.refseq=e.get("refseq")[0],p.refseq_text=e.get("refseq")[1],p.pdb=e.get("pdb")[0],p.pdb_text=e.get("pdb")[1],p.cm=e.get("cm"),p.tm=e.get("tm"),p.im=e.get("im"),p.rm=e.get("rm"),e.removeAll(),e.destroy(),p.advSearch()),p.orgData=[],o.getAllOrgs(function(e){angular.forEach(e,function(e){e.check=!0,p.orgData.push(e)})}),p.adv_cache||(p.getChlamGenes=i.getAllChlamGenes().then(function(e){p.chlamGenes.allGenes=e.data.results.bindings,p.chlamGenes.keywordAll=a("keywordFilter")(p.chlamGenes.allGenes,p.keyword),p.chlamGenes.currentKW=p.chlamGenes.keywordAll}).finally(function(){p.loading=!1}));var t={name:"Molecular Function",QID:"Q14860489"},n={name:"Cellular Component",QID:"Q5058355"},r={name:"Biological Process",QID:"Q2996394"};p.mfTerms=function(e){return s.getGoTermsAll(e,t.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})},p.ccTerms=function(e){return s.getGoTermsAll(e,n.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})},p.bpTerms=function(e){return s.getGoTermsAll(e,r.QID).then(function(e){return e.data.results.bindings.map(function(e){return e})})}},p.facetOrganism=function(e){p.currentOrgsList=[],angular.forEach(p.orgData,function(e){1==e.check&&p.currentOrgsList.push(e.taxid)}),p.chlamGenes.currentKW=a("deleteJsonItemValuesList")("taxid",p.currentOrgsList,p.chlamGenes.keywordAll)},p.advSearch=function(){p.loading=!0,p.keywordResult=p.keyword,p.chlamGenes.currentKW=[],$(".collapse").collapse("hide");var e="https://query.wikidata.org/sparql?format=json&query="+encodeURIComponent(p.buildQuery());t.get(e).then(function(e){p.chlamGenes.allGenes=e.data.results.bindings,p.chlamGenes.keywordAll=a("keywordFilter")(p.chlamGenes.allGenes,p.keyword);var t="organism/1/gene/1/mg_mutant_view",r=0;if(p.cm&&r++,p.tm&&r++,p.im&&r++,p.rm&&r++,0==r)return p.chlamGenes.currentKW=p.chlamGenes.keywordAll,void(p.loading=!1);p.cm&&c.sendToView(t,{action:"chemical"}).then(function(e){var t=e.data.mutants,n=[];if(angular.forEach(t,function(e){-1==n.indexOf(e.locusTag)&&n.push(e.locusTag)}),p.chlamGenes.keywordAll=a("locusTagFilter")(p.chlamGenes.keywordAll,n),0==--r)return p.chlamGenes.currentKW=p.chlamGenes.keywordAll,void(p.loading=!1)}),p.tm&&c.sendToView(t,{action:"transposition"}).then(function(e){var t=e.data.mutants,n=[];if(angular.forEach(t,function(e){-1==n.indexOf(e.locusTag)&&n.push(e.locusTag)}),p.chlamGenes.keywordAll=a("locusTagFilter")(p.chlamGenes.keywordAll,n),0==--r)return p.chlamGenes.currentKW=p.chlamGenes.keywordAll,void(p.loading=!1)}),p.rm&&c.sendToView(t,{action:"recombination"}).then(function(e){var t=e.data.mutants,n=[];if(angular.forEach(t,function(e){-1==n.indexOf(e.locusTag)&&n.push(e.locusTag)}),p.chlamGenes.keywordAll=a("locusTagFilter")(p.chlamGenes.keywordAll,n),0==--r)return p.chlamGenes.currentKW=p.chlamGenes.keywordAll,void(p.loading=!1)}),p.im&&c.sendToView(t,{action:"insertion"}).then(function(e){var t=e.data.mutants,n=[];if(angular.forEach(t,function(e){-1==n.indexOf(e.locusTag)&&n.push(e.locusTag)}),p.chlamGenes.keywordAll=a("locusTagFilter")(p.chlamGenes.keywordAll,n),0==--r)return p.chlamGenes.currentKW=p.chlamGenes.keywordAll,void(p.loading=!1)})})},p.startJS=function(){$(".collapse").collapse("show");var e=introJs().setOption("skipLabel","Exit");e.setOption("showStepNumbers","false"),e.hideHints(),e.start()},p.buildQuery=function(){var e=n.beginning();p.entrez?p.entrez_text?e+=n.equals("?gene","entrez",p.entrez_text):e+=n.triple("?gene","entrez","?entrez"):e+=n.optional(n.triple("?gene","entrez","?entrez"));var t="";return p.uniprot?p.uniprot_text?t+=n.equals("?protein","uniprot",p.uniprot_text):t+=n.triple("?protein","uniprot","?uniprot"):t+=n.optional(n.triple("?protein","uniprot","?uniprot")),p.pdb?p.pdb_text?t+=n.equals("?protein","pdb",p.pdb_text):t+=n.triple("?protein","pdb","?pdb"):t+=n.optional(n.triple("?protein","pdb","?pdb")),p.refseq?p.refseq_text?t+=n.equals("?protein","refseq",p.refseq_text):t+=n.triple("?protein","refseq","?refseq"):t+=n.optional(n.triple("?protein","refseq","?refseq")),p.mf?(t+=n.addLabel("?protein","mf","?mfLabel"),t+=n.filterEnglish("?mfLabel")):t+=n.optional(n.addLabel("?protein","mf","?mfLabel")+n.filterEnglish("?mfLabel")),p.bp?(t+=n.addLabel("?protein","bp","?bpLabel"),t+=n.filterEnglish("?bpLabel")):t+=n.optional(n.addLabel("?protein","bp","?bpLabel")+n.filterEnglish("?bpLabel")),p.cc?(t+=n.addLabel("?protein","cc","?ccLabel"),t+=n.filterEnglish("?ccLabel")):t+=n.optional(n.addLabel("?protein","cc","?ccLabel")+n.filterEnglish("?ccLabel")),p.hp?t+=n.addLabel("?protein","hp","?host_protein"):t+=n.optional(n.addLabel("?protein","hp","?host_protein")),p.uniprot||p.refseq||p.mf||p.bp||p.cc||p.hp||p.pdb?(e+=n.triple("?gene","protein","?protein"),e+=t):(t=n.triple("?gene","protein","?protein")+t,e+=n.optional(t)),p.mf&&p.mf_text&&(e+=n.filter("?mfLabel",p.mf_text)),p.cc&&p.cc_text&&(e+=n.filter("?ccLabel",p.cc_text)),p.bp&&p.bp_text&&(e+=n.filter("?bpLabel",p.bp_text)),p.hp&&p.hp_text&&(e+=n.filter("?host_protein",p.hp_text)),e+=n.ending(),console.log("QUERY:"),console.log(e),e}}],templateUrl:"/static/build/js/angular_templates/genes-keyword-browser.min.html"}).factory("queryBuilder",function(){var r={entrez:"wdt:P351",uniprot:"wdt:P352",refseq:"wdt:P637",mf:"wdt:P680",cc:"wdt:P681",bp:"wdt:P682",protein:"wdt:P688",hp:"wdt:P129",pdb:"wdt:P638"};return{optional:function(e){return"OPTIONAL {"+e+"}"},filter:function(e,t){return"FILTER(CONTAINS(LCASE("+e+"), '"+t.toLowerCase()+"'))."},equals:function(e,t,n){return e+" "+r[t]+" '"+n+"'."},filterEnglish:function(e){return"FILTER(LANG("+e+") = 'en')."},beginning:function(){return"SELECT ?taxon ?taxid ?taxonLabel ?geneLabel ?entrez ?uniprot ?proteinLabel ?locusTag ?refseq_prot ?gene ?pdb(GROUP_CONCAT(DISTINCT ?aliases) AS ?aliases) (GROUP_CONCAT(DISTINCT ?mfLabel) AS ?mfLabel) (GROUP_CONCAT(DISTINCT ?bpLabel) AS ?bpLabel) (GROUP_CONCAT(DISTINCT ?ccLabel) AS ?ccLabel) (GROUP_CONCAT(DISTINCT ?host_protein) AS ?host_protein) WHERE {?taxon wdt:P171* wd:Q846309.?gene wdt:P279 wd:Q7187.?gene wdt:P703 ?taxon.?gene wdt:P2393 ?locusTag.?gene skos:altLabel ?aliases."},ending:function(){return"?taxon wdt:P685 ?taxid.SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }}GROUP BY ?locusTag ?taxon ?taxid ?taxonLabel ?geneLabel ?entrez ?uniprot ?proteinLabel ?refseq_prot ?gene ?pdb"},addLabel:function(e,t,n){return e+" "+r[t]+"/rdfs:label "+n+"."},triple:function(e,t,n){return e+" "+r[t]+" "+n+"."}}});angular.module("goForm").component("goForm",{controller:["$routeParams","$filter","$location","evidenceCodes","sendToView","pubMedData","allGoTerms","locusTag2QID","orthoData",function(o,i,n,e,u,t,a,g,l){var s=this;s.currentTaxid=o.taxid,s.currentLocusTag=o.locusTag,s.pageCount=0;var r={mf_button:{name:"Molecular Function",QID:"Q14860489"},cc_button:{name:"Cellular Component",QID:"Q5058355"},bp_button:{name:"Biological Process",QID:"Q2996394"}};s.goFormModel={evi:null,pub:null,go:null,proteinQID:null,goClass:r[s.goclass].QID},e.getevidenceCodes(function(o){s.evidence=o}),s.data={},s.projection={},l.getOrthologs(s.currentLocusTag).then(function(o){angular.forEach(o.results.bindings,function(o){var e=o.orthoTaxid.value,n=o.orthoLocusTag.value;s.projection[e]=n==s.currentLocusTag,s.data[e]=n})}),s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.selectGoTerm=function(o,e,n){s.goFormModel.go=o,s.goValue=""},s.selectPub=function(o,e,n){s.goFormModel.pub=o,s.pubValue=""},s.getGoTermsAll=function(o){return s.goTermLoading=!0,a.getGoTermsAll(o,r[s.goclass].QID).then(function(o){return o.data.results.bindings.map(function(o){return o})}).finally(function(){s.goTermLoading=!1})},s.getPMID=function(e){return t.getPMID(e).then(function(o){return[o.data.result[e]].map(function(o){return o})})},s.resetForm=function(){s.pageCount=0,s.goFormModel.evi=null,s.goFormModel.pub=null,s.goFormModel.go=null},s.validateFields=function(){if(s.goFormModel.evi&&s.goFormModel.pub&&s.goFormModel.go)return!0},s.sendData=function(){s.loading=!0;var a=0,l=!0,r=!1,e=!1;return angular.forEach(s.projection,function(o){1==o&&(e=!0)}),e?n.path().includes("authorized")?void angular.forEach(s.projection,function(o,t){o?g.getLocusTag2QID(s.data[t],t).then(function(o){var e={evi:s.goFormModel.evi,pub:s.goFormModel.pub,go:s.goFormModel.go,proteinQID:null,goClass:s.goFormModel.goClass};o.data.results.bindings[0].protein&&(e.proteinQID=i("parseQID")(o.data.results.bindings[0].protein.value));var n="/organism/"+t+"/gene/"+s.data[t]+"/wd_go_edit";console.log(n),u.sendToView(n,e).then(function(o){!1===o.data.authentication?l=!(r=!0):o.data.write_success||(l=!1)}).finally(function(){++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)})}):++a==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(s.loading=!1)):(alert("Please select at least one gene to annotate!"),void(s.loading=!1))}}],templateUrl:"/static/build/js/angular_templates/guided-go-form.min.html",bindings:{goclass:"<",gene:"<"}});angular.module("helpForm").controller("helpFormCtrl",["$http",function(n){"use strict";this.name="",this.email="",this.description="",this.submit=function(){this.submitted=!0,null==this.subject&&(this.subject="Chlambase Help");var t="Name: "+this.name+"\nSender: "+this.email+"\nUrl: "+window.location.href+"\nDescription: "+this.description,e="email?subject="+encodeURIComponent(this.subject)+"&body="+encodeURIComponent(t);n.get(e).then(function(t){console.log("Submitted request!")},function(t){console.log("Error submitting request")})}}]).component("helpForm",{templateUrl:"/static/build/js/angular_templates/help-form.min.html",controller:"helpFormCtrl"});angular.module("hostpathForm").component("hostpathForm",{bindings:{data:"<"},controller:["$location","$routeParams","speciesGenes","pubMedData","sendToView","locusTag2QID","$filter","orthoData",function(t,e,n,o,l,r,u,a){"use strict";var h=this;h.currentTaxid=e.taxid,h.currentLocusTag=e.locusTag,h.pageCount=0,h.orthoData={},h.projection={},a.getOrthologs(h.currentLocusTag).then(function(t){angular.forEach(t.results.bindings,function(t){var e=t.orthoTaxid.value,n=t.orthoLocusTag.value;h.projection[e]=n==h.currentLocusTag,h.orthoData[e]=n})}),h.nextClick=function(){h.pageCount+=1},h.backClick=function(){h.pageCount-=1},h.hostpathAnnotation={proteinQID:null,host_species:null,pub:null,host_protein:null,determination:null},h.species=[{name:"Homo sapiens",qid:"Q15978631",taxid:"9606"},{name:"Mus musculus",qid:"Q83310",taxid:"10090"},{name:"Chlamydia trachomatis D/UW-3/CX",qid:"Q20800373",taxid:"272561"},{name:"Chlamydia trachomatis 434/BU",qid:"Q20800254",taxid:"471472"},{name:"Chlamydia muridarum Nigg",qid:"Q21398805",taxid:"243161"},{name:"Chlamydophila pneumoniae CWL029",qid:"Q21397863",taxid:"115713"}],h.isChlamydia=function(){return null!=h.hostpathAnnotation.host_species&&"Homo sapiens"!=h.hostpathAnnotation.host_species.name&&"Mus musculus"!=h.hostpathAnnotation.host_species.name},h.determination_methods=[{item:"https://www.wikidata.org/entity/Q32860428",itemLabel:"immunoprecipitation evidence",eco:"ECO:0000085"},{item:"https://www.wikidata.org/entity/Q32860432",itemLabel:"co-localization evidence",eco:"ECO:0001026"}],h.getSpeciesGenes=function(){h.proteinValue="",h.pubValue=null,h.hostpathAnnotation={proteinQID:null,host_species:h.hostpathAnnotation.host_species,pub:null,host_protein:null,determination:null};var t=h.hostpathAnnotation.host_species.taxid;n.getSpeciesGenes(t).then(function(t){h.speciesGenes=t.data.results.bindings})},h.selectProtein=function(t,e,n){h.hostpathAnnotation.host_protein=t},h.getPMID=function(e){return o.getPMID(e).then(function(t){return[t.data.result[e]].map(function(t){return t})})},h.selectPub=function(t,e,n){h.pubValue=t},h.sendData=function(){h.loading=!0;var a=0,i=!0,s=!1,e=!1;return angular.forEach(h.projection,function(t){1==t&&(e=!0)}),e?t.path().includes("authorized")?void angular.forEach(h.projection,function(t,o){t?r.getLocusTag2QID(h.orthoData[o],o).then(function(t){var e={proteinQID:null,host_species:h.hostpathAnnotation.host_species,pub:h.hostpathAnnotation.pub,host_protein:h.hostpathAnnotation.host_protein,determination:h.hostpathAnnotation.determination};if(t.data.results.bindings[0].protein&&(e.proteinQID=u("parseQID")(t.data.results.bindings[0].protein.value)),null!=e.proteinQID){var n="/organism/"+o+"/gene/"+h.orthoData[o]+"/wd_hostpath_edit";console.log(n),l.sendToView(n,e).then(function(t){!1===t.data.authentication?i=!(s=!0):t.data.write_success||(i=!1)}).finally(function(){++a==Object.keys(h.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),h.resetForm()):s?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),h.loading=!1)})}}):++a==Object.keys(h.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),h.resetForm()):s?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),h.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(h.loading=!1)):(alert("Please select at least one gene to annotate!"),void(h.loading=!1))},h.resetForm=function(){h.pageCount=0,h.proteinValue="",h.pubValue=null,h.hostpathAnnotation={proteinQID:null,host_species:null,pub:null,host_protein:null,determination:null}}}],templateUrl:"/static/build/js/angular_templates/hostpath-form.min.html"});angular.module("jbrowseView").component("jbrowseView",{template:'<iframe class="jbrowse" ng-src={{$ctrl.jbrowseURI()}}></iframe>',bindings:{taxid:"<",gene:"<",entrez:"<"},controller:function(){var t=this;t.$onInit=function(){},t.$onChanges=function(e){e.entrez&&(t.jbrowseURI=function(){var e=Number(t.gene.genStart)-1e3,n=Number(t.gene.genEnd)+1e3,r="";return e&&n&&t.gene.refseqGenome&&(r="&loc="+t.gene.refseqGenome+":"+e+".."+n),"static/wiki/js/external_js/JBrowse-1.14.1/index.html?data="+t.taxid+"_data&tracks=DNA,genes,operons,mutants&menu=0"+r})}}});angular.module("keywordForm").component("keywordForm",{controller:["$filter","$location","allChlamydiaGenes",function(e,t,l){"use strict";var n=this;n.$onInit=function(){n.selected=null,l.getAllChlamGeneLabels().then(function(e){n.genes=e.data.results.bindings}),n.submitKeyword=function(e){null==e?t.path("keyword/"):t.path("keyword/"+e)},n.onSelect=function(e){t.path("/organism/"+e.taxid.value+"/gene/"+e.locusTag.value)}},n.scrolled=!1,n.keyPressed=function(e){n.keyword=n.keyword.replace("/"," "),13==e.keyCode?n.scrolled?n.onSelect(n.selected):n.geneList&&1==n.geneList.length?n.onSelect(n.geneList[0]):n.submitKeyword(n.keyword):37<=e.keyCode&&e.keyCode<=40&&(n.scrolled=!0)},n.select=function(e,t){n.selected=e,"click"==t.type&&n.onSelect(e)}}],templateUrl:"/static/build/js/angular_templates/keyword-form.min.html"});angular.module("keywordPaginated").component("keywordPaginated",{bindings:{data:"<",orgs:"<"},controller:["$location",function(n){"use strict";this.onSelect=function(t){n.path("/organism/"+t.taxid.value+"/gene/"+t.locusTag.value)},this.longTitle=function(t){return 80<t.length?t:""}}],templateUrl:"/static/build/js/angular_templates/keyword-paginated.min.html"});angular.module("landingPage").component("landingPage",{controller:["allChlamOrgs","recentChlamPubLinks","euroPubData",function(t,e,a){"use strict";var l=this;l.myInterval=5e3,l.noWrapSlides=!1;l.active=0;l.orgList=t.getAllOrgs(),e.getRecentChlamPubLinks().then(function(t){var e=t.data.esearchresult.idlist;l.recentPubs=[],angular.forEach(e,function(t){a.getEuroPubData(t).then(function(t){t.data.resultList.result[0]&&l.recentPubs.push(t.data.resultList.result[0])})})}),document.getElementById("get-started").onclick=function(){var t=introJs().setOption("skipLabel","Skip Tutorial");t.setOption("showStepNumbers","false"),t.hideHints(),t.start()},window.addEventListener("load",function(){if("true"!=localStorage.getItem("tutorial")){var t=introJs().setOption("skipLabel","Skip Tutorial");t.setOption("showStepNumbers","false"),t.hideHints(),t.oncomplete(function(){console.log("COMPLETED"),localStorage.setItem("tutorial","true")}),t.onexit(function(){console.log("EXIT"),localStorage.setItem("tutorial","true")}),t.start()}else console.log("Tutorial already completed")})}],templateUrl:"/static/build/js/angular_templates/landing-page.min.html"});angular.module("localizationForm").component("localizationForm",{controller:["$location","$routeParams","pubMedData","sendToView","locusTag2QID","orthoData","$filter",function(t,a,o,u,n,e,c){"use strict";var s=this;s.currentTaxid=a.taxid,s.currentLocusTag=a.locusTag,s.pageCount=0,s.orthoData={},s.projection={},e.getOrthologs(s.currentLocusTag).then(function(t){angular.forEach(t.results.bindings,function(t){var a=t.orthoTaxid.value,o=t.orthoLocusTag.value;s.projection[a]=o==s.currentLocusTag,s.orthoData[a]=o})}),s.nextClick=function(){s.pageCount+=1},s.backClick=function(){s.pageCount-=1},s.localizationAnnotation={proteinQID:null,pub:null,localizationQID:null},s.map=[{name:"elementary body",qid:["Q51955212"]},{name:"reticulate body",qid:["Q51955198"]},{name:"elementary body AND reticulate body",qid:["Q51955212","Q51955198"]}],s.getPMID=function(a){return o.getPMID(a).then(function(t){return[t.data.result[a]].map(function(t){return t})})},s.selectPub=function(t,a,o){s.pubValue=t},s.sendData=function(){s.loading=!0;var i=0,l=!0,r=!1,a=!1;return angular.forEach(s.projection,function(t){1==t&&(a=!0)}),a?t.path().includes("authorized")?void angular.forEach(s.projection,function(t,e){t?n.getLocusTag2QID(s.orthoData[e],e).then(function(n){angular.forEach(s.localizationAnnotation.localizationQID.qid,function(t){var a={proteinQID:null,pub:s.pubValue.uid,localizationQID:t};if(n.data.results.bindings[0].protein&&(a.proteinQID=c("parseQID")(n.data.results.bindings[0].protein.value)),null!=a.proteinQID){var o="/organism/"+e+"/gene/"+s.orthoData[e]+"/wd_localization_edit";console.log(o),u.sendToView(o,a).then(function(t){!1===t.data.authentication?l=!(r=!0):t.data.write_success||(l=!1)}).finally(function(){++i==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)})}})}):++i==Object.keys(s.projection).length&&(l?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),s.resetForm()):r?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),s.loading=!1)}):(alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(s.loading=!1)):(alert("Please select at least one gene to annotate!"),void(s.loading=!1))},s.resetForm=function(){s.pageCount=0,s.pubValue=null,s.localizationAnnotation={proteinQID:null,pub:null,localizationQID:null}}}],templateUrl:"/static/build/js/angular_templates/localization-form.min.html"});angular.module("mainPage").component("mainPage",{controller:["$filter","$routeParams","$location","allChlamOrgs","wdGetEntities","entrez2QID","GOTerms","InterPro","OperonData","expasyData","mutantData","locusTag2Pub","locusTag2QID","sendToView","expressionTimingData","hostPathogen","RefSeqChrom","allOrgGenes","$http","ECNumbers","pdbData","proteinSequenceData","proteinMass",function(a,e,r,n,o,t,u,i,s,c,l,g,p,d,m,h,v,G,f,b,T,D,x){var P=this;r.path().includes("authorized")&&(console.log("Is authorized"),f.get("validateSession").then(function(e){if(console.log("Login: "+e.data.login),!e.data.login)return alert("Your session has expired!"),void r.path(r.path().replace("authorized/",""))})),P.$onInit=function(){"use strict";P.currentTaxid=e.taxid,P.currentLocusTag=e.locusTag,P.currentGene={locusTag:P.currentLocusTag,taxid:P.currentTaxid},P.annotations={ecnumber:[]},G.getAllOrgGenes(P.currentTaxid).then(function(e){var n=e.data.results.bindings;P.currentAllGenes=a("orderObjectBy")(n,"genStart")}),n.getAllOrgs(function(e){P.orgList=e,P.currentOrg=a("getJsonItemOrg")("taxid",P.currentTaxid,P.orgList),null==P.currentOrg&&(alert("not a valid taxonomy id"),r.path("/"))}),P.hasprotein=!0,p.getLocusTag2QID(P.currentLocusTag,P.currentTaxid).then(function(e){var n=e.data.results.bindings;0<n.length?(P.currentGene.geneQID=a("parseQID")(n[0].gene.value),n[0].protein?P.currentGene.proteinQID=a("parseQID")(n[0].protein.value):P.hasprotein=!1):(alert(P.currentLocusTag+" doesn't seem to be a gene in this genome."),r.path("/organism/"+P.currentTaxid))}).finally(function(){o.wdGetEntities(P.currentGene.geneQID).then(function(e){var n=e.entities[P.currentGene.geneQID];P.currentGene.entrez=n.claims.P351[0].mainsnak.datavalue.value,P.currentGene.geneLabel=n.labels.en.value,P.currentGene.locusTag=n.claims.P2393[0].mainsnak.datavalue.value,P.currentGene.geneDescription=n.descriptions.en.value,P.currentGene.genStart=n.claims.P644[0].mainsnak.datavalue.value,P.currentGene.genEnd=n.claims.P645[0].mainsnak.datavalue.value,P.currentGene.strand=n.claims.P2548[0].mainsnak.datavalue.value,P.currentGene.geneType=n.claims.P279[0].mainsnak.datavalue.value,P.currentGene.geneAliases=[],angular.forEach(n.aliases.en,function(e){e.value!=P.currentGene.locusTag&&P.currentGene.geneAliases.push(e.value)}),s.getOperonData(P.currentGene.entrez).then(function(e){var n=e.data.results.bindings;0<n.length?P.annotations.operon=n:P.annotations.operon=[]})}),P.currentGene.proteinQID&&o.wdGetEntities(P.currentGene.proteinQID).then(function(e){var n=e.entities[P.currentGene.proteinQID];P.currentGene.proteinLabel=n.labels.en.value,P.currentGene.description=n.descriptions.en.value,P.currentGene.uniprot=n.claims.P352[0].mainsnak.datavalue.value,P.currentGene.refseqProt=n.claims.P637[0].mainsnak.datavalue.value,P.currentGene.productType=n.claims.P279[0].mainsnak.datavalue.value,P.currentGene.proteinAliases=[],angular.forEach(n.aliases.en,function(e){P.currentGene.proteinAliases.push(e.value)}),D.getSequence(P.currentGene.refseqProt).then(function(e){P.currentGene.sequenceProt=encodeURIComponent(e)}),x.getMass(P.currentGene.uniprot).then(function(e){P.currentGene.mass=e}),T.getPdbData(P.currentGene.uniprot).then(function(e){1==e.data.results.bindings.length?(P.currentGene.pdbId=e.data.results.bindings[0].pdbId.value,P.currentGene.image=e.data.results.bindings[0].image.value):(P.currentGene.pdbId="None",P.currentGene.image="None")}),i.getInterPro(P.currentGene.uniprot).then(function(e){P.ipData=e,P.annotations.interpro=e}),h.getHostPathogen(P.currentGene.uniprot).then(function(e){P.hostpathData=e,P.annotations.hostpath=e}),u.getGoTerms(P.currentGene.uniprot).then(function(e){P.annotations.go={cellcomp:[],bioproc:[],molfunc:[]},P.annotations.reaction={},P.mf="mf_button",P.bp="bp_button",P.cc="cc_button";var n=e.data.results.bindings;angular.forEach(n,function(e,n){"http://www.wikidata.org/entity/Q5058355"===e.goclass.value&&P.annotations.go.cellcomp.push(e),"http://www.wikidata.org/entity/Q14860489"===e.goclass.value&&P.annotations.go.molfunc.push(e),"http://www.wikidata.org/entity/Q2996394"===e.goclass.value&&P.annotations.go.bioproc.push(e)})}),b.getECNumbers(P.currentGene.uniprot).then(function(e){var n=e.data.results.bindings;angular.forEach(n,function(e){e.hasOwnProperty("ecnumber")&&-1==P.annotations.ecnumber.indexOf(e.ecnumber.value)&&-1==e.ecnumber.value.indexOf("-")&&P.annotations.ecnumber.push(e.ecnumber.value)})}).finally(function(){angular.forEach(P.annotations.ecnumber,function(e){c.getReactionData(e).then(function(e){console.log(e),P.annotations.reaction[e.ecnumber]=e.reaction})});var e={locusTag:P.currentGene.locusTag,taxid:P.currentGene.taxid,ec_number:P.annotations.ecnumber};t(e)})}),v.getRefSeqChrom(P.currentLocusTag).then(function(e){e[0]&&(P.currentGene.refseqGenome=e[0].refSeqChromosome.value)}),m.getExpression(function(e){P.expression=e;var n=a("keywordFilter")(e,P.currentLocusTag);P.currentExpression={},angular.forEach(n[0],function(e,n){"_id"!=n&&"$oid"!=n&&"timestamp"!=n&&(P.currentExpression[n]=e)}),P.annotations.expression=P.currentExpression});var e=P.currentGene.locusTag.replace("_","");g.getlocusTag2Pub(e).then(function(e){P.annotations.pubList=e.data.resultList.result})});var t=function(e){var n=r.path()+"/mg_mutant_view";d.sendToView(n,e).then(function(e){P.annotations.mutants=e.data.mutants})}}}],templateUrl:"/static/build/js/angular_templates/main-page_new.min.html"});angular.module("mutantBatch").component("mutantBatch",{bindings:{data:"<"},controller:["$timeout","uploadFile","Upload",function(l,o,n){"use strict";var u=this;u.uploadFiles=function(a,t){u.f=a,u.errFile=t&&t[0],a&&(o.uploadFile("/wd_upload",a).then(function(t){console.log(t)}),a.upload=n.upload({url:"https://angular-file-upload-cors-srv.appspot.com/upload",data:{file:a}}),a.upload.then(function(t){l(function(){a.result=t.data})},function(t){0<t.status&&(u.errorMsg=t.status+": "+t.data)},function(t){a.progress=Math.min(100,parseInt(100*t.loaded/t.total))}))},u.metaModel={}}],templateUrl:"/static/build/js/angular_templates/mutant-batch.min.html"});angular.module("mutantForm").component("mutantForm",{bindings:{data:"<"},controller:["pubMedData","$filter","$location","$routeParams","locusTag2QID","wdGetEntities","sendToView","RefSeqChrom",function(n,a,o,t,e,i,u,m){var r=this;e.getLocusTag2QID(t.locusTag,t.taxid).then(function(n){var t=n.data.results.bindings;0<t.length&&(r.geneQID=a("parseQID")(t[0].gene.value))}).finally(function(){i.wdGetEntities(r.geneQID).then(function(n){var t=n.entities[r.geneQID];r.genStart=t.claims.P644[0].mainsnak.datavalue.value,r.genEnd=t.claims.P645[0].mainsnak.datavalue.value})}),m.getRefSeqChrom(t.locusTag).then(function(n){n[0]&&(r.chromosome=n[0].refSeqChromosome.value,r.mutantAnnotation&&(r.mutantAnnotation.chromosome=r.chromosome))}),r.seq_ontology_map={synonymous:"SO:0001815","non-synonymous":"SO:0001816",non_transcribed_region:"SO:0000183",silent_mutation:"SO:0001017",stop_gained:"SO:0001587"},r.seq_ontology_list=["synonymous","non-synonymous","non_transcribed_region","silent_mutation","stop_gained"],r.mutant_type_map={"chemically induced mutation":"EFO_0000370",transposition:"EFO_0004021",recombination:"EFO_0004293",insertion:"EFO_0004016"},r.mutant_type_list=["chemically induced mutation","transposition","recombination","insertion"],r.getPMID=function(t){return n.getPMID(t).then(function(n){return[n.data.result[t]].map(function(n){return n})})},r.selectPub=function(n,t,a){r.mutantAnnotation.pub=n.uid,r.pubtitle=n.title,r.pubauthor=n.authors[0].name,r.pubdate=n.pubdate},r.$onInit=function(){r.reftype="PMID",r.pubtitle="",r.pubauthor="",r.pubdate="",r.pageCount=0;var n=null;r.mutantAnnotation&&r.mutantAnnotation.name&&(n=r.mutantAnnotation.name),r.mutantAnnotation={taxid:t.taxid,locusTag:t.locusTag,coordinate:{},chromosome:r.chromosome,name:n}},r.resetForm=function(){r.mutantAnnotation.name=null,r.$onInit()},r.sendData=function(n){if(r.loading=!0,n.action="annotate",o.path().includes("authorized")){var t=o.path().replace("/authorized/","")+"/wd_mutant_edit";console.log(t),u.sendToView(t,n).then(function(n){!0===n.data.write_success?(console.log("SUCCESS"),console.log(n),alert("Successfully Annotated! Well Done! The annotation will appear here soon."),r.resetForm()):!1===n.data.authentication?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):(console.log("FAILURE: UNKNOWN"),console.log(n),alert("Something went wrong.  Give it another shot!"))}).finally(function(){r.loading=!1})}else alert("Please authorize ChlamBase to edit Wikidata on your behalf!")},r.nextClick=function(){r.pageCount+=1},r.backClick=function(){r.pageCount-=1},r.changeType=function(){var n=r.mutantAnnotation.mutation_name;r.$onInit(),r.mutantAnnotation.mutation_name=n,r.mutantAnnotation.mutation_id=r.mutant_type_map[n]},r.validatePosition=function(){return r.mutantAnnotation.coordinate.start>=r.genStart&&r.mutantAnnotation.coordinate.start<=r.genEnd},r.validateEndPosition=function(){return r.validatePosition()&&r.mutantAnnotation.coordinate.end>=r.mutantAnnotation.coordinate.start&&r.mutantAnnotation.coordinate.end<=r.genEnd},r.validateBase=function(){return r.mutantAnnotation.ref_base&&r.mutantAnnotation.variant_base&&r.mutantAnnotation.ref_base!=r.mutantAnnotation.variant_base},r.validateFields=function(){return!(!r.mutantAnnotation.name||!r.mutantAnnotation.mutation_name||"DOI"==r.reftype&&!r.mutantAnnotation.doi||"PMID"==r.reftype&&!r.mutantAnnotation.pub||!r.validatePosition())&&("chemically induced mutation"==r.mutantAnnotation.mutation_name?r.validateBase()&&r.mutantAnnotation.snv_name&&r.mutantAnnotation.aa_effect:"transposition"==r.mutantAnnotation.mutation_name||"insertion"==r.mutantAnnotation.mutation_name?r.mutantAnnotation.percent_gene_intact&&r.mutantAnnotation.insert_direction:r.validateEndPosition()&&r.mutantAnnotation.genes_inserted&&r.mutantAnnotation.insert_direction)}}],templateUrl:"/static/build/js/angular_templates/mutant-form.min.html"});angular.module("operonForm").component("operonForm",{controller:["$routeParams","$location","$filter","pubMedData","locusTag2QID","allOrgOperons","sendToView","tax2QID",function(e,n,o,a,t,l,r,u){"use strict";var i=this;i.$onInit=function(){i.currentTaxid=e.taxid,i.currentLocusTag=e.locusTag,i.alerts={success:!1,error:!1},i.opFormModel={name:null,pub:[],genes:[],geneQID:i.gene.geneQID,taxid:i.currentTaxid,taxLabel:o("taxid2Name")(i.currentTaxid),taxQID:null,strand:null},u.getQID(i.currentTaxid).then(function(e){i.opFormModel.taxQID=o("parseQID")(e[0].taxon.value),i.opFormModel.strand=i.gene.strand.id}),i.pageCount=0,i.nextClick=function(){i.pageCount+=1},i.backClick=function(){i.pageCount-=1},i.getPMID=function(o){return a.getPMID(o).then(function(e){return[e.data.result[o]].map(function(e){return e})})},i.selectPub=function(e,o,n){i.opFormModel.pub.push(e),i.pubValue=""},i.removePub=function(e){console.log(e);var n,a,o,t;i.opFormModel.pub=(n="uid",a=e.uid,o=i.opFormModel.pub,t=[],angular.forEach(o,function(e,o){e[n]!=a&&t.push(e)}),t)},i.selectGene=function(e,o,n){i.opFormModel.genes.push({gene:e.gene.value,locusTag:e.locusTag.value}),i.geneValue=""},i.removeGene=function(e){var n,a,o,t;i.opFormModel.genes=(n="locusTag",a=e.locusTag,o=i.opFormModel.genes,t=[],angular.forEach(o,function(e,o){e[n]!=a&&t.push(e)}),t)},i.validateFields=function(){if(i.opFormModel.name&&i.opFormModel.pub&&0<i.opFormModel.genes.length)return!0},i.sendData=function(e){i.loading=!0;var o=n.path().replace("/authorized/","")+"/wd_operon_edit";if(!n.path().includes("authorized"))return alert("Please authorize ChlamBase to edit Wikidata on your behalf!"),void(i.loading=!1);r.sendToView(o,e).then(function(e){!0===e.data.operonWrite_success?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),i.resetForm()):!1===e.data.authentication?(console.log("FAILURE: AUTHENTICATION"),console.log(e),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!")}).finally(function(){i.loading=!1})},i.resetForm=function(){i.pageCount=0,i.opFormModel.name=null,i.opFormModel.pub=null,i.opFormModel.genes=[],i.geneValue="",i.pubValue=""}}}],templateUrl:"/static/build/js/angular_templates/operon-form.min.html",bindings:{allorggenes:"<",gene:"<"}});angular.module("organismForm").component("organismForm",{controller:["$location",function(o){"use strict";this.onSelect=function(n){o.path("/organism/"+n.taxid)}}],templateUrl:"/static/build/js/angular_templates/organism-form.min.html",bindings:{orgs:"<"}});angular.module("organismTree").component("organismTree",{controller:function(){"use strict";var i=this;i.$onInit=function(){google.charts.load("current",{packages:["orgchart"]}),google.charts.setOnLoadCallback(function(){i.data=new google.visualization.DataTable,i.data.addColumn("string","Name"),i.data.addColumn("string","Parent"),i.data.addRows([[{v:"Chlamydia",f:'<div class="btn btn-default treeNode nohover" ><i>Chlamydia</i></div>'},""],[{v:"Chlamydia trachomatis",f:'<div class="btn btn-default treeNode nohover" ><i>Chlamydia trachomatis</i></div>'},"Chlamydia"],[{v:"Chlamydia muridarum",f:'<div class="btn btn-default treeNode nohover" ><i>Chlamydia muridarum</i></div>'},"Chlamydia"],[{v:"Chlamydia pneumoniae",f:'<div class="btn btn-default treeNode nohover" ><i>Chlamydia pneumoniae</i></div>'},"Chlamydia"],[{v:"Chlamydia pneumoniae CWL029",f:'<div class="btn btn-default treeNode link"><a href="/organism/115713/" ><i>Chlamydia pneumoniae CWL029</i></div>'},"Chlamydia pneumoniae"],[{v:"Chlamydia muridarum Nigg",f:'<div class="btn btn-default treeNode link"><a href="/organism/243161/" ><i>Chlamydia muridarum Nigg</i></div>'},"Chlamydia muridarum"],[{v:"Chlamydia trachomatis 434/BU",f:'<div class="btn btn-default treeNode link"><a href="/organism/471472/" ><i>Chlamydia trachomatis 434/BU</i></a></div>'},"Chlamydia trachomatis"],[{v:"Chlamydia trachomatis D/UW-3/CX",f:'<div class="btn btn-default treeNode link"><a href="/organism/272561/" ><i>Chlamydia trachomatis D/UW-3/CX</i></a></div>'},"Chlamydia trachomatis"]]),a=new google.visualization.OrgChart(document.getElementById("chart_div")),console.log(a),a.draw(i.data,{allowHtml:!0,size:"medium"});var a})}},templateUrl:"/static/build/js/angular_templates/organism-tree.min.html",bindings:{orgs:"<"}});angular.module("organismView").component("organismView",{templateUrl:"/static/build/js/angular_templates/organism-view.min.html",controller:["$routeParams",function(i){"use strict";this.currentTaxid=i.taxid}],bindings:{org:"<"}});angular.module("pdbForm").component("pdbForm",{controller:["pubMedData","$location","orthoData","locusTag2QID","$filter","sendToView",function(n,t,e,r,u,d){"use strict";var c=this;c.$onInit=function(){c.pdbAnnotation={id:null,pub:null,qid:c.gene.proteinQID,image:null},c.pageCount=0,c.nextClick=function(){c.pageCount+=1},c.backClick=function(){c.pageCount-=1},c.orthoData={},c.projection={},e.getOrthologs(c.gene.locusTag).then(function(n){angular.forEach(n.results.bindings,function(n){var t=n.orthoTaxid.value,e=n.orthoLocusTag.value;c.projection[t]=e==c.gene.locusTag,c.orthoData[t]=e})}),c.getPMID=function(t){return n.getPMID(t).then(function(n){return[n.data.result[t]].map(function(n){return n})})},c.selectPub=function(n,t,e){c.pdbAnnotation.pub=n},c.validateId=function(){return c.pdbAnnotation.id&&4==c.pdbAnnotation.id.length&&1==c.pdbAnnotation.id.match(/[0-9][0-9A-Za-z]{3}/).length},c.sendData=function(){c.loading=!0;var a=0,i=!0,l=!1,t=!1;if(angular.forEach(c.projection,function(n){1==n&&(t=!0)}),!t)return alert("Please select at least one gene to annotate!"),void(c.loading=!1);angular.forEach(c.projection,function(n,o){n?r.getLocusTag2QID(c.orthoData[o],o).then(function(n){var t={id:c.pdbAnnotation.id,pub:c.pdbAnnotation.pub.uid,qid:null,image:{front:"https://www.ebi.ac.uk/pdbe/static/entry/{}_deposited_chain_front_image-800x800.png".replace("{}",c.pdbAnnotation.id),side:"https://www.ebi.ac.uk/pdbe/static/entry/{}_deposited_chain_side_image-800x800.png".replace("{}",c.pdbAnnotation.id),top:"https://www.ebi.ac.uk/pdbe/static/entry/{}_deposited_chain_top_image-800x800.png".replace("{}",c.pdbAnnotation.id)}};if(n.data.results.bindings[0].protein&&(t.qid=u("parseQID")(n.data.results.bindings[0].protein.value)),null!=t.qid){console.log(t);var e="/organism/"+o+"/gene/"+c.orthoData[o]+"/wd_pdb_edit";console.log(e),d.sendToView(e,t).then(function(n){!1===n.data.authentication?i=!(l=!0):n.data.write_success||(i=!1)}).finally(function(){++a==Object.keys(c.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),c.resetForm()):l?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),c.loading=!1)})}}):++a==Object.keys(c.projection).length&&(i?(alert("Successfully Annotated! Well Done! The annotation will appear here in a few minutes."),c.resetForm()):l?(console.log("FAILURE: AUTHENTICATION"),alert("Please authorize ChlamBase to edit Wikidata on your behalf!")):alert("Something went wrong.  Give it another shot!"),c.loading=!1)})},c.resetForm=function(){c.pageCount=0,c.pdbAnnotation.id=null,c.pubValue="",c.pdbAnnotation.pub=null,c.image=null}}}],templateUrl:"/static/build/js/angular_templates/pdb-form.min.html",bindings:{gene:"<"}});angular.module("proteinView").component("proteinView",{templateUrl:"/static/build/js/angular_templates/protein-view.min.html",controller:function(){"use strict"},bindings:{protein:"<"}});